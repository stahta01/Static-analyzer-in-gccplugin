../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 23%)
 phase parsing                      :   0.04 ( 44%)   0.07 ( 70%)   0.10 ( 56%)  2690k ( 48%)
 phase opt and generate             :   0.05 ( 56%)   0.03 ( 30%)   0.08 ( 44%)  1574k ( 28%)
 dump files                         :   0.00 (  0%)   0.01 ( 10%)   0.00 (  0%)     0  (  0%)
 callgraph construction             :   0.01 ( 11%)   0.01 ( 10%)   0.02 ( 11%)   334k (  6%)
 callgraph optimization             :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)   296  (  0%)
 callgraph ipa passes               :   0.03 ( 33%)   0.02 ( 20%)   0.05 ( 28%)   678k ( 12%)
 lto stream compression             :   0.00 (  0%)   0.01 ( 10%)   0.00 (  0%)     0  (  0%)
 lto stream output                  :   0.01 ( 11%)   0.00 (  0%)   0.01 (  6%)     0  (  0%)
 ipa lto gimple out                 :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)    11k (  0%)
 preprocessing                      :   0.03 ( 33%)   0.04 ( 40%)   0.04 ( 22%)  1144k ( 21%)
 lexical analysis                   :   0.01 ( 11%)   0.01 ( 10%)   0.01 (  6%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.01 ( 10%)   0.01 (  6%)   751k ( 13%)
 parser struct body                 :   0.00 (  0%)   0.00 (  0%)   0.02 ( 11%)   146k (  3%)
 parser function body               :   0.00 (  0%)   0.01 ( 10%)   0.02 ( 11%)   549k ( 10%)
 tree gimplify                      :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)   393k (  7%)
 tree CFG construction              :   0.01 ( 11%)   0.00 (  0%)   0.00 (  0%)   173k (  3%)
 tree SSA other                     :   0.01 ( 11%)   0.00 (  0%)   0.02 ( 11%)  6136  (  0%)
 tree forward propagate             :   0.00 (  0%)   0.00 (  0%)   0.01 (  6%)  1624  (  0%)
 TOTAL                              :   0.09          0.10          0.18         5573k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)  2157k ( 93%)
 phase stream out                   :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)     0  (  0%)
 ipa lto gimple out                 :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)     0  (  0%)
 TOTAL                              :   0.01          0.00          0.01         2324k
../Compiler/newplugin.so 11.2.0 
==============breakpoint=========
/root/x21321219/new_gccplugin/Test/test.c 685
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=11
node:= 3 
 	next_branch :=4
	next_branch :=6
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=9
	next_branch :=10
set breakpoint free stmt igone
In function ‘main’:
test.c:683:17: warning: use location
  683 |                 free(target);
      |                 ^
_11 = (long unsigned int) i_27;
set breakpoint /root/x21321219/new_gccplugin/Test/test.c 685
_12 = _11 * 8;
set breakpoint /root/x21321219/new_gccplugin/Test/test.c 685
_13 = argv_46(D) + _12;
set breakpoint /root/x21321219/new_gccplugin/Test/test.c 685
# VUSE <.MEM_88>
_14 = *_13;
set breakpoint /root/x21321219/new_gccplugin/Test/test.c 685
# .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
set breakpoint /root/x21321219/new_gccplugin/Test/test.c 685
set breakpoint free stmt igone
test.c:689:17: warning: use location
  689 |                 free(cmd);
      |                 ^
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=11
node:= 11 
 	next_branch :=3
	next_branch :=12
node:= 12 
 	next_branch :=14
node:= 13 
 	next_branch :=14
node:= 14 
 	next_branch :=13
	next_branch :=15
=======node_fun:session_create=========
node:= 2 
 	next_branch :=6
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=7
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=3
	next_branch :=7
node:= 7 
 	next_branch :=8
	next_branch :=18
node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 node:= 10 
 	next_branch :=11
	next_branch :=12
node:= 11 
 node:= 12 
 	next_branch :=13
	next_branch :=14
node:= 13 
 	next_branch :=14
node:= 14 
 	next_branch :=16
node:= 15 
 	next_branch :=16
node:= 16 
 	next_branch :=15
	next_branch :=17
node:= 17 
 	next_branch :=18
node:= 18 
 	next_branch :=19
	next_branch :=20
node:= 19 
 node:= 20 
 	next_branch :=21
	next_branch :=24
node:= 21 
 	next_branch :=22
	next_branch :=23
node:= 22 
 	next_branch :=25
node:= 23 
 	next_branch :=24
node:= 24 
 	next_branch :=25
=======node_fun:session_new=========
node:= 2 
 	next_branch :=4
	next_branch :=3
node:= 3 
 	next_branch :=4
=======node_fun:session_attach=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
=======node_fun:window_create1=========
node:= 2 
 	next_branch :=6
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=7
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=3
	next_branch :=7
node:= 7 
 	next_branch :=8
	next_branch :=18
node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 node:= 10 
 	next_branch :=11
	next_branch :=12
node:= 11 
 node:= 12 
 	next_branch :=13
	next_branch :=14
node:= 13 
 	next_branch :=14
node:= 14 
 	next_branch :=16
node:= 15 
 	next_branch :=16
node:= 16 
 	next_branch :=15
	next_branch :=17
node:= 17 
 	next_branch :=18
=======node_fun:join_pane_exec=========
node:= 2 
 	next_branch :=7
	next_branch :=3
node:= 3 
 	next_branch :=7
	next_branch :=4
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=7
node:= 6 
 	next_branch :=7
=======node_fun:session_select=========
node:= 2 
 	next_branch :=5
	next_branch :=3
node:= 3 
 	next_branch :=5
	next_branch :=4
node:= 4 
 	next_branch :=5
=======node_fun:server_kill_window=========
node:= 2 
 	next_branch :=10
node:= 3 
 	next_branch :=5
	next_branch :=4
node:= 4 
 	next_branch :=5
	next_branch :=8
node:= 5 
 	next_branch :=9
node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 	next_branch :=9
node:= 8 
 	next_branch :=6
	next_branch :=9
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=3
	next_branch :=11
=======node_fun:server_destroy_session_group=========
node:= 2 
 	next_branch :=7
	next_branch :=3
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=6
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=7
set breakpoint free stmt igone
In function ‘server_destroy_session_group’:
test.c:485:17: warning: use location
  485 |                 xfree(sg);
      |                 ^
=======node_fun:session_detach=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
=======node_fun:session_destroy=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 node:= 4 
 	next_branch :=9
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 	next_branch :=8
node:= 7 
 	next_branch :=8
set breakpoint free stmt igone
In function ‘session_destroy’:
test.c:449:17: warning: use location
  449 |                 ARRAY_TRUNC(&sessions, 1);
      |                 ^
node:= 8 
 	next_branch :=9
node:= 9 
 	next_branch :=10
	next_branch :=11
node:= 10 
 	next_branch :=5
	next_branch :=11
node:= 11 
 	next_branch :=13
node:= 12 
 	next_branch :=13
node:= 13 
 	next_branch :=12
	next_branch :=15
node:= 14 
 	next_branch :=15
node:= 15 
 	next_branch :=14
	next_branch :=16
set breakpoint free stmt igone
test.c:458:9: warning: use location
  458 |         xfree(s->name);
      |         ^
set breakpoint free stmt igone
test.c:459:9: warning: use location
  459 |         xfree(s);
      |         ^
=======node_fun:session_group_synchronize_from=========
node:= 2 
 	next_branch :=8
	next_branch :=3
node:= 3 
 	next_branch :=7
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=7
node:= 7 
 	next_branch :=4
	next_branch :=8
=======node_fun:session_group_synchronize_to=========
node:= 2 
 	next_branch :=8
	next_branch :=3
node:= 3 
 	next_branch :=6
node:= 4 
 	next_branch :=7
	next_branch :=5
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=4
	next_branch :=7
node:= 7 
 	next_branch :=8
=======node_fun:session_group_synchronize1=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=16
node:= 4 
 	next_branch :=6
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=5
	next_branch :=7
node:= 7 
 	next_branch :=11
node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=11
node:= 11 
 	next_branch :=8
	next_branch :=12
node:= 12 
 	next_branch :=14
node:= 13 
 	next_branch :=14
node:= 14 
 	next_branch :=13
	next_branch :=15
node:= 15 
 	next_branch :=16
=======node_fun:winlink_remove=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
set breakpoint free stmt igone
In function ‘winlink_remove’:
test.c:350:17: warning: use location
  350 |                 xfree(wl->status_text);
      |                 ^
node:= 4 
 	next_branch :=5
	next_branch :=6
set breakpoint free stmt igone
test.c:351:9: warning: use location
  351 |         xfree(wl);
      |         ^
node:= 5 
 node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 	next_branch :=8
=======node_fun:window_destroy=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 node:= 4 
 	next_branch :=9
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 	next_branch :=8
node:= 7 
 	next_branch :=8
set breakpoint free stmt igone
In function ‘window_destroy’:
test.c:336:17: warning: use location
  336 |                 ARRAY_TRUNC(&windows, 1);
      |                 ^
node:= 8 
 	next_branch :=9
node:= 9 
 	next_branch :=10
	next_branch :=11
node:= 10 
 	next_branch :=5
	next_branch :=11
node:= 11 
 	next_branch :=12
	next_branch :=13
node:= 12 
 	next_branch :=13
set breakpoint free stmt igone
test.c:339:17: warning: use location
  339 |                 xfree(w->name);
      |                 ^
set breakpoint free stmt igone
test.c:340:9: warning: use location
  340 |         xfree(w);
      |         ^
=======node_fun:winlink_stack_push=========
node:= 2 
 	next_branch :=7
	next_branch :=3
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=6
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=7
=======node_fun:winlink_stack_remove=========
node:= 2 
 	next_branch :=11
	next_branch :=3
node:= 3 
 	next_branch :=10
node:= 4 
 	next_branch :=5
	next_branch :=9
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 	next_branch :=8
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=11
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=4
	next_branch :=11
=======node_fun:session_index=========
node:= 2 
 	next_branch :=5
node:= 3 
 	next_branch :=6
	next_branch :=4
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=3
	next_branch :=6
=======node_fun:session_find=========
node:= 2 
 	next_branch :=6
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=7
	next_branch :=5
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=3
	next_branch :=7
=======node_fun:session_group_remove=========
node:= 2 
 	next_branch :=16
	next_branch :=3
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=6
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=7
	next_branch :=11
node:= 7 
 	next_branch :=8
	next_branch :=9
node:= 8 
 	next_branch :=10
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=11
node:= 11 
 	next_branch :=12
	next_branch :=16
node:= 12 
 	next_branch :=13
	next_branch :=14
node:= 13 
 	next_branch :=15
node:= 14 
 	next_branch :=15
node:= 15 
 	next_branch :=16
set breakpoint free stmt igone
In function ‘session_group_remove’:
test.c:269:17: warning: use location
  269 |                 xfree(sg);
      |                 ^
=======node_fun:window_index=========
node:= 2 
 	next_branch :=5
node:= 3 
 	next_branch :=6
	next_branch :=4
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=3
	next_branch :=6
=======node_fun:winlink_add=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=6
	next_branch :=5
node:= 4 
 	next_branch :=6
	next_branch :=5
node:= 5 
 	next_branch :=6
=======node_fun:session_group_add=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
=======node_fun:session_group_find=========
node:= 2 
 	next_branch :=8
node:= 3 
 	next_branch :=6
node:= 4 
 	next_branch :=9
	next_branch :=5
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=4
	next_branch :=7
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=3
	next_branch :=9
=======node_fun:session_has=========
node:= 2 
 	next_branch :=5
node:= 3 
 	next_branch :=6
	next_branch :=4
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=3
	next_branch :=6
=======node_fun:cmd_find_pane=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=9
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 	next_branch :=9
node:= 8 
 	next_branch :=9
=======node_fun:winlink_find_by_window=========
node:= 2 
 	next_branch :=5
node:= 3 
 	next_branch :=6
	next_branch :=4
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=3
	next_branch :=6
=======node_fun:winlink_next_index=========
node:= 2 
 	next_branch :=3
node:= 3 
 	next_branch :=7
	next_branch :=4
node:= 4 
 	next_branch :=6
	next_branch :=5
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=8
	next_branch :=7
node:= 8 
 	next_branch :=3
=======node_fun:winlink_find_by_index=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 =======node_fun:xrealloc=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 =======node_fun:winlinks_RB_MINMAX=========
node:= 2 
 	next_branch :=8
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=6
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=8
node:= 8 
 	next_branch :=3
	next_branch :=7
=======node_fun:winlinks_RB_NEXT=========
node:= 2 
 	next_branch :=3
	next_branch :=6
node:= 3 
 	next_branch :=5
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=4
	next_branch :=13
node:= 6 
 	next_branch :=7
	next_branch :=10
node:= 10 
 	next_branch :=14
node:= 7 
 	next_branch :=8
	next_branch :=10
node:= 8 
 	next_branch :=13
node:= 9 
 	next_branch :=14
node:= 14 
 	next_branch :=11
	next_branch :=12
node:= 11 
 	next_branch :=9
	next_branch :=12
node:= 12 
 	next_branch :=13
=======node_fun:winlinks_RB_FIND=========
node:= 2 
 	next_branch :=8
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=7
node:= 5 
 	next_branch :=6
	next_branch :=9
node:= 6 
 	next_branch :=7
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=3
	next_branch :=9
=======node_fun:winlinks_RB_REMOVE=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=27
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=27
node:= 6 
 	next_branch :=7
node:= 7 
 	next_branch :=39
	next_branch :=8
node:= 39 
 	next_branch :=7
node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=11
	next_branch :=14
node:= 11 
 	next_branch :=12
	next_branch :=13
node:= 12 
 	next_branch :=15
node:= 13 
 	next_branch :=15
node:= 14 
 	next_branch :=15
node:= 15 
 	next_branch :=16
	next_branch :=17
node:= 16 
 	next_branch :=17
node:= 17 
 	next_branch :=18
	next_branch :=21
node:= 18 
 	next_branch :=19
	next_branch :=20
node:= 19 
 	next_branch :=22
node:= 20 
 	next_branch :=22
node:= 21 
 	next_branch :=22
node:= 22 
 	next_branch :=23
	next_branch :=24
node:= 23 
 	next_branch :=24
node:= 24 
 	next_branch :=37
	next_branch :=26
node:= 37 
 	next_branch :=25
node:= 25 
 	next_branch :=38
	next_branch :=26
node:= 38 
 	next_branch :=25
node:= 26 
 	next_branch :=34
node:= 27 
 	next_branch :=28
	next_branch :=29
node:= 28 
 	next_branch :=29
node:= 29 
 	next_branch :=30
	next_branch :=33
node:= 30 
 	next_branch :=31
	next_branch :=32
node:= 31 
 	next_branch :=34
node:= 32 
 	next_branch :=34
node:= 33 
 	next_branch :=34
node:= 34 
 	next_branch :=35
	next_branch :=36
node:= 35 
 	next_branch :=36
=======node_fun:winlinks_RB_INSERT=========
node:= 2 
 	next_branch :=8
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=7
node:= 5 
 	next_branch :=6
	next_branch :=15
node:= 6 
 	next_branch :=7
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=3
	next_branch :=9
node:= 9 
 	next_branch :=10
	next_branch :=13
node:= 10 
 	next_branch :=11
	next_branch :=12
node:= 11 
 	next_branch :=14
node:= 12 
 	next_branch :=14
node:= 13 
 	next_branch :=14
node:= 14 
 	next_branch :=15
=======node_fun:winlinks_RB_REMOVE_COLOR=========
node:= 2 
 	next_branch :=82
node:= 3 
 	next_branch :=4
	next_branch :=40
node:= 4 
 	next_branch :=5
	next_branch :=13
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 	next_branch :=7
node:= 7 
 	next_branch :=8
	next_branch :=11
node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 	next_branch :=12
node:= 10 
 	next_branch :=12
node:= 11 
 	next_branch :=12
node:= 12 
 	next_branch :=13
node:= 13 
 	next_branch :=15
	next_branch :=14
node:= 14 
 	next_branch :=15
	next_branch :=18
node:= 15 
 	next_branch :=17
	next_branch :=16
node:= 16 
 	next_branch :=17
	next_branch :=18
node:= 17 
 	next_branch :=76
node:= 18 
 	next_branch :=20
	next_branch :=19
node:= 19 
 	next_branch :=20
	next_branch :=30
node:= 20 
 	next_branch :=21
	next_branch :=22
node:= 21 
 	next_branch :=22
node:= 22 
 	next_branch :=23
	next_branch :=24
node:= 23 
 	next_branch :=24
node:= 24 
 	next_branch :=25
	next_branch :=28
node:= 25 
 	next_branch :=26
	next_branch :=27
node:= 26 
 	next_branch :=29
node:= 27 
 	next_branch :=29
node:= 28 
 	next_branch :=29
node:= 29 
 	next_branch :=30
node:= 30 
 	next_branch :=31
	next_branch :=32
node:= 31 
 	next_branch :=32
node:= 32 
 	next_branch :=33
	next_branch :=34
node:= 33 
 	next_branch :=34
node:= 34 
 	next_branch :=35
	next_branch :=38
node:= 35 
 	next_branch :=36
	next_branch :=37
node:= 36 
 	next_branch :=39
node:= 37 
 	next_branch :=39
node:= 38 
 	next_branch :=39
node:= 39 
 	next_branch :=79
node:= 40 
 	next_branch :=41
	next_branch :=49
node:= 41 
 	next_branch :=42
	next_branch :=43
node:= 42 
 	next_branch :=43
node:= 43 
 	next_branch :=44
	next_branch :=47
node:= 44 
 	next_branch :=45
	next_branch :=46
node:= 45 
 	next_branch :=48
node:= 46 
 	next_branch :=48
node:= 47 
 	next_branch :=48
node:= 48 
 	next_branch :=49
node:= 49 
 	next_branch :=51
	next_branch :=50
node:= 50 
 	next_branch :=51
	next_branch :=54
node:= 51 
 	next_branch :=53
	next_branch :=52
node:= 52 
 	next_branch :=53
	next_branch :=54
node:= 53 
 	next_branch :=76
node:= 54 
 	next_branch :=56
	next_branch :=55
node:= 55 
 	next_branch :=56
	next_branch :=66
node:= 56 
 	next_branch :=57
	next_branch :=58
node:= 57 
 	next_branch :=58
node:= 58 
 	next_branch :=59
	next_branch :=60
node:= 59 
 	next_branch :=60
node:= 60 
 	next_branch :=61
	next_branch :=64
node:= 61 
 	next_branch :=62
	next_branch :=63
node:= 62 
 	next_branch :=65
node:= 63 
 	next_branch :=65
node:= 64 
 	next_branch :=65
node:= 65 
 	next_branch :=66
node:= 66 
 	next_branch :=67
	next_branch :=68
node:= 67 
 	next_branch :=68
node:= 68 
 	next_branch :=69
	next_branch :=70
node:= 69 
 	next_branch :=70
node:= 70 
 	next_branch :=71
	next_branch :=74
node:= 71 
 	next_branch :=72
	next_branch :=73
node:= 72 
 	next_branch :=75
node:= 73 
 	next_branch :=75
node:= 74 
 	next_branch :=75
node:= 75 
 	next_branch :=79
node:= 76 
 	next_branch :=82
node:= 82 
 	next_branch :=78
	next_branch :=77
node:= 77 
 	next_branch :=78
	next_branch :=79
node:= 78 
 	next_branch :=3
	next_branch :=79
node:= 79 
 	next_branch :=80
	next_branch :=81
node:= 80 
 	next_branch :=81
=======node_fun:winlinks_RB_INSERT_COLOR=========
node:= 2 
 	next_branch :=47
node:= 3 
 	next_branch :=4
	next_branch :=24
node:= 4 
 	next_branch :=5
	next_branch :=7
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 	next_branch :=44
node:= 7 
 	next_branch :=8
	next_branch :=16
node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=11
	next_branch :=14
node:= 11 
 	next_branch :=12
	next_branch :=13
node:= 12 
 	next_branch :=15
node:= 13 
 	next_branch :=15
node:= 14 
 	next_branch :=15
node:= 15 
 	next_branch :=16
node:= 16 
 	next_branch :=17
	next_branch :=18
node:= 17 
 	next_branch :=18
node:= 18 
 	next_branch :=19
	next_branch :=22
node:= 19 
 	next_branch :=20
	next_branch :=21
node:= 20 
 	next_branch :=23
node:= 21 
 	next_branch :=23
node:= 22 
 	next_branch :=23
node:= 23 
 	next_branch :=44
node:= 24 
 	next_branch :=25
	next_branch :=27
node:= 25 
 	next_branch :=26
	next_branch :=27
node:= 26 
 	next_branch :=44
node:= 27 
 	next_branch :=28
	next_branch :=36
node:= 28 
 	next_branch :=29
	next_branch :=30
node:= 29 
 	next_branch :=30
node:= 30 
 	next_branch :=31
	next_branch :=34
node:= 31 
 	next_branch :=32
	next_branch :=33
node:= 32 
 	next_branch :=35
node:= 33 
 	next_branch :=35
node:= 34 
 	next_branch :=35
node:= 35 
 	next_branch :=36
node:= 36 
 	next_branch :=37
	next_branch :=38
node:= 37 
 	next_branch :=38
node:= 38 
 	next_branch :=39
	next_branch :=42
node:= 39 
 	next_branch :=40
	next_branch :=41
node:= 40 
 	next_branch :=43
node:= 41 
 	next_branch :=43
node:= 42 
 	next_branch :=43
node:= 43 
 	next_branch :=44
node:= 44 
 	next_branch :=47
node:= 47 
 	next_branch :=45
	next_branch :=46
node:= 45 
 	next_branch :=3
	next_branch :=46
=======node_fun:winlink_cmp=========
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 13 
===============The second stage : Mapping stmt=================
# .MEM_86 = VDEF <.MEM_72>
target_48 = strdup (_10);
# VUSE <.MEM_69>
groupwith_49 = session_find (target_24);
# .MEM_87 = VDEF <.MEM_69>
cmd_51 = strdup ("cmd");
# .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
# .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
set breakpoint /root/x21321219/new_gccplugin/Test/test.c 685
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
# .MEM_91 = VDEF <.MEM_90>
w_61 = window_create1 (_18, _17);
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
# .MEM_94 = VDEF <.MEM_93>
session_group_add (groupwith_49, s_59);
# .MEM_95 = VDEF <.MEM_94>
session_group_synchronize_to (s_59);
# .MEM_96 = VDEF <.MEM_95>
session_select (s_59, _20);
# .MEM_83 = VDEF <.MEM_72>
join_pane_exec ();
# .MEM_85 = VDEF <.MEM_73>
session_destroy (_22);
# .MEM_92 = VDEF <.MEM_91(D)>
s_52 = malloc (112);
# .MEM_104 = VDEF <.MEM_103>
_20 = xrealloc (_19, 1, _18);
# .MEM_108 = VDEF <.MEM_87>
_23 = xrealloc (_22, 2, _21);
# .MEM_115 = VDEF <.MEM_88>
_38 = strdup (name_78(D));
# .MEM_117 = VDEF <.MEM_116>
_39 = session_new (s_52, 0B, cmd_81(D), cwd_82(D), idx_83(D), cause_84(D));
# .MEM_119 = VDEF <.MEM_117>
session_destroy (s_52);
# .MEM_118 = VDEF <.MEM_117>
session_select (s_52, _41);
# .MEM_15 = VDEF <.MEM_14(D)>
w_8 = window_create1 (_2, _1);
# .MEM_16 = VDEF <.MEM_15>
_12 = session_attach (s_6(D), w_8, idx_9(D), cause_10(D));
# .MEM_11 = VDEF <.MEM_10(D)>
wl_8 = winlink_add (_1, w_5(D), idx_6(D));
# .MEM_13 = VDEF <.MEM_9>
session_group_synchronize_from (s_3(D));
# .MEM_59 = VDEF <.MEM_58(D)>
w_43 = malloc (88);
# .MEM_69 = VDEF <.MEM_68>
_19 = xrealloc (_18, 1, _17);
# .MEM_73 = VDEF <.MEM_57>
_22 = xrealloc (_21, 2, _20);
# .MEM_14 = VDEF <.MEM_13(D)>
dst_wl_7 = cmd_find_pane (0, &dst_s);
# .MEM_15 = VDEF <.MEM_14>
src_wl_10 = cmd_find_pane (1, 0B);
# .MEM_18 = VDEF <.MEM_15>
__builtin_puts (&"can\'t join a pane to its own window"[0]);
# .MEM_16 = VDEF <.MEM_15>
server_kill_window (src_w_11);
# .MEM_17 = VDEF <.MEM_16>
session_select (_2, _1);
# .MEM_15 = VDEF <.MEM_14(D)>
wl_12 = winlink_find_by_index (_1, idx_10(D));
# .MEM_16 = VDEF <.MEM_15>
winlink_stack_remove (_3, wl_12);
# .MEM_17 = VDEF <.MEM_16>
winlink_stack_push (_5, _4);
# VUSE <.MEM_22>
_5 = session_has (s_14, w_15(D));
# .MEM_24 = VDEF <.MEM_20>
_6 = session_detach (s_14, wl_16);
# .MEM_25 = VDEF <.MEM_24>
server_destroy_session_group (s_14);
# VUSE <.MEM_20>
wl_16 = winlink_find_by_window (_7, w_15(D));
# VUSE <.MEM_14(D)>
sg_11 = session_group_find (s_10(D));
# .MEM_11 = VDEF <.MEM_10(D)>
winlink_stack_remove (_1, wl_8(D));
# .MEM_12 = VDEF <.MEM_11>
winlink_remove (_2, wl_8(D));
# .MEM_13 = VDEF <.MEM_12>
session_group_synchronize_from (s_6(D));
# .MEM_14 = VDEF <.MEM_13>
session_destroy (s_6(D));
# .MEM_38 = VDEF <.MEM_37>
_2 = session_index (s_31(D), &i);
# .MEM_45 = VDEF <.MEM_35>
session_group_remove (s_31(D));
# .MEM_50 = VDEF <.MEM_33>
winlink_stack_remove (_21, _20);
# .MEM_49 = VDEF <.MEM_34>
winlink_remove (_24, _23);
# VUSE <.MEM_14(D)>
sg_7 = session_group_find (target_6(D));
# .MEM_15 = VDEF <.MEM_12>
session_group_synchronize1 (target_6(D), s_1);
# VUSE <.MEM_9(D)>
sg_5 = session_group_find (s_4(D));
# .MEM_10 = VDEF <.MEM_9(D)>
session_group_synchronize1 (target_1, s_4(D));
# VUSE <.MEM_54>
wl_27 = winlinks_RB_MINMAX (ww_21, -1);
# .MEM_67 = VDEF <.MEM_47>
winlink_add (_4, _3, _2);
# VUSE <.MEM_67>
wl_46 = winlinks_RB_NEXT (wl_13);
# .MEM_62 = VDEF <.MEM_49>
wl2_39 = winlink_find_by_index (_7, _6);
# .MEM_61 = VDEF <.MEM_50>
winlink_remove (&old_windows, wl_36);
# .MEM_16 = VDEF <.MEM_15(D)>
winlinks_RB_REMOVE (wwl_12(D), wl_10(D));
# .MEM_20 = VDEF <.MEM_19>
window_destroy (w_11);
# .MEM_29 = VDEF <.MEM_28(D)>
_1 = window_index (w_24(D), &i);
# .MEM_15 = VDEF <.MEM_14(D)>
winlink_stack_remove (stack_11(D), wl_9(D));
# VUSE <.MEM_14(D)>
_6 = strcmp (_5, name_12(D));
# VUSE <.MEM_41(D)>
sg_35 = session_group_find (s_34(D));
# .MEM_23 = VDEF <.MEM_21(D)>
idx_14 = winlink_next_index (wwl_11(D), _1);
# .MEM_22 = VDEF <.MEM_21(D)>
_2 = winlink_find_by_index (wwl_11(D), idx_9(D));
# .MEM_24 = VDEF <.MEM_19>
wl_16 = calloc (1, 136);
# .MEM_27 = VDEF <.MEM_26>
winlinks_RB_INSERT (wwl_11(D), wl_16);
# VUSE <.MEM_30(D)>
sg_15 = session_group_find (target_14(D));
# .MEM_31 = VDEF <.MEM_30(D)>
sg_17 = malloc (32);
# VUSE <.MEM_11(D)>
wl_8 = winlinks_RB_MINMAX (_1, -1);
# VUSE <.MEM_11(D)>
wl_10 = winlinks_RB_NEXT (wl_3);
# .MEM_18 = VDEF <.MEM_16(D)>
__builtin_puts (&"can\'t establish current session"[0]);
# VUSE <.MEM_14>
_12 = winlinks_RB_NEXT (_3);
# VUSE <.MEM_10(D)>
wl_7 = winlinks_RB_MINMAX (wwl_6(D), -1);
# VUSE <.MEM_10(D)>
wl_9 = winlinks_RB_NEXT (wl_2);
# .MEM_13 = VDEF <.MEM_11>
_1 = winlink_find_by_index (wwl_8(D), i_2);
# VUSE <.MEM_7>
_5 = winlinks_RB_FIND (wwl_4(D), &wl);
# VUSE <.MEM_13(D)>
comp_9 = winlink_cmp (elm_8(D), tmp_1);
# .MEM_73 = VDEF <.MEM_56>
winlinks_RB_REMOVE_COLOR (head_36(D), parent_18, child_16);
# VUSE <.MEM_30(D)>
comp_24 = winlink_cmp (elm_14(D), tmp_2);
# .MEM_38 = VDEF <.MEM_28>
winlinks_RB_INSERT_COLOR (head_12(D), elm_14(D));
===============The second stage : Program slicing=================
=============== *this point analyzable =================
name_54 = strdup (_14);
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 11 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_destroy  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:session_group_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_remove  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_remove========= [0m
[40;42m =======start_check_funciton:session_group_remove========= [0m
[40;33m =======POP node_fun stack:session_group_remove========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_index  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_index========= [0m
[40;42m =======start_check_funciton:session_index========= [0m
[40;33m =======POP node_fun stack:session_index========= [0m
[40;42m =======pre_check_funciton:session_destroy========= [0m
[40;42m =======start_check_funciton:session_destroy========= [0m
[40;33m =======POP node_fun stack:session_destroy========= [0m
[40;42m =======pre add _ fucntion:join_pane_exec========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path join_pane_exec  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_select========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_select  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_stack_push========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_push  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre_check_funciton:winlink_stack_push========= [0m
[40;42m =======start_check_funciton:winlink_stack_push========= [0m
[40;33m =======POP node_fun stack:winlink_stack_push========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:session_select========= [0m
[40;42m =======start_check_funciton:session_select========= [0m
[40;33m =======POP node_fun stack:session_select========= [0m
[40;42m =======pre add _ fucntion:server_kill_window========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path server_kill_window  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_window========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_window  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_window========= [0m
[40;42m =======start_check_funciton:winlink_find_by_window========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_window========= [0m
[40;42m =======pre add _ fucntion:server_destroy_session_group========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path server_destroy_session_group  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:server_destroy_session_group========= [0m
[40;42m =======start_check_funciton:server_destroy_session_group========= [0m
[40;33m =======POP node_fun stack:server_destroy_session_group========= [0m
[40;42m =======pre add _ fucntion:session_detach========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_detach  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_destroy  function_call count: 7 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:session_group_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_remove  function_call count: 2 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_remove========= [0m
[40;42m =======start_check_funciton:session_group_remove========= [0m
[40;33m =======POP node_fun stack:session_group_remove========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_index  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_index========= [0m
[40;42m =======start_check_funciton:session_index========= [0m
[40;33m =======POP node_fun stack:session_index========= [0m
[40;42m =======pre_check_funciton:session_destroy========= [0m
[40;42m =======start_check_funciton:session_destroy========= [0m
[40;33m =======POP node_fun stack:session_destroy========= [0m
[40;42m =======pre add _ fucntion:session_group_synchronize_from========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize_from  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize1  function_call count: 5 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :9========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :9========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :10========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize1========= [0m
[40;42m =======start_check_funciton:session_group_synchronize1========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize1========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize_from========= [0m
[40;42m =======start_check_funciton:session_group_synchronize_from========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize_from========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre_check_funciton:session_detach========= [0m
[40;42m =======start_check_funciton:session_detach========= [0m
[40;33m =======POP node_fun stack:session_detach========= [0m
[40;42m =======pre add _ fucntion:session_has========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_has  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_has========= [0m
[40;42m =======start_check_funciton:session_has========= [0m
[40;33m =======POP node_fun stack:session_has========= [0m
[40;42m =======pre_check_funciton:server_kill_window========= [0m
[40;42m =======start_check_funciton:server_kill_window========= [0m
[40;33m =======POP node_fun stack:server_kill_window========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:cmd_find_pane========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_find_pane  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:cmd_find_pane========= [0m
[40;42m =======start_check_funciton:cmd_find_pane========= [0m
[40;33m =======POP node_fun stack:cmd_find_pane========= [0m
[40;42m =======pre_check_funciton:join_pane_exec========= [0m
[40;42m =======start_check_funciton:join_pane_exec========= [0m
[40;33m =======POP node_fun stack:join_pane_exec========= [0m
[40;42m =======pre add _ fucntion:session_select========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_select  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_stack_push========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_push  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre_check_funciton:winlink_stack_push========= [0m
[40;42m =======start_check_funciton:winlink_stack_push========= [0m
[40;33m =======POP node_fun stack:winlink_stack_push========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:session_select========= [0m
[40;42m =======start_check_funciton:session_select========= [0m
[40;33m =======POP node_fun stack:session_select========= [0m
[40;42m =======pre add _ fucntion:session_group_synchronize_to========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize_to  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize1  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize1========= [0m
[40;42m =======start_check_funciton:session_group_synchronize1========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize1========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize_to========= [0m
[40;42m =======start_check_funciton:session_group_synchronize_to========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize_to========= [0m
[40;42m =======pre add _ fucntion:session_group_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_add  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_add========= [0m
[40;42m =======start_check_funciton:session_group_add========= [0m
[40;33m =======POP node_fun stack:session_group_add========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_attach========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_attach  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize_from========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize_from  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize1  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize1========= [0m
[40;42m =======start_check_funciton:session_group_synchronize1========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize1========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize_from========= [0m
[40;42m =======start_check_funciton:session_group_synchronize_from========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize_from========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre_check_funciton:session_attach========= [0m
[40;42m =======start_check_funciton:session_attach========= [0m
[40;33m =======POP node_fun stack:session_attach========= [0m
[40;42m =======pre add _ fucntion:window_create1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_create1  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:window_create1========= [0m
[40;42m =======start_check_funciton:window_create1========= [0m
[40;33m =======POP node_fun stack:window_create1========= [0m
[40;42m =======pre add _ fucntion:session_create========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_create  function_call count: 8 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_select========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_select  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_stack_push========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_push  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre_check_funciton:winlink_stack_push========= [0m
[40;42m =======start_check_funciton:winlink_stack_push========= [0m
[40;33m =======POP node_fun stack:winlink_stack_push========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:session_select========= [0m
[40;42m =======start_check_funciton:session_select========= [0m
[40;33m =======POP node_fun stack:session_select========= [0m
[40;42m =======pre add _ fucntion:session_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_destroy  function_call count: 7 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:session_group_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_remove  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_remove========= [0m
[40;42m =======start_check_funciton:session_group_remove========= [0m
[40;33m =======POP node_fun stack:session_group_remove========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_index  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_index========= [0m
[40;42m =======start_check_funciton:session_index========= [0m
[40;33m =======POP node_fun stack:session_index========= [0m
[40;42m =======pre_check_funciton:session_destroy========= [0m
[40;42m =======start_check_funciton:session_destroy========= [0m
[40;33m =======POP node_fun stack:session_destroy========= [0m
[40;42m =======pre add _ fucntion:session_new========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_new  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_attach========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_attach  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize_from========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize_from  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize1  function_call count: 5 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :9========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :9========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :10========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize1========= [0m
[40;42m =======start_check_funciton:session_group_synchronize1========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize1========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize_from========= [0m
[40;42m =======start_check_funciton:session_group_synchronize_from========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize_from========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre_check_funciton:session_attach========= [0m
[40;42m =======start_check_funciton:session_attach========= [0m
[40;33m =======POP node_fun stack:session_attach========= [0m
[40;42m =======pre add _ fucntion:window_create1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_create1  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:window_create1========= [0m
[40;42m =======start_check_funciton:window_create1========= [0m
[40;33m =======POP node_fun stack:window_create1========= [0m
[40;42m =======pre_check_funciton:session_new========= [0m
[40;42m =======start_check_funciton:session_new========= [0m
[40;33m =======POP node_fun stack:session_new========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:session_create========= [0m
[40;42m =======start_check_funciton:session_create========= [0m
[40;33m =======POP node_fun stack:session_create========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:session_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_find  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre_check_funciton:session_find========= [0m
[40;42m =======start_check_funciton:session_find========= [0m
[40;33m =======POP node_fun stack:session_find========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc5c9563f30
    type <pointer_type 0x7fc5c907c3f0
        type <integer_type 0x7fc5c907ab28 char public QI
            size <integer_cst 0x7fc5c955bca8 constant 8>
            unit-size <integer_cst 0x7fc5c955bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc5c95703f0 precision:8 min <integer_cst 0x7fc5c906a828 -128> max <integer_cst 0x7fc5c906a810 127> context <translation_unit_decl 0x7fc5c9566168 test.c>
            pointer_to_this <pointer_type 0x7fc5c9086dc8>>
        public unsigned DI
        size <integer_cst 0x7fc5c955bbb8 constant 64>
        unit-size <integer_cst 0x7fc5c955bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc5c9566168 test.c>
        pointer_to_this <pointer_type 0x7fc5c907c498>>
    var <var_decl 0x7fc5c909e120 name>
    def_stmt name_54 = strdup (_14);
    version:54
    ptr-info 0x7fc5c90a9ac8>
# .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
dot graph entry main
dot graph target entry end

name_54 = strdup (_14);
In function ‘main’:
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 8: name_54 = strdup (_14);
test.c:685:24: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start name_54 = strdup (_14);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start name_54 = strdup (_14);
test.c:685:24: warning: use location
dot graph stmt end

this stmt call this function :strdup

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: use location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 8: s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: use location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: use location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
dot graph stmt end

this stmt call this function :session_create
trace fucntion name:session_create 
[40;44m =======trace_function_path session_create  function_call count: 8 level :0========  [0m
[40;36m ======= node_fun:session_create========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_select========= [0m
[40;46m =======add node_fun stack:session_select========= [0m
[40;44m =======trace_function_path session_select  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:session_select========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_push========= [0m
[40;46m =======add node_fun stack:winlink_stack_push========= [0m
[40;44m =======trace_function_path winlink_stack_push  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:winlink_stack_push========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;46m =======add node_fun stack:winlink_stack_remove========= [0m
[40;44m =======trace_function_path winlink_stack_remove  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:winlink_stack_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;46m =======add node_fun stack:winlink_stack_remove========= [0m
[40;44m =======trace_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:winlink_stack_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_destroy========= [0m
[40;46m =======add node_fun stack:session_destroy========= [0m
[40;44m =======trace_function_path session_destroy  function_call count: 7 level :1========  [0m
# .MEM_40 = VDEF <.MEM_35>
free (_11);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_35>
free (_11);
test.c:449:17: warning: use location
  449 |                 ARRAY_TRUNC(&sessions, 1);
      |                 ^
dot graph start relate form ID : 63121945
from session_destroy basic block 7dot graph end relate end

dot graph relate stmt start ID : 541388638 stmt(free) :free (_11);
test.c:449:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 541388638 stmt(free) :free (_11);
test.c:449:17: warning: use location
dot graph relate end

# .MEM_46 = VDEF <.MEM_34>
free (_26);
[40;31m  find free stmt free same pointer [0m
# .MEM_46 = VDEF <.MEM_34>
free (_26);
test.c:458:9: warning: use location
  458 |         xfree(s->name);
      |         ^
dot graph start relate form ID : 63121945
from session_destroy basic block 16dot graph end relate end

dot graph relate stmt start ID : 201440848 stmt(free) :free (_26);
test.c:458:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 201440848 stmt(free) :free (_26);
test.c:458:9: warning: use location
dot graph relate end

# .MEM_47 = VDEF <.MEM_46>
free (s_31(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_46>
free (s_31(D));
test.c:459:9: warning: use location
  459 |         xfree(s);
      |         ^
dot graph start relate form ID : 63121945
from session_destroy basic block 16dot graph end relate end

dot graph relate stmt start ID : 1221584635 stmt(free) :free (s_31(D));
test.c:459:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1221584635 stmt(free) :free (s_31(D));
test.c:459:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:session_destroy========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;46m =======add node_fun stack:winlink_remove========= [0m
[40;44m =======trace_function_path winlink_remove  function_call count: 5 level :2========  [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
test.c:350:17: warning: use location
  350 |                 xfree(wl->status_text);
      |                 ^
dot graph start relate form ID : 1121893857
from winlink_remove basic block 3dot graph end relate end

dot graph relate stmt start ID : 115827477 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 115827477 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
test.c:351:9: warning: use location
  351 |         xfree(wl);
      |         ^
dot graph start relate form ID : 1121893857
from winlink_remove basic block 4dot graph end relate end

dot graph relate stmt start ID : 1367574649 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1367574649 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:winlink_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;46m =======add node_fun stack:window_destroy========= [0m
[40;44m =======trace_function_path window_destroy  function_call count: 4 level :3========  [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
test.c:336:17: warning: use location
  336 |                 ARRAY_TRUNC(&windows, 1);
      |                 ^
dot graph start relate form ID : 645082109
from window_destroy basic block 7dot graph end relate end

dot graph relate stmt start ID : 660864051 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 660864051 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

# .MEM_36 = VDEF <.MEM_27>
free (_20);
[40;31m  find free stmt free same pointer [0m
# .MEM_36 = VDEF <.MEM_27>
free (_20);
test.c:339:17: warning: use location
  339 |                 xfree(w->name);
      |                 ^
dot graph start relate form ID : 645082109
from window_destroy basic block 12dot graph end relate end

dot graph relate stmt start ID : 192134750 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 192134750 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
test.c:340:9: warning: use location
  340 |         xfree(w);
      |         ^
dot graph start relate form ID : 645082109
from window_destroy basic block 13dot graph end relate end

dot graph relate stmt start ID : 1419583156 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1419583156 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:window_destroy========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;46m =======add node_fun stack:window_index========= [0m
[40;44m =======trace_function_path window_index  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:window_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;46m =======add node_fun stack:winlink_stack_remove========= [0m
[40;44m =======trace_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:winlink_stack_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_remove========= [0m
[40;46m =======add node_fun stack:session_group_remove========= [0m
[40;44m =======trace_function_path session_group_remove  function_call count: 2 level :2========  [0m
# .MEM_51 = VDEF <.MEM_50>
free (sg_35);
[40;31m  find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (sg_35);
test.c:269:17: warning: use location
  269 |                 xfree(sg);
      |                 ^
dot graph start relate form ID : 2102611392
from session_group_remove basic block 15dot graph end relate end

dot graph relate stmt start ID : 122931892 stmt(free) :free (sg_35);
test.c:269:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 122931892 stmt(free) :free (sg_35);
test.c:269:17: warning: use location
dot graph relate end

[40;36m ======= node_fun:session_group_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;46m =======add node_fun stack:session_group_find========= [0m
[40;44m =======trace_function_path session_group_find  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:session_group_find========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_index========= [0m
[40;46m =======add node_fun stack:session_index========= [0m
[40;44m =======trace_function_path session_index  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:session_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_new========= [0m
[40;46m =======add node_fun stack:session_new========= [0m
[40;44m =======trace_function_path session_new  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:session_new========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_attach========= [0m
[40;46m =======add node_fun stack:session_attach========= [0m
[40;44m =======trace_function_path session_attach  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:session_attach========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_synchronize_from========= [0m
[40;46m =======add node_fun stack:session_group_synchronize_from========= [0m
[40;44m =======trace_function_path session_group_synchronize_from  function_call count: 2 level :3========  [0m
[40;36m ======= node_fun:session_group_synchronize_from========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;46m =======add node_fun stack:session_group_synchronize1========= [0m
[40;44m =======trace_function_path session_group_synchronize1  function_call count: 5 level :4========  [0m
[40;36m ======= node_fun:session_group_synchronize1========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;46m =======add node_fun stack:winlink_remove========= [0m
[40;44m =======trace_function_path winlink_remove  function_call count: 5 level :5========  [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
test.c:350:17: warning: use location
  350 |                 xfree(wl->status_text);
      |                 ^
dot graph start relate form ID : 828624041
from winlink_remove basic block 3dot graph end relate end

dot graph relate stmt start ID : 627782354 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 627782354 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
test.c:351:9: warning: use location
  351 |         xfree(wl);
      |         ^
dot graph start relate form ID : 828624041
from winlink_remove basic block 4dot graph end relate end

dot graph relate stmt start ID : 670893239 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 670893239 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:winlink_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;46m =======add node_fun stack:window_destroy========= [0m
[40;44m =======trace_function_path window_destroy  function_call count: 4 level :6========  [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
test.c:336:17: warning: use location
  336 |                 ARRAY_TRUNC(&windows, 1);
      |                 ^
dot graph start relate form ID : 167449671
from window_destroy basic block 7dot graph end relate end

dot graph relate stmt start ID : 894360776 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 894360776 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

# .MEM_36 = VDEF <.MEM_27>
free (_20);
[40;31m  find free stmt free same pointer [0m
# .MEM_36 = VDEF <.MEM_27>
free (_20);
test.c:339:17: warning: use location
  339 |                 xfree(w->name);
      |                 ^
dot graph start relate form ID : 167449671
from window_destroy basic block 12dot graph end relate end

dot graph relate stmt start ID : 1713392386 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1713392386 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
test.c:340:9: warning: use location
  340 |         xfree(w);
      |         ^
dot graph start relate form ID : 167449671
from window_destroy basic block 13dot graph end relate end

dot graph relate stmt start ID : 1988184422 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1988184422 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:window_destroy========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;46m =======add node_fun stack:window_index========= [0m
[40;44m =======trace_function_path window_index  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:window_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE  function_call count: 1 level :6========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_NEXT========= [0m
[40;44m =======trace_function_path winlinks_RB_NEXT  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_NEXT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;46m =======add node_fun stack:winlink_add========= [0m
[40;44m =======trace_function_path winlink_add  function_call count: 4 level :5========  [0m
[40;36m ======= node_fun:winlink_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT  function_call count: 2 level :6========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :6========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :7========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :8========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;46m =======add node_fun stack:winlink_next_index========= [0m
[40;44m =======trace_function_path winlink_next_index  function_call count: 1 level :6========  [0m
[40;36m ======= node_fun:winlink_next_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :7========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :8========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :9========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;46m =======add node_fun stack:winlinks_RB_MINMAX========= [0m
[40;44m =======trace_function_path winlinks_RB_MINMAX  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_MINMAX========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;46m =======add node_fun stack:session_group_find========= [0m
[40;44m =======trace_function_path session_group_find  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:session_group_find========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;46m =======add node_fun stack:winlink_add========= [0m
[40;44m =======trace_function_path winlink_add  function_call count: 4 level :3========  [0m
[40;36m ======= node_fun:winlink_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT  function_call count: 2 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;46m =======add node_fun stack:winlink_next_index========= [0m
[40;44m =======trace_function_path winlink_next_index  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:winlink_next_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_create1========= [0m
[40;46m =======add node_fun stack:window_create1========= [0m
[40;44m =======trace_function_path window_create1  function_call count: 4 level :2========  [0m
[40;36m ======= node_fun:window_create1========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :3========  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
test.c:99:23: warning: use location
   99 |         if ((newptr = realloc(oldptr, newsize)) == NULL)
      |                       ^
dot graph start relate form ID : 657807682
from xrealloc basic block 6dot graph end relate end

dot graph relate stmt start ID : 577234332 stmt(free) :newptr_8 = realloc (oldptr_6(D), newsize_4);
test.c:99:23: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 577234332 stmt(free) :newptr_8 = realloc (oldptr_6(D), newsize_4);
test.c:99:23: warning: use location
dot graph relate end

[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
test.c:99:23: warning: use location
dot graph start relate form ID : 560757027
from xrealloc basic block 6dot graph end relate end

dot graph relate stmt start ID : 1508423001 stmt(free) :newptr_8 = realloc (oldptr_6(D), newsize_4);
test.c:99:23: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1508423001 stmt(free) :newptr_8 = realloc (oldptr_6(D), newsize_4);
test.c:99:23: warning: use location
dot graph relate end

[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:16 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 9: session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start session_select (s_59, _20);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^
dot graph stmt end

this stmt call this function :session_select
trace fucntion name:session_select 
[40;44m =======trace_function_path session_select  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:session_select========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_push========= [0m
[40;46m =======add node_fun stack:winlink_stack_push========= [0m
[40;44m =======trace_function_path winlink_stack_push  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:winlink_stack_push========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;46m =======add node_fun stack:winlink_stack_remove========= [0m
[40;44m =======trace_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:winlink_stack_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;46m =======add node_fun stack:winlink_stack_remove========= [0m
[40;44m =======trace_function_path winlink_stack_remove  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:winlink_stack_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:16 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 9: _19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start _19 = s_59->windows.rbh_root;
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start _19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 9: _20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start _20 = _19->idx;
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start _20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

session_group_synchronize_to (s_59);
test.c:692:25: warning: use location
  692 |                         session_group_synchronize_to(s);
      |                         ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 9: session_group_synchronize_to (s_59);
test.c:692:25: warning: use location
  692 |                         session_group_synchronize_to(s);
      |                         ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start session_group_synchronize_to (s_59);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start session_group_synchronize_to (s_59);
test.c:692:25: warning: use location
  692 |                         session_group_synchronize_to(s);
      |                         ^
dot graph stmt end

this stmt call this function :session_group_synchronize_to
trace fucntion name:session_group_synchronize_to 
[40;44m =======trace_function_path session_group_synchronize_to  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:session_group_synchronize_to========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;46m =======add node_fun stack:session_group_synchronize1========= [0m
[40;44m =======trace_function_path session_group_synchronize1  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:session_group_synchronize1========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;46m =======add node_fun stack:winlink_remove========= [0m
[40;44m =======trace_function_path winlink_remove  function_call count: 5 level :2========  [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
test.c:350:17: warning: use location
  350 |                 xfree(wl->status_text);
      |                 ^
dot graph start relate form ID : 2135946132
from winlink_remove basic block 3dot graph end relate end

dot graph relate stmt start ID : 1847950175 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1847950175 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
test.c:351:9: warning: use location
  351 |         xfree(wl);
      |         ^
dot graph start relate form ID : 2135946132
from winlink_remove basic block 4dot graph end relate end

dot graph relate stmt start ID : 1624791235 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1624791235 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:winlink_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;46m =======add node_fun stack:window_destroy========= [0m
[40;44m =======trace_function_path window_destroy  function_call count: 4 level :3========  [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
test.c:336:17: warning: use location
  336 |                 ARRAY_TRUNC(&windows, 1);
      |                 ^
dot graph start relate form ID : 890859938
from window_destroy basic block 7dot graph end relate end

dot graph relate stmt start ID : 1236233215 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1236233215 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

# .MEM_36 = VDEF <.MEM_27>
free (_20);
[40;31m  find free stmt free same pointer [0m
# .MEM_36 = VDEF <.MEM_27>
free (_20);
test.c:339:17: warning: use location
  339 |                 xfree(w->name);
      |                 ^
dot graph start relate form ID : 890859938
from window_destroy basic block 12dot graph end relate end

dot graph relate stmt start ID : 1919689766 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1919689766 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
test.c:340:9: warning: use location
  340 |         xfree(w);
      |         ^
dot graph start relate form ID : 890859938
from window_destroy basic block 13dot graph end relate end

dot graph relate stmt start ID : 544560453 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 544560453 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:window_destroy========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;46m =======add node_fun stack:window_index========= [0m
[40;44m =======trace_function_path window_index  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:window_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_NEXT========= [0m
[40;44m =======trace_function_path winlinks_RB_NEXT  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:winlinks_RB_NEXT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;46m =======add node_fun stack:winlink_add========= [0m
[40;44m =======trace_function_path winlink_add  function_call count: 4 level :2========  [0m
[40;36m ======= node_fun:winlink_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT  function_call count: 2 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;46m =======add node_fun stack:winlink_next_index========= [0m
[40;44m =======trace_function_path winlink_next_index  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:winlink_next_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;46m =======add node_fun stack:winlinks_RB_MINMAX========= [0m
[40;44m =======trace_function_path winlinks_RB_MINMAX  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:winlinks_RB_MINMAX========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;46m =======add node_fun stack:session_group_find========= [0m
[40;44m =======trace_function_path session_group_find  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:session_group_find========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:21 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

session_group_add (groupwith_49, s_59);
test.c:691:25: warning: use location
  691 |                         session_group_add(groupwith, s);
      |                         ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 9: session_group_add (groupwith_49, s_59);
test.c:691:25: warning: use location
  691 |                         session_group_add(groupwith, s);
      |                         ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start session_group_add (groupwith_49, s_59);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start session_group_add (groupwith_49, s_59);
test.c:691:25: warning: use location
  691 |                         session_group_add(groupwith, s);
      |                         ^
dot graph stmt end

this stmt call this function :session_group_add
trace fucntion name:session_group_add 
[40;44m =======trace_function_path session_group_add  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:session_group_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;46m =======add node_fun stack:session_group_find========= [0m
[40;44m =======trace_function_path session_group_find  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:session_group_find========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:21 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: use location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 8: session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: use location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start session_attach (s_59, w_61, idx_57, &cause);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: use location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
dot graph stmt end

this stmt call this function :session_attach
trace fucntion name:session_attach 
[40;44m =======trace_function_path session_attach  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:session_attach========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_synchronize_from========= [0m
[40;46m =======add node_fun stack:session_group_synchronize_from========= [0m
[40;44m =======trace_function_path session_group_synchronize_from  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:session_group_synchronize_from========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;46m =======add node_fun stack:session_group_synchronize1========= [0m
[40;44m =======trace_function_path session_group_synchronize1  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:session_group_synchronize1========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;46m =======add node_fun stack:winlink_remove========= [0m
[40;44m =======trace_function_path winlink_remove  function_call count: 5 level :3========  [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
test.c:350:17: warning: use location
  350 |                 xfree(wl->status_text);
      |                 ^
dot graph start relate form ID : 192283497
from winlink_remove basic block 3dot graph end relate end

dot graph relate stmt start ID : 2058701066 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2058701066 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
test.c:351:9: warning: use location
  351 |         xfree(wl);
      |         ^
dot graph start relate form ID : 192283497
from winlink_remove basic block 4dot graph end relate end

dot graph relate stmt start ID : 1865790505 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1865790505 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:winlink_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;46m =======add node_fun stack:window_destroy========= [0m
[40;44m =======trace_function_path window_destroy  function_call count: 4 level :4========  [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
test.c:336:17: warning: use location
  336 |                 ARRAY_TRUNC(&windows, 1);
      |                 ^
dot graph start relate form ID : 1428516713
from window_destroy basic block 7dot graph end relate end

dot graph relate stmt start ID : 1830907185 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1830907185 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

# .MEM_36 = VDEF <.MEM_27>
free (_20);
[40;31m  find free stmt free same pointer [0m
# .MEM_36 = VDEF <.MEM_27>
free (_20);
test.c:339:17: warning: use location
  339 |                 xfree(w->name);
      |                 ^
dot graph start relate form ID : 1428516713
from window_destroy basic block 12dot graph end relate end

dot graph relate stmt start ID : 262867310 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 262867310 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
test.c:340:9: warning: use location
  340 |         xfree(w);
      |         ^
dot graph start relate form ID : 1428516713
from window_destroy basic block 13dot graph end relate end

dot graph relate stmt start ID : 2023120362 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2023120362 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:window_destroy========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;46m =======add node_fun stack:window_index========= [0m
[40;44m =======trace_function_path window_index  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:window_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_NEXT========= [0m
[40;44m =======trace_function_path winlinks_RB_NEXT  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_NEXT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;46m =======add node_fun stack:winlink_add========= [0m
[40;44m =======trace_function_path winlink_add  function_call count: 4 level :3========  [0m
[40;36m ======= node_fun:winlink_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT  function_call count: 2 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;46m =======add node_fun stack:winlink_next_index========= [0m
[40;44m =======trace_function_path winlink_next_index  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:winlink_next_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;46m =======add node_fun stack:winlinks_RB_MINMAX========= [0m
[40;44m =======trace_function_path winlinks_RB_MINMAX  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_MINMAX========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;46m =======add node_fun stack:session_group_find========= [0m
[40;44m =======trace_function_path session_group_find  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:session_group_find========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;46m =======add node_fun stack:winlink_add========= [0m
[40;44m =======trace_function_path winlink_add  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:winlink_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;46m =======add node_fun stack:winlink_next_index========= [0m
[40;44m =======trace_function_path winlink_next_index  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:winlink_next_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:26 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

free (cmd_25);
test.c:689:17: warning: use location
  689 |                 free(cmd);
      |                 ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 8: free (cmd_25);
test.c:689:17: warning: use location
  689 |                 free(cmd);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start free (cmd_25);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start free (cmd_25);
test.c:689:17: warning: use location
  689 |                 free(cmd);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (cmd_25);
test.c:689:17: warning: use location
[40;32m    HAS FREE STMT count:27 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

idx_57 = idx_26 + 1;
test.c:686:21: warning: use location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 8: idx_57 = idx_26 + 1;
test.c:686:21: warning: use location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start idx_57 = idx_26 + 1;
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start idx_57 = idx_26 + 1;
test.c:686:21: warning: use location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
dot graph stmt end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph arrowsubgraph cluster_1788312847 dot graph subgraph  session_select (s_59, _20);
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
dot graph subgrapend

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph arrowsubgraph cluster_1457069817 dot graph subgraph  _19 = s_59->windows.rbh_root;
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
dot graph subgrapend

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph arrowsubgraph cluster_1897543447 dot graph subgraph  _20 = _19->idx;
_19 = s_59->windows.rbh_root;
dot graph subgrapend

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph arrowsubgraph cluster_251259130 dot graph subgraph  session_group_synchronize_to (s_59);
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
dot graph subgrapend

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph arrowsubgraph cluster_1560909040 dot graph subgraph  session_group_add (groupwith_49, s_59);
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc5c9563f30
    type <pointer_type 0x7fc5c907c3f0
        type <integer_type 0x7fc5c907ab28 char public QI
            size <integer_cst 0x7fc5c955bca8 constant 8>
            unit-size <integer_cst 0x7fc5c955bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc5c95703f0 precision:8 min <integer_cst 0x7fc5c906a828 -128> max <integer_cst 0x7fc5c906a810 127> context <translation_unit_decl 0x7fc5c9566168 test.c>
            pointer_to_this <pointer_type 0x7fc5c9086dc8>>
        public unsigned DI
        size <integer_cst 0x7fc5c955bbb8 constant 64>
        unit-size <integer_cst 0x7fc5c955bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc5c9566168 test.c>
        pointer_to_this <pointer_type 0x7fc5c907c498>>
    var <var_decl 0x7fc5c909e120 name>
    def_stmt name_54 = strdup (_14);
    version:54
    ptr-info 0x7fc5c90a9ac8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_96 = VDEF <.MEM_95>
session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_95 = VDEF <.MEM_94>
session_group_synchronize_to (s_59);
test.c:692:25: warning: free in this location
  692 |                         session_group_synchronize_to(s);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_96 = VDEF <.MEM_95>
session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: free in this location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_96 = VDEF <.MEM_95>
session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: free in this location
  689 |                 free(cmd);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_96 = VDEF <.MEM_95>
session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_95 = VDEF <.MEM_94>
session_group_synchronize_to (s_59);
test.c:692:25: warning: free in this location
  692 |                         session_group_synchronize_to(s);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: free in this location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: free in this location
  689 |                 free(cmd);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_95 = VDEF <.MEM_94>
session_group_synchronize_to (s_59);
test.c:692:25: warning: free in this location
  692 |                         session_group_synchronize_to(s);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: free in this location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: free in this location
  689 |                 free(cmd);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
[40;35m target gimple type: addr_expr [0m
# .MEM_95 = VDEF <.MEM_94>
session_group_synchronize_to (s_59);
test.c:692:25: warning: use location
  692 |                         session_group_synchronize_to(s);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: free in this location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_95 = VDEF <.MEM_94>
session_group_synchronize_to (s_59);
test.c:692:25: warning: use location
  692 |                         session_group_synchronize_to(s);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: free in this location
  689 |                 free(cmd);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_95 = VDEF <.MEM_94>
session_group_synchronize_to (s_59);
test.c:692:25: warning: use location
  692 |                         session_group_synchronize_to(s);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
[40;35m target gimple type: addr_expr [0m
# .MEM_94 = VDEF <.MEM_93>
session_group_add (groupwith_49, s_59);
test.c:691:25: warning: use location
  691 |                         session_group_add(groupwith, s);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: free in this location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_94 = VDEF <.MEM_93>
session_group_add (groupwith_49, s_59);
test.c:691:25: warning: use location
  691 |                         session_group_add(groupwith, s);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: free in this location
  689 |                 free(cmd);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_94 = VDEF <.MEM_93>
session_group_add (groupwith_49, s_59);
test.c:691:25: warning: use location
  691 |                         session_group_add(groupwith, s);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
[40;35m target gimple type: addr_expr [0m
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: use location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
[40;35m target gimple type: addr_expr [0m
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: use location
  689 |                 free(cmd);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: free in this location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: use location
  689 |                 free(cmd);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:27 [0m
[40;31m  	possible double free [rigorous]:27 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:27 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc5c9563f30
    type <pointer_type 0x7fc5c907c3f0
        type <integer_type 0x7fc5c907ab28 char public QI
            size <integer_cst 0x7fc5c955bca8 constant 8>
            unit-size <integer_cst 0x7fc5c955bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc5c95703f0 precision:8 min <integer_cst 0x7fc5c906a828 -128> max <integer_cst 0x7fc5c906a810 127> context <translation_unit_decl 0x7fc5c9566168 test.c>
            pointer_to_this <pointer_type 0x7fc5c9086dc8>>
        public unsigned DI
        size <integer_cst 0x7fc5c955bbb8 constant 64>
        unit-size <integer_cst 0x7fc5c955bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc5c9566168 test.c>
        pointer_to_this <pointer_type 0x7fc5c907c498>>
    var <var_decl 0x7fc5c909e120 name>
    def_stmt name_54 = strdup (_14);
    version:54
    ptr-info 0x7fc5c90a9ac8>
# .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
dot graph entry main
dot graph target entry end

name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 8: name_54 = strdup (_14);
test.c:685:24: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start name_54 = strdup (_14);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start name_54 = strdup (_14);
test.c:685:24: warning: use location
dot graph stmt end

this stmt call this function :strdup

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: use location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 8: s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: use location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: use location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
dot graph stmt end

this stmt call this function :session_create
trace fucntion name:session_create 
[40;44m =======trace_function_path session_create  function_call count: 8 level :0========  [0m
[40;36m ======= node_fun:session_create========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_select========= [0m
[40;46m =======add node_fun stack:session_select========= [0m
[40;44m =======trace_function_path session_select  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:session_select========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_push========= [0m
[40;46m =======add node_fun stack:winlink_stack_push========= [0m
[40;44m =======trace_function_path winlink_stack_push  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:winlink_stack_push========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;46m =======add node_fun stack:winlink_stack_remove========= [0m
[40;44m =======trace_function_path winlink_stack_remove  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:winlink_stack_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;46m =======add node_fun stack:winlink_stack_remove========= [0m
[40;44m =======trace_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:winlink_stack_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_destroy========= [0m
[40;46m =======add node_fun stack:session_destroy========= [0m
[40;44m =======trace_function_path session_destroy  function_call count: 7 level :1========  [0m
# .MEM_40 = VDEF <.MEM_35>
free (_11);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_35>
free (_11);
test.c:449:17: warning: use location
  449 |                 ARRAY_TRUNC(&sessions, 1);
      |                 ^
dot graph start relate form ID : 406069735
from session_destroy basic block 7dot graph end relate end

dot graph relate stmt start ID : 1543342785 stmt(free) :free (_11);
test.c:449:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1543342785 stmt(free) :free (_11);
test.c:449:17: warning: use location
dot graph relate end

# .MEM_46 = VDEF <.MEM_34>
free (_26);
[40;31m  find free stmt free same pointer [0m
# .MEM_46 = VDEF <.MEM_34>
free (_26);
test.c:458:9: warning: use location
  458 |         xfree(s->name);
      |         ^
dot graph start relate form ID : 406069735
from session_destroy basic block 16dot graph end relate end

dot graph relate stmt start ID : 1923289499 stmt(free) :free (_26);
test.c:458:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1923289499 stmt(free) :free (_26);
test.c:458:9: warning: use location
dot graph relate end

# .MEM_47 = VDEF <.MEM_46>
free (s_31(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_46>
free (s_31(D));
test.c:459:9: warning: use location
  459 |         xfree(s);
      |         ^
dot graph start relate form ID : 406069735
from session_destroy basic block 16dot graph end relate end

dot graph relate stmt start ID : 917193784 stmt(free) :free (s_31(D));
test.c:459:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 917193784 stmt(free) :free (s_31(D));
test.c:459:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:session_destroy========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;46m =======add node_fun stack:winlink_remove========= [0m
[40;44m =======trace_function_path winlink_remove  function_call count: 5 level :2========  [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
test.c:350:17: warning: use location
  350 |                 xfree(wl->status_text);
      |                 ^
dot graph start relate form ID : 1605920648
from winlink_remove basic block 3dot graph end relate end

dot graph relate stmt start ID : 1175344214 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1175344214 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
test.c:351:9: warning: use location
  351 |         xfree(wl);
      |         ^
dot graph start relate form ID : 1605920648
from winlink_remove basic block 4dot graph end relate end

dot graph relate stmt start ID : 106410723 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 106410723 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:winlink_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;46m =======add node_fun stack:window_destroy========= [0m
[40;44m =======trace_function_path window_destroy  function_call count: 4 level :3========  [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
test.c:336:17: warning: use location
  336 |                 ARRAY_TRUNC(&windows, 1);
      |                 ^
dot graph start relate form ID : 507482945
from window_destroy basic block 7dot graph end relate end

dot graph relate stmt start ID : 919215899 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 919215899 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

# .MEM_36 = VDEF <.MEM_27>
free (_20);
[40;31m  find free stmt free same pointer [0m
# .MEM_36 = VDEF <.MEM_27>
free (_20);
test.c:339:17: warning: use location
  339 |                 xfree(w->name);
      |                 ^
dot graph start relate form ID : 507482945
from window_destroy basic block 12dot graph end relate end

dot graph relate stmt start ID : 1877021142 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1877021142 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
test.c:340:9: warning: use location
  340 |         xfree(w);
      |         ^
dot graph start relate form ID : 507482945
from window_destroy basic block 13dot graph end relate end

dot graph relate stmt start ID : 383975810 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 383975810 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:window_destroy========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;46m =======add node_fun stack:window_index========= [0m
[40;44m =======trace_function_path window_index  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:window_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;46m =======add node_fun stack:winlink_stack_remove========= [0m
[40;44m =======trace_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:winlink_stack_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_remove========= [0m
[40;46m =======add node_fun stack:session_group_remove========= [0m
[40;44m =======trace_function_path session_group_remove  function_call count: 2 level :2========  [0m
# .MEM_51 = VDEF <.MEM_50>
free (sg_35);
[40;31m  find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (sg_35);
test.c:269:17: warning: use location
  269 |                 xfree(sg);
      |                 ^
dot graph start relate form ID : 629133058
from session_group_remove basic block 15dot graph end relate end

dot graph relate stmt start ID : 1983926212 stmt(free) :free (sg_35);
test.c:269:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1983926212 stmt(free) :free (sg_35);
test.c:269:17: warning: use location
dot graph relate end

[40;36m ======= node_fun:session_group_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;46m =======add node_fun stack:session_group_find========= [0m
[40;44m =======trace_function_path session_group_find  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:session_group_find========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_index========= [0m
[40;46m =======add node_fun stack:session_index========= [0m
[40;44m =======trace_function_path session_index  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:session_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_new========= [0m
[40;46m =======add node_fun stack:session_new========= [0m
[40;44m =======trace_function_path session_new  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:session_new========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_attach========= [0m
[40;46m =======add node_fun stack:session_attach========= [0m
[40;44m =======trace_function_path session_attach  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:session_attach========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_synchronize_from========= [0m
[40;46m =======add node_fun stack:session_group_synchronize_from========= [0m
[40;44m =======trace_function_path session_group_synchronize_from  function_call count: 2 level :3========  [0m
[40;36m ======= node_fun:session_group_synchronize_from========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;46m =======add node_fun stack:session_group_synchronize1========= [0m
[40;44m =======trace_function_path session_group_synchronize1  function_call count: 5 level :4========  [0m
[40;36m ======= node_fun:session_group_synchronize1========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;46m =======add node_fun stack:winlink_remove========= [0m
[40;44m =======trace_function_path winlink_remove  function_call count: 5 level :5========  [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
test.c:350:17: warning: use location
  350 |                 xfree(wl->status_text);
      |                 ^
dot graph start relate form ID : 458780997
from winlink_remove basic block 3dot graph end relate end

dot graph relate stmt start ID : 1912370206 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1912370206 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
test.c:351:9: warning: use location
  351 |         xfree(wl);
      |         ^
dot graph start relate form ID : 458780997
from winlink_remove basic block 4dot graph end relate end

dot graph relate stmt start ID : 1904899474 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1904899474 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:winlink_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;46m =======add node_fun stack:window_destroy========= [0m
[40;44m =======trace_function_path window_destroy  function_call count: 4 level :6========  [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
test.c:336:17: warning: use location
  336 |                 ARRAY_TRUNC(&windows, 1);
      |                 ^
dot graph start relate form ID : 831614907
from window_destroy basic block 7dot graph end relate end

dot graph relate stmt start ID : 1028604913 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1028604913 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

# .MEM_36 = VDEF <.MEM_27>
free (_20);
[40;31m  find free stmt free same pointer [0m
# .MEM_36 = VDEF <.MEM_27>
free (_20);
test.c:339:17: warning: use location
  339 |                 xfree(w->name);
      |                 ^
dot graph start relate form ID : 831614907
from window_destroy basic block 12dot graph end relate end

dot graph relate stmt start ID : 783451307 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 783451307 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
test.c:340:9: warning: use location
  340 |         xfree(w);
      |         ^
dot graph start relate form ID : 831614907
from window_destroy basic block 13dot graph end relate end

dot graph relate stmt start ID : 1942367340 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1942367340 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:window_destroy========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;46m =======add node_fun stack:window_index========= [0m
[40;44m =======trace_function_path window_index  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:window_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE  function_call count: 1 level :6========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_NEXT========= [0m
[40;44m =======trace_function_path winlinks_RB_NEXT  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_NEXT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;46m =======add node_fun stack:winlink_add========= [0m
[40;44m =======trace_function_path winlink_add  function_call count: 4 level :5========  [0m
[40;36m ======= node_fun:winlink_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT  function_call count: 2 level :6========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :6========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :7========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :8========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;46m =======add node_fun stack:winlink_next_index========= [0m
[40;44m =======trace_function_path winlink_next_index  function_call count: 1 level :6========  [0m
[40;36m ======= node_fun:winlink_next_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :7========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :8========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :9========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;46m =======add node_fun stack:winlinks_RB_MINMAX========= [0m
[40;44m =======trace_function_path winlinks_RB_MINMAX  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_MINMAX========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;46m =======add node_fun stack:session_group_find========= [0m
[40;44m =======trace_function_path session_group_find  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:session_group_find========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;46m =======add node_fun stack:winlink_add========= [0m
[40;44m =======trace_function_path winlink_add  function_call count: 4 level :3========  [0m
[40;36m ======= node_fun:winlink_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT  function_call count: 2 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;46m =======add node_fun stack:winlink_next_index========= [0m
[40;44m =======trace_function_path winlink_next_index  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:winlink_next_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_create1========= [0m
[40;46m =======add node_fun stack:window_create1========= [0m
[40;44m =======trace_function_path window_create1  function_call count: 4 level :2========  [0m
[40;36m ======= node_fun:window_create1========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :3========  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
test.c:99:23: warning: use location
   99 |         if ((newptr = realloc(oldptr, newsize)) == NULL)
      |                       ^
dot graph start relate form ID : 939211363
from xrealloc basic block 6dot graph end relate end

dot graph relate stmt start ID : 465993215 stmt(free) :newptr_8 = realloc (oldptr_6(D), newsize_4);
test.c:99:23: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 465993215 stmt(free) :newptr_8 = realloc (oldptr_6(D), newsize_4);
test.c:99:23: warning: use location
dot graph relate end

[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_10 = VDEF <.MEM_9(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_9(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
test.c:99:23: warning: use location
dot graph start relate form ID : 1817850822
from xrealloc basic block 6dot graph end relate end

dot graph relate stmt start ID : 898442541 stmt(free) :newptr_8 = realloc (oldptr_6(D), newsize_4);
test.c:99:23: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 898442541 stmt(free) :newptr_8 = realloc (oldptr_6(D), newsize_4);
test.c:99:23: warning: use location
dot graph relate end

[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:16 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 9: session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start session_select (s_59, _20);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^
dot graph stmt end

this stmt call this function :session_select
trace fucntion name:session_select 
[40;44m =======trace_function_path session_select  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:session_select========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_push========= [0m
[40;46m =======add node_fun stack:winlink_stack_push========= [0m
[40;44m =======trace_function_path winlink_stack_push  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:winlink_stack_push========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;46m =======add node_fun stack:winlink_stack_remove========= [0m
[40;44m =======trace_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:winlink_stack_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;46m =======add node_fun stack:winlink_stack_remove========= [0m
[40;44m =======trace_function_path winlink_stack_remove  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:winlink_stack_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:16 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 9: _19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start _19 = s_59->windows.rbh_root;
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start _19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 9: _20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start _20 = _19->idx;
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start _20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^
dot graph stmt end


======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

session_group_synchronize_to (s_59);
test.c:692:25: warning: use location
  692 |                         session_group_synchronize_to(s);
      |                         ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 9: session_group_synchronize_to (s_59);
test.c:692:25: warning: use location
  692 |                         session_group_synchronize_to(s);
      |                         ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start session_group_synchronize_to (s_59);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start session_group_synchronize_to (s_59);
test.c:692:25: warning: use location
  692 |                         session_group_synchronize_to(s);
      |                         ^
dot graph stmt end

this stmt call this function :session_group_synchronize_to
trace fucntion name:session_group_synchronize_to 
[40;44m =======trace_function_path session_group_synchronize_to  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:session_group_synchronize_to========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;46m =======add node_fun stack:session_group_synchronize1========= [0m
[40;44m =======trace_function_path session_group_synchronize1  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:session_group_synchronize1========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;46m =======add node_fun stack:winlink_remove========= [0m
[40;44m =======trace_function_path winlink_remove  function_call count: 5 level :2========  [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
test.c:350:17: warning: use location
  350 |                 xfree(wl->status_text);
      |                 ^
dot graph start relate form ID : 1626855818
from winlink_remove basic block 3dot graph end relate end

dot graph relate stmt start ID : 964333463 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 964333463 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
test.c:351:9: warning: use location
  351 |         xfree(wl);
      |         ^
dot graph start relate form ID : 1626855818
from winlink_remove basic block 4dot graph end relate end

dot graph relate stmt start ID : 1654002705 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1654002705 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:winlink_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;46m =======add node_fun stack:window_destroy========= [0m
[40;44m =======trace_function_path window_destroy  function_call count: 4 level :3========  [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
test.c:336:17: warning: use location
  336 |                 ARRAY_TRUNC(&windows, 1);
      |                 ^
dot graph start relate form ID : 982712499
from window_destroy basic block 7dot graph end relate end

dot graph relate stmt start ID : 91376514 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 91376514 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

# .MEM_36 = VDEF <.MEM_27>
free (_20);
[40;31m  find free stmt free same pointer [0m
# .MEM_36 = VDEF <.MEM_27>
free (_20);
test.c:339:17: warning: use location
  339 |                 xfree(w->name);
      |                 ^
dot graph start relate form ID : 982712499
from window_destroy basic block 12dot graph end relate end

dot graph relate stmt start ID : 1612159101 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1612159101 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
test.c:340:9: warning: use location
  340 |         xfree(w);
      |         ^
dot graph start relate form ID : 982712499
from window_destroy basic block 13dot graph end relate end

dot graph relate stmt start ID : 1632081562 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1632081562 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:window_destroy========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;46m =======add node_fun stack:window_index========= [0m
[40;44m =======trace_function_path window_index  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:window_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_NEXT========= [0m
[40;44m =======trace_function_path winlinks_RB_NEXT  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:winlinks_RB_NEXT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;46m =======add node_fun stack:winlink_add========= [0m
[40;44m =======trace_function_path winlink_add  function_call count: 4 level :2========  [0m
[40;36m ======= node_fun:winlink_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT  function_call count: 2 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;46m =======add node_fun stack:winlink_next_index========= [0m
[40;44m =======trace_function_path winlink_next_index  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:winlink_next_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;46m =======add node_fun stack:winlinks_RB_MINMAX========= [0m
[40;44m =======trace_function_path winlinks_RB_MINMAX  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:winlinks_RB_MINMAX========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;46m =======add node_fun stack:session_group_find========= [0m
[40;44m =======trace_function_path session_group_find  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:session_group_find========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:21 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

session_group_add (groupwith_49, s_59);
test.c:691:25: warning: use location
  691 |                         session_group_add(groupwith, s);
      |                         ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 9: session_group_add (groupwith_49, s_59);
test.c:691:25: warning: use location
  691 |                         session_group_add(groupwith, s);
      |                         ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start session_group_add (groupwith_49, s_59);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start session_group_add (groupwith_49, s_59);
test.c:691:25: warning: use location
  691 |                         session_group_add(groupwith, s);
      |                         ^
dot graph stmt end

this stmt call this function :session_group_add
trace fucntion name:session_group_add 
[40;44m =======trace_function_path session_group_add  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:session_group_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;46m =======add node_fun stack:session_group_find========= [0m
[40;44m =======trace_function_path session_group_find  function_call count: 0 level :1========  [0m
[40;36m ======= node_fun:session_group_find========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:21 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: use location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 8: session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: use location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start session_attach (s_59, w_61, idx_57, &cause);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: use location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
dot graph stmt end

this stmt call this function :session_attach
trace fucntion name:session_attach 
[40;44m =======trace_function_path session_attach  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:session_attach========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_synchronize_from========= [0m
[40;46m =======add node_fun stack:session_group_synchronize_from========= [0m
[40;44m =======trace_function_path session_group_synchronize_from  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:session_group_synchronize_from========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;46m =======add node_fun stack:session_group_synchronize1========= [0m
[40;44m =======trace_function_path session_group_synchronize1  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:session_group_synchronize1========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;46m =======add node_fun stack:winlink_remove========= [0m
[40;44m =======trace_function_path winlink_remove  function_call count: 5 level :3========  [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16>
free (_2);
test.c:350:17: warning: use location
  350 |                 xfree(wl->status_text);
      |                 ^
dot graph start relate form ID : 433248710
from winlink_remove basic block 3dot graph end relate end

dot graph relate stmt start ID : 295196602 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 295196602 stmt(free) :free (_2);
test.c:350:17: warning: use location
dot graph relate end

# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_18 = VDEF <.MEM_13>
free (wl_10(D));
test.c:351:9: warning: use location
  351 |         xfree(wl);
      |         ^
dot graph start relate form ID : 433248710
from winlink_remove basic block 4dot graph end relate end

dot graph relate stmt start ID : 1960760972 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1960760972 stmt(free) :free (wl_10(D));
test.c:351:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:winlink_remove========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;46m =======add node_fun stack:window_destroy========= [0m
[40;44m =======trace_function_path window_destroy  function_call count: 4 level :4========  [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_31 = VDEF <.MEM_27>
free (_10);
test.c:336:17: warning: use location
  336 |                 ARRAY_TRUNC(&windows, 1);
      |                 ^
dot graph start relate form ID : 524625224
from window_destroy basic block 7dot graph end relate end

dot graph relate stmt start ID : 1907355704 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1907355704 stmt(free) :free (_10);
test.c:336:17: warning: use location
dot graph relate end

# .MEM_36 = VDEF <.MEM_27>
free (_20);
[40;31m  find free stmt free same pointer [0m
# .MEM_36 = VDEF <.MEM_27>
free (_20);
test.c:339:17: warning: use location
  339 |                 xfree(w->name);
      |                 ^
dot graph start relate form ID : 524625224
from window_destroy basic block 12dot graph end relate end

dot graph relate stmt start ID : 1445358886 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1445358886 stmt(free) :free (_20);
test.c:339:17: warning: use location
dot graph relate end

# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_26>
free (w_24(D));
test.c:340:9: warning: use location
  340 |         xfree(w);
      |         ^
dot graph start relate form ID : 524625224
from window_destroy basic block 13dot graph end relate end

dot graph relate stmt start ID : 805972527 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 805972527 stmt(free) :free (w_24(D));
test.c:340:9: warning: use location
dot graph relate end

[40;36m ======= node_fun:window_destroy========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;46m =======add node_fun stack:window_index========= [0m
[40;44m =======trace_function_path window_index  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:window_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_REMOVE_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_NEXT========= [0m
[40;44m =======trace_function_path winlinks_RB_NEXT  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_NEXT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;46m =======add node_fun stack:winlink_add========= [0m
[40;44m =======trace_function_path winlink_add  function_call count: 4 level :3========  [0m
[40;36m ======= node_fun:winlink_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT  function_call count: 2 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;46m =======add node_fun stack:winlink_next_index========= [0m
[40;44m =======trace_function_path winlink_next_index  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:winlink_next_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;46m =======add node_fun stack:winlinks_RB_MINMAX========= [0m
[40;44m =======trace_function_path winlinks_RB_MINMAX  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_MINMAX========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;46m =======add node_fun stack:session_group_find========= [0m
[40;44m =======trace_function_path session_group_find  function_call count: 0 level :2========  [0m
[40;36m ======= node_fun:session_group_find========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;46m =======add node_fun stack:winlink_add========= [0m
[40;44m =======trace_function_path winlink_add  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:winlink_add========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;46m =======add node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======trace_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_INSERT_COLOR========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :3========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;46m =======add node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;46m =======add node_fun stack:winlink_next_index========= [0m
[40;44m =======trace_function_path winlink_next_index  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:winlink_next_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;46m =======add node_fun stack:winlink_find_by_index========= [0m
[40;44m =======trace_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;36m ======= node_fun:winlink_find_by_index========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;46m =======add node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======trace_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;36m ======= node_fun:winlinks_RB_FIND========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;46m =======add node_fun stack:winlink_cmp========= [0m
[40;44m =======trace_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;36m ======= node_fun:winlink_cmp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:26 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

free (cmd_25);
test.c:689:17: warning: use location
  689 |                 free(cmd);
      |                 ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 8: free (cmd_25);
test.c:689:17: warning: use location
  689 |                 free(cmd);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start free (cmd_25);
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start free (cmd_25);
test.c:689:17: warning: use location
  689 |                 free(cmd);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (cmd_25);
test.c:689:17: warning: use location
[40;32m    HAS FREE STMT count:27 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

idx_57 = idx_26 + 1;
test.c:686:21: warning: use location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc en1

dot graph target line desc form basic block 8: idx_57 = idx_26 + 1;
test.c:686:21: warning: use location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_88>
name_54 = strdup (_14);
test.c:685:24: warning: use location
  685 |                 name = strdup(argv[i]);
      |                        ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start idx_57 = idx_26 + 1;
name_54 = strdup (_14);
dot graph stmt end

dot graph stmt start idx_57 = idx_26 + 1;
test.c:686:21: warning: use location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
dot graph stmt end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph arrowsubgraph cluster_974920546 dot graph subgraph  session_select (s_59, _20);
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
dot graph subgrapend

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph arrowsubgraph cluster_1336351775 dot graph subgraph  _19 = s_59->windows.rbh_root;
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
dot graph subgrapend

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph arrowsubgraph cluster_1753856618 dot graph subgraph  _20 = _19->idx;
_19 = s_59->windows.rbh_root;
dot graph subgrapend

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph arrowsubgraph cluster_867163417 dot graph subgraph  session_group_synchronize_to (s_59);
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
dot graph subgrapend

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph arrowsubgraph cluster_1282275530 dot graph subgraph  session_group_add (groupwith_49, s_59);
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc5c9563f30
    type <pointer_type 0x7fc5c907c3f0
        type <integer_type 0x7fc5c907ab28 char public QI
            size <integer_cst 0x7fc5c955bca8 constant 8>
            unit-size <integer_cst 0x7fc5c955bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc5c95703f0 precision:8 min <integer_cst 0x7fc5c906a828 -128> max <integer_cst 0x7fc5c906a810 127> context <translation_unit_decl 0x7fc5c9566168 test.c>
            pointer_to_this <pointer_type 0x7fc5c9086dc8>>
        public unsigned DI
        size <integer_cst 0x7fc5c955bbb8 constant 64>
        unit-size <integer_cst 0x7fc5c955bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc5c9566168 test.c>
        pointer_to_this <pointer_type 0x7fc5c907c498>>
    var <var_decl 0x7fc5c909e120 name>
    def_stmt name_54 = strdup (_14);
    version:54
    ptr-info 0x7fc5c90a9ac8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
[40;35m target gimple type: addr_expr [0m
# .MEM_96 = VDEF <.MEM_95>
session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_95 = VDEF <.MEM_94>
session_group_synchronize_to (s_59);
test.c:692:25: warning: free in this location
  692 |                         session_group_synchronize_to(s);
      |                         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_96 = VDEF <.MEM_95>
session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: free in this location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_96 = VDEF <.MEM_95>
session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: free in this location
  689 |                 free(cmd);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_96 = VDEF <.MEM_95>
session_select (s_59, _20);
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_95 = VDEF <.MEM_94>
session_group_synchronize_to (s_59);
test.c:692:25: warning: free in this location
  692 |                         session_group_synchronize_to(s);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: free in this location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: free in this location
  689 |                 free(cmd);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_19 = s_59->windows.rbh_root;
test.c:693:43: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_95 = VDEF <.MEM_94>
session_group_synchronize_to (s_59);
test.c:692:25: warning: free in this location
  692 |                         session_group_synchronize_to(s);
      |                         ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: free in this location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: free in this location
  689 |                 free(cmd);
      |                 ^
[40;35m target gimple type: ssa_name [0m
# VUSE <.MEM_95>
_20 = _19->idx;
test.c:693:25: warning: use location
  693 |                         session_select(s, RB_ROOT(&s->windows)->idx);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
[40;35m target gimple type: addr_expr [0m
# .MEM_95 = VDEF <.MEM_94>
session_group_synchronize_to (s_59);
test.c:692:25: warning: use location
  692 |                         session_group_synchronize_to(s);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: free in this location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_95 = VDEF <.MEM_94>
session_group_synchronize_to (s_59);
test.c:692:25: warning: use location
  692 |                         session_group_synchronize_to(s);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: free in this location
  689 |                 free(cmd);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_95 = VDEF <.MEM_94>
session_group_synchronize_to (s_59);
test.c:692:25: warning: use location
  692 |                         session_group_synchronize_to(s);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
[40;35m target gimple type: addr_expr [0m
# .MEM_94 = VDEF <.MEM_93>
session_group_add (groupwith_49, s_59);
test.c:691:25: warning: use location
  691 |                         session_group_add(groupwith, s);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: free in this location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_94 = VDEF <.MEM_93>
session_group_add (groupwith_49, s_59);
test.c:691:25: warning: use location
  691 |                         session_group_add(groupwith, s);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: free in this location
  689 |                 free(cmd);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_94 = VDEF <.MEM_93>
session_group_add (groupwith_49, s_59);
test.c:691:25: warning: use location
  691 |                         session_group_add(groupwith, s);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
[40;35m target gimple type: addr_expr [0m
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: use location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_90 = VDEF <.MEM_89>
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
test.c:686:21: warning: free in this location
  686 |                 s = session_create(name, cmd, "cwd", NULL, NULL, idx++, sx, sy, &cause);
      |                     ^
[40;35m target gimple type: addr_expr [0m
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: use location
  689 |                 free(cmd);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
session_attach (s_59, w_61, idx_57, &cause);
test.c:688:17: warning: free in this location
  688 |                 session_attach(s, w, idx++, &cause);
      |                 ^
[40;35m target gimple type: addr_expr [0m
# .MEM_93 = VDEF <.MEM_92>
free (cmd_25);
test.c:689:17: warning: use location
  689 |                 free(cmd);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:27 [0m
[40;31m  	possible double free [rigorous]:27 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:27 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc5c95639d8
    type <pointer_type 0x7fc5c907c3f0
        type <integer_type 0x7fc5c907ab28 char public QI
            size <integer_cst 0x7fc5c955bca8 constant 8>
            unit-size <integer_cst 0x7fc5c955bcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc5c95703f0 precision:8 min <integer_cst 0x7fc5c906a828 -128> max <integer_cst 0x7fc5c906a810 127> context <translation_unit_decl 0x7fc5c9566168 test.c>
            pointer_to_this <pointer_type 0x7fc5c9086dc8>>
        public unsigned DI
        size <integer_cst 0x7fc5c955bbb8 constant 64>
        unit-size <integer_cst 0x7fc5c955bbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc5c9566168 test.c>
        pointer_to_this <pointer_type 0x7fc5c907c498>>
   
    def_stmt _14 = *_13;
    version:14
    ptr-info 0x7fc5c90a99d8>
# VUSE <.MEM_88>
_14 = *_13;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:session_create========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_create  function_call count: 8 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_select========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_select  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_stack_push========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_push  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre_check_funciton:winlink_stack_push========= [0m
[40;42m =======start_check_funciton:winlink_stack_push========= [0m
[40;33m =======POP node_fun stack:winlink_stack_push========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:session_select========= [0m
[40;42m =======start_check_funciton:session_select========= [0m
[40;33m =======POP node_fun stack:session_select========= [0m
[40;42m =======pre add _ fucntion:session_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_destroy  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:session_group_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_remove  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_remove========= [0m
[40;42m =======start_check_funciton:session_group_remove========= [0m
[40;33m =======POP node_fun stack:session_group_remove========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_index  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_index========= [0m
[40;42m =======start_check_funciton:session_index========= [0m
[40;33m =======POP node_fun stack:session_index========= [0m
[40;42m =======pre_check_funciton:session_destroy========= [0m
[40;42m =======start_check_funciton:session_destroy========= [0m
[40;33m =======POP node_fun stack:session_destroy========= [0m
[40;42m =======pre add _ fucntion:session_new========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_new  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_attach========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_attach  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize_from========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize_from  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize1  function_call count: 5 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :9========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize1========= [0m
[40;42m =======start_check_funciton:session_group_synchronize1========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize1========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize_from========= [0m
[40;42m =======start_check_funciton:session_group_synchronize_from========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize_from========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre_check_funciton:session_attach========= [0m
[40;42m =======start_check_funciton:session_attach========= [0m
[40;33m =======POP node_fun stack:session_attach========= [0m
[40;42m =======pre add _ fucntion:window_create1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_create1  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:window_create1========= [0m
[40;42m =======start_check_funciton:window_create1========= [0m
[40;33m =======POP node_fun stack:window_create1========= [0m
[40;42m =======pre_check_funciton:session_new========= [0m
[40;42m =======start_check_funciton:session_new========= [0m
[40;33m =======POP node_fun stack:session_new========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:session_create========= [0m
[40;42m =======start_check_funciton:session_create========= [0m
[40;33m =======POP node_fun stack:session_create========= [0m
[40;44m =======node_fun:session_new========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_new  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_attach========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_attach  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize_from========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize_from  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize1  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize1========= [0m
[40;42m =======start_check_funciton:session_group_synchronize1========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize1========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize_from========= [0m
[40;42m =======start_check_funciton:session_group_synchronize_from========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize_from========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre_check_funciton:session_attach========= [0m
[40;42m =======start_check_funciton:session_attach========= [0m
[40;33m =======POP node_fun stack:session_attach========= [0m
[40;42m =======pre add _ fucntion:window_create1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_create1  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:window_create1========= [0m
[40;42m =======start_check_funciton:window_create1========= [0m
[40;33m =======POP node_fun stack:window_create1========= [0m
[40;42m =======pre_check_funciton:session_new========= [0m
[40;42m =======start_check_funciton:session_new========= [0m
[40;33m =======POP node_fun stack:session_new========= [0m
[40;44m =======node_fun:session_attach========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_attach  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize_from========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize_from  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize1  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize1========= [0m
[40;42m =======start_check_funciton:session_group_synchronize1========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize1========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize_from========= [0m
[40;42m =======start_check_funciton:session_group_synchronize_from========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize_from========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre_check_funciton:session_attach========= [0m
[40;42m =======start_check_funciton:session_attach========= [0m
[40;33m =======POP node_fun stack:session_attach========= [0m
[40;44m =======node_fun:window_create1========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path window_create1  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:window_create1========= [0m
[40;42m =======start_check_funciton:window_create1========= [0m
[40;33m =======POP node_fun stack:window_create1========= [0m
[40;44m =======node_fun:join_pane_exec========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path join_pane_exec  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_select========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_select  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_stack_push========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_push  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre_check_funciton:winlink_stack_push========= [0m
[40;42m =======start_check_funciton:winlink_stack_push========= [0m
[40;33m =======POP node_fun stack:winlink_stack_push========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:session_select========= [0m
[40;42m =======start_check_funciton:session_select========= [0m
[40;33m =======POP node_fun stack:session_select========= [0m
[40;42m =======pre add _ fucntion:server_kill_window========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path server_kill_window  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_window========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_window  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_window========= [0m
[40;42m =======start_check_funciton:winlink_find_by_window========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_window========= [0m
[40;42m =======pre add _ fucntion:server_destroy_session_group========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path server_destroy_session_group  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:server_destroy_session_group========= [0m
[40;42m =======start_check_funciton:server_destroy_session_group========= [0m
[40;33m =======POP node_fun stack:server_destroy_session_group========= [0m
[40;42m =======pre add _ fucntion:session_detach========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_detach  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_destroy  function_call count: 7 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:session_group_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_remove  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_remove========= [0m
[40;42m =======start_check_funciton:session_group_remove========= [0m
[40;33m =======POP node_fun stack:session_group_remove========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_index  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_index========= [0m
[40;42m =======start_check_funciton:session_index========= [0m
[40;33m =======POP node_fun stack:session_index========= [0m
[40;42m =======pre_check_funciton:session_destroy========= [0m
[40;42m =======start_check_funciton:session_destroy========= [0m
[40;33m =======POP node_fun stack:session_destroy========= [0m
[40;42m =======pre add _ fucntion:session_group_synchronize_from========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize_from  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize1  function_call count: 5 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :9========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize1========= [0m
[40;42m =======start_check_funciton:session_group_synchronize1========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize1========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize_from========= [0m
[40;42m =======start_check_funciton:session_group_synchronize_from========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize_from========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre_check_funciton:session_detach========= [0m
[40;42m =======start_check_funciton:session_detach========= [0m
[40;33m =======POP node_fun stack:session_detach========= [0m
[40;42m =======pre add _ fucntion:session_has========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_has  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_has========= [0m
[40;42m =======start_check_funciton:session_has========= [0m
[40;33m =======POP node_fun stack:session_has========= [0m
[40;42m =======pre_check_funciton:server_kill_window========= [0m
[40;42m =======start_check_funciton:server_kill_window========= [0m
[40;33m =======POP node_fun stack:server_kill_window========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:cmd_find_pane========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_find_pane  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:cmd_find_pane========= [0m
[40;42m =======start_check_funciton:cmd_find_pane========= [0m
[40;33m =======POP node_fun stack:cmd_find_pane========= [0m
[40;42m =======pre_check_funciton:join_pane_exec========= [0m
[40;42m =======start_check_funciton:join_pane_exec========= [0m
[40;33m =======POP node_fun stack:join_pane_exec========= [0m
[40;44m =======node_fun:session_select========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_select  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_stack_push========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_push  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre_check_funciton:winlink_stack_push========= [0m
[40;42m =======start_check_funciton:winlink_stack_push========= [0m
[40;33m =======POP node_fun stack:winlink_stack_push========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:session_select========= [0m
[40;42m =======start_check_funciton:session_select========= [0m
[40;33m =======POP node_fun stack:session_select========= [0m
[40;44m =======node_fun:server_kill_window========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path server_kill_window  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_window========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_window  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_window========= [0m
[40;42m =======start_check_funciton:winlink_find_by_window========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_window========= [0m
[40;42m =======pre add _ fucntion:server_destroy_session_group========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path server_destroy_session_group  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:server_destroy_session_group========= [0m
[40;42m =======start_check_funciton:server_destroy_session_group========= [0m
[40;33m =======POP node_fun stack:server_destroy_session_group========= [0m
[40;42m =======pre add _ fucntion:session_detach========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_detach  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_destroy  function_call count: 7 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:session_group_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_remove  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_remove========= [0m
[40;42m =======start_check_funciton:session_group_remove========= [0m
[40;33m =======POP node_fun stack:session_group_remove========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_index  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_index========= [0m
[40;42m =======start_check_funciton:session_index========= [0m
[40;33m =======POP node_fun stack:session_index========= [0m
[40;42m =======pre_check_funciton:session_destroy========= [0m
[40;42m =======start_check_funciton:session_destroy========= [0m
[40;33m =======POP node_fun stack:session_destroy========= [0m
[40;42m =======pre add _ fucntion:session_group_synchronize_from========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize_from  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize1  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :8========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize1========= [0m
[40;42m =======start_check_funciton:session_group_synchronize1========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize1========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize_from========= [0m
[40;42m =======start_check_funciton:session_group_synchronize_from========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize_from========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre_check_funciton:session_detach========= [0m
[40;42m =======start_check_funciton:session_detach========= [0m
[40;33m =======POP node_fun stack:session_detach========= [0m
[40;42m =======pre add _ fucntion:session_has========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_has  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_has========= [0m
[40;42m =======start_check_funciton:session_has========= [0m
[40;33m =======POP node_fun stack:session_has========= [0m
[40;42m =======pre_check_funciton:server_kill_window========= [0m
[40;42m =======start_check_funciton:server_kill_window========= [0m
[40;33m =======POP node_fun stack:server_kill_window========= [0m
[40;44m =======node_fun:server_destroy_session_group========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path server_destroy_session_group  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:server_destroy_session_group========= [0m
[40;42m =======start_check_funciton:server_destroy_session_group========= [0m
[40;33m =======POP node_fun stack:server_destroy_session_group========= [0m
[40;44m =======node_fun:session_detach========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_detach  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_destroy  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:session_group_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_remove  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_remove========= [0m
[40;42m =======start_check_funciton:session_group_remove========= [0m
[40;33m =======POP node_fun stack:session_group_remove========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_index  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_index========= [0m
[40;42m =======start_check_funciton:session_index========= [0m
[40;33m =======POP node_fun stack:session_index========= [0m
[40;42m =======pre_check_funciton:session_destroy========= [0m
[40;42m =======start_check_funciton:session_destroy========= [0m
[40;33m =======POP node_fun stack:session_destroy========= [0m
[40;42m =======pre add _ fucntion:session_group_synchronize_from========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize_from  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize1  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :7========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize1========= [0m
[40;42m =======start_check_funciton:session_group_synchronize1========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize1========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize_from========= [0m
[40;42m =======start_check_funciton:session_group_synchronize_from========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize_from========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre_check_funciton:session_detach========= [0m
[40;42m =======start_check_funciton:session_detach========= [0m
[40;33m =======POP node_fun stack:session_detach========= [0m
[40;44m =======node_fun:session_destroy========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_destroy  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre add _ fucntion:session_group_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_remove  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_remove========= [0m
[40;42m =======start_check_funciton:session_group_remove========= [0m
[40;33m =======POP node_fun stack:session_group_remove========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:session_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_index  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_index========= [0m
[40;42m =======start_check_funciton:session_index========= [0m
[40;33m =======POP node_fun stack:session_index========= [0m
[40;42m =======pre_check_funciton:session_destroy========= [0m
[40;42m =======start_check_funciton:session_destroy========= [0m
[40;33m =======POP node_fun stack:session_destroy========= [0m
[40;44m =======node_fun:session_group_synchronize_from========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_group_synchronize_from  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize1  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize1========= [0m
[40;42m =======start_check_funciton:session_group_synchronize1========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize1========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize_from========= [0m
[40;42m =======start_check_funciton:session_group_synchronize_from========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize_from========= [0m
[40;44m =======node_fun:session_group_synchronize_to========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_group_synchronize_to  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:session_group_synchronize1========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_synchronize1  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :6========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize1========= [0m
[40;42m =======start_check_funciton:session_group_synchronize1========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize1========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize_to========= [0m
[40;42m =======start_check_funciton:session_group_synchronize_to========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize_to========= [0m
[40;44m =======node_fun:session_group_synchronize1========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_group_synchronize1  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlink_add========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :5========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_group_synchronize1========= [0m
[40;42m =======start_check_funciton:session_group_synchronize1========= [0m
[40;33m =======POP node_fun stack:session_group_synchronize1========= [0m
[40;44m =======node_fun:winlink_remove========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlink_remove  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:window_destroy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;42m =======pre_check_funciton:winlink_remove========= [0m
[40;42m =======start_check_funciton:winlink_remove========= [0m
[40;33m =======POP node_fun stack:winlink_remove========= [0m
[40;44m =======node_fun:window_destroy========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path window_destroy  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:window_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;42m =======pre_check_funciton:window_destroy========= [0m
[40;42m =======start_check_funciton:window_destroy========= [0m
[40;33m =======POP node_fun stack:window_destroy========= [0m
[40;44m =======node_fun:winlink_stack_push========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlink_stack_push  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_stack_remove========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;42m =======pre_check_funciton:winlink_stack_push========= [0m
[40;42m =======start_check_funciton:winlink_stack_push========= [0m
[40;33m =======POP node_fun stack:winlink_stack_push========= [0m
[40;44m =======node_fun:winlink_stack_remove========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlink_stack_remove  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_stack_remove========= [0m
[40;42m =======start_check_funciton:winlink_stack_remove========= [0m
[40;33m =======POP node_fun stack:winlink_stack_remove========= [0m
[40;44m =======node_fun:session_index========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_index  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_index========= [0m
[40;42m =======start_check_funciton:session_index========= [0m
[40;33m =======POP node_fun stack:session_index========= [0m
[40;44m =======node_fun:session_find========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_find  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre_check_funciton:session_find========= [0m
[40;42m =======start_check_funciton:session_find========= [0m
[40;33m =======POP node_fun stack:session_find========= [0m
[40;44m =======node_fun:session_group_remove========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_group_remove  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_remove========= [0m
[40;42m =======start_check_funciton:session_group_remove========= [0m
[40;33m =======POP node_fun stack:session_group_remove========= [0m
[40;44m =======node_fun:window_index========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path window_index  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:window_index========= [0m
[40;42m =======start_check_funciton:window_index========= [0m
[40;33m =======POP node_fun stack:window_index========= [0m
[40;44m =======node_fun:winlink_add========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlink_add  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;42m =======pre add _ fucntion:calloc========= [0m
[40;33m =======POP node_fun stack:calloc========= [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre add _ fucntion:winlink_next_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;42m =======pre_check_funciton:winlink_add========= [0m
[40;42m =======start_check_funciton:winlink_add========= [0m
[40;33m =======POP node_fun stack:winlink_add========= [0m
[40;44m =======node_fun:session_group_add========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_group_add  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:session_group_find========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;42m =======pre_check_funciton:session_group_add========= [0m
[40;42m =======start_check_funciton:session_group_add========= [0m
[40;33m =======POP node_fun stack:session_group_add========= [0m
[40;44m =======node_fun:session_group_find========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_group_find  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:session_group_find========= [0m
[40;42m =======start_check_funciton:session_group_find========= [0m
[40;33m =======POP node_fun stack:session_group_find========= [0m
[40;44m =======node_fun:session_has========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path session_has  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:session_has========= [0m
[40;42m =======start_check_funciton:session_has========= [0m
[40;33m =======POP node_fun stack:session_has========= [0m
[40;44m =======node_fun:cmd_find_pane========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path cmd_find_pane  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:cmd_find_pane========= [0m
[40;42m =======start_check_funciton:cmd_find_pane========= [0m
[40;33m =======POP node_fun stack:cmd_find_pane========= [0m
[40;44m =======node_fun:winlink_find_by_window========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlink_find_by_window  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_NEXT========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;42m =======pre add _ fucntion:winlinks_RB_MINMAX========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_window========= [0m
[40;42m =======start_check_funciton:winlink_find_by_window========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_window========= [0m
[40;44m =======node_fun:winlink_next_index========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlink_next_index  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_find_by_index========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;42m =======pre_check_funciton:winlink_next_index========= [0m
[40;42m =======start_check_funciton:winlink_next_index========= [0m
[40;33m =======POP node_fun stack:winlink_next_index========= [0m
[40;44m =======node_fun:winlink_find_by_index========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlink_find_by_index  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_FIND========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:winlink_find_by_index========= [0m
[40;42m =======start_check_funciton:winlink_find_by_index========= [0m
[40;33m =======POP node_fun stack:winlink_find_by_index========= [0m
[40;44m =======node_fun:xrealloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;44m =======node_fun:winlinks_RB_MINMAX========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlinks_RB_MINMAX  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_MINMAX========= [0m
[40;42m =======start_check_funciton:winlinks_RB_MINMAX========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_MINMAX========= [0m
[40;44m =======node_fun:winlinks_RB_NEXT========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlinks_RB_NEXT  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_NEXT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_NEXT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_NEXT========= [0m
[40;44m =======node_fun:winlinks_RB_FIND========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlinks_RB_FIND  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_FIND========= [0m
[40;42m =======start_check_funciton:winlinks_RB_FIND========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_FIND========= [0m
[40;44m =======node_fun:winlinks_RB_REMOVE========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE========= [0m
[40;44m =======node_fun:winlinks_RB_INSERT========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlinks_RB_INSERT  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======pre add _ fucntion:winlink_cmp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT========= [0m
[40;44m =======node_fun:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlinks_RB_REMOVE_COLOR  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_REMOVE_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_REMOVE_COLOR========= [0m
[40;44m =======node_fun:winlinks_RB_INSERT_COLOR========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlinks_RB_INSERT_COLOR  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;42m =======start_check_funciton:winlinks_RB_INSERT_COLOR========= [0m
[40;33m =======POP node_fun stack:winlinks_RB_INSERT_COLOR========= [0m
[40;44m =======node_fun:winlink_cmp========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path winlink_cmp  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:winlink_cmp========= [0m
[40;42m =======start_check_funciton:winlink_cmp========= [0m
[40;33m =======POP node_fun stack:winlink_cmp========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
windows.num = 0;
windows.list = 0B;
windows.space = 0;
sessions.num = 0;
sessions.list = 0B;
sessions.space = 0;
session_groups.tqh_first = 0B;
session_groups.tqh_last = &session_groups.tqh_first;
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = (long unsigned int) i_27;
_2 = _1 * 8;
_3 = argv_46(D) + _2;
_4 = *_3;
_5 = *_4;
if (_5 == 116)
  goto <bb 4>; [34.00%]
else
  goto <bb 6>; [66.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 324914280]:
if (i_27 > 0)
  goto <bb 5>; [55.75%]
else
  goto <bb 6>; [44.25%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 181139710]:
_6 = (long unsigned int) i_27;
_7 = _6 * 8;
_8 = _7 + 18446744073709551608;
_9 = argv_46(D) + _8;
_10 = *_9;
target_48 = strdup (_10);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 955630225]:
# target_24 = PHI <0B(3), 0B(4), target_48(5)>
groupwith_49 = session_find (target_24);
if (target_24 == 0B)
  goto <bb 7>; [17.43%]
else
  goto <bb 8>; [82.57%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 166566348]:
cmd_51 = strdup ("cmd");

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 955630225]:
# cmd_25 = PHI <0B(6), cmd_51(7)>
free (target_24);
_11 = (long unsigned int) i_27;
_12 = _11 * 8;
_13 = argv_46(D) + _12;
_14 = *_13;
name_54 = strdup (_14);
_15 = (unsigned int) sy_55(D);
_16 = (unsigned int) sx_56(D);
idx_57 = idx_26 + 1;
s_59 = session_create (name_54, cmd_25, "cwd", 0B, 0B, idx_26, _16, _15, &cause);
_17 = (unsigned int) sy_55(D);
_18 = (unsigned int) sx_56(D);
w_61 = window_create1 (_18, _17);
idx_62 = idx_26 + 2;
session_attach (s_59, w_61, idx_57, &cause);
free (cmd_25);
if (groupwith_49 != 0B)
  goto <bb 9>; [53.47%]
else
  goto <bb 10>; [46.53%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 510975480]:
session_group_add (groupwith_49, s_59);
session_group_synchronize_to (s_59);
_19 = s_59->windows.rbh_root;
_20 = _19->idx;
session_select (s_59, _20);

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 955630225]:
i_68 = i_27 + 1;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 1073741824]:
# idx_26 = PHI <0(2), idx_62(10)>
# i_27 = PHI <0(2), i_68(10)>
if (i_27 < argc_42(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 12>; [11.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 118111600]:
join_pane_exec ();
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 955630225]:
_21 = sessions.list;
_22 = *_21;
session_destroy (_22);

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 1073741824]:
_23 = sessions.num;
if (_23 != 0)
  goto <bb 13>; [89.00%]
else
  goto <bb 15>; [11.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 118111600]:
cause ={v} {CLOBBER};
return 0;

=======Mapping node_fun:session_create=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
s_52 = malloc (112);
s_52->references = 0;
s_52->flags = 0;
s_52->curw = 0B;
s_52->lastw.tqh_first = 0B;
_1 = &s_52->lastw.tqh_first;
s_52->lastw.tqh_last = _1;
s_52->windows.rbh_root = 0B;
s_52->tio = 0B;
s_52->sx = sx_60(D);
s_52->sy = sy_62(D);
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686026]:
_2 = sessions.list;
_3 = (long unsigned int) i_43;
_4 = _3 * 8;
_5 = _2 + _4;
_6 = *_5;
if (_6 == 0B)
  goto <bb 4>; [5.50%]
else
  goto <bb 5>; [94.50%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 55807731]:
_7 = sessions.list;
_8 = (long unsigned int) i_43;
_9 = _8 * 8;
_10 = _7 + _9;
*_10 = s_52;
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 958878296]:
i_64 = i_43 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# i_43 = PHI <0(2), i_64(5)>
_11 = sessions.num;
if (_11 > i_43)
  goto <bb 3>; [94.50%]
else
  goto <bb 7>; [5.50%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 114863531]:
_12 = sessions.num;
if (_12 == i_43)
  goto <bb 8>; [34.00%]
else
  goto <bb 18>; [66.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 39053601]:
_13 = sessions.num;
if (_13 > 1073741823)
  goto <bb 9>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 15621]:
printf ("number too big%s", "");
exit (1);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 39037980]:
_14 = sessions.num;
_15 = _14 + 1;
_16 = 1073741824 / _15;
if (_16 <= 7)
  goto <bb 11>; [0.04%]
else
  goto <bb 12>; [99.96%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 15615]:
printf ("size too big%s", "");
exit (1);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 39022365]:
_17 = sessions.space;
if (_17 == 0)
  goto <bb 13>; [33.00%]
else
  goto <bb 14>; [67.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 12877380]:
sessions.space = 80;
_18 = sessions.space;
_19 = sessions.list;
_20 = xrealloc (_19, 1, _18);
sessions.list = _20;

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 39022365]:
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 315726406]:
_21 = sessions.space;
_22 = sessions.list;
_23 = xrealloc (_22, 2, _21);
sessions.list = _23;
_24 = sessions.space;
_25 = _24 * 2;
sessions.space = _25;

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 354748771]:
_26 = sessions.space;
_27 = sessions.num;
_28 = _27 + 1;
_29 = (long unsigned int) _28;
_30 = _29 * 8;
if (_26 <= _30)
  goto <bb 15>; [89.00%]
else
  goto <bb 17>; [11.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 39022365]:
_31 = sessions.list;
_32 = sessions.num;
_33 = (long unsigned int) _32;
_34 = _33 * 8;
_35 = _31 + _34;
*_35 = s_52;
_36 = sessions.num;
_37 = _36 + 1;
sessions.num = _37;

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 114832295]:
if (name_78(D) == 0B)
  goto <bb 19>; [0.04%]
else
  goto <bb 20>; [99.96%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 45933]:
printf ("no name%s\n", "");
exit (1);

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 114786362]:
_38 = strdup (name_78(D));
s_52->name = _38;
if (cmd_81(D) != 0B)
  goto <bb 21>; [70.00%]
else
  goto <bb 24>; [30.00%]

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 80350454]:
_39 = session_new (s_52, 0B, cmd_81(D), cwd_82(D), idx_83(D), cause_84(D));
if (_39 == 0B)
  goto <bb 22>; [8.27%]
else
  goto <bb 23>; [91.73%]

=======is loop:0=========

 bb index 22 
<bb 22> [local count: 6644982]:
session_destroy (s_52);
goto <bb 25>; [100.00%]

=======is loop:0=========

 bb index 23 
<bb 23> [local count: 73705471]:
_40 = s_52->windows.rbh_root;
_41 = _40->idx;
session_select (s_52, _41);

=======is loop:0=========

 bb index 24 
<bb 24> [local count: 108141380]:
_42 = s_52->name;
printf ("session %s created\n", _42);

=======is loop:0=========

 bb index 25 
<bb 25> [local count: 114786362]:
# _44 = PHI <0B(22), s_52(24)>
return _44;

=======Mapping node_fun:session_new=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = s_6(D)->sy;
_2 = s_6(D)->sx;
w_8 = window_create1 (_2, _1);
if (w_8 == 0B)
  goto <bb 4>; [15.47%]
else
  goto <bb 3>; [84.53%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 907633961]:
_12 = session_attach (s_6(D), w_8, idx_9(D), cause_10(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _3 = PHI <0B(2), _12(3)>
return _3;

=======Mapping node_fun:session_attach=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = &s_3(D)->windows;
wl_8 = winlink_add (_1, w_5(D), idx_6(D));
if (wl_8 == 0B)
  goto <bb 3>; [17.43%]
else
  goto <bb 4>; [82.57%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 187153200]:
printf ("index in use: %d\n", idx_6(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
session_group_synchronize_from (s_3(D));
return wl_8;

=======Mapping node_fun:window_create1=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
w_43 = malloc (88);
w_43->name = 0B;
w_43->flags = 0;
w_43->active = 0B;
w_43->lastlayout = -1;
w_43->layout_root = 0B;
w_43->sx = sx_49(D);
w_43->sy = sy_51(D);
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686026]:
_1 = windows.list;
_2 = (long unsigned int) i_37;
_3 = _2 * 8;
_4 = _1 + _3;
_5 = *_4;
if (_5 == 0B)
  goto <bb 4>; [5.50%]
else
  goto <bb 5>; [94.50%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 55807731]:
_6 = windows.list;
_7 = (long unsigned int) i_37;
_8 = _7 * 8;
_9 = _6 + _8;
*_9 = w_43;
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 958878296]:
i_53 = i_37 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# i_37 = PHI <0(2), i_53(5)>
_10 = windows.num;
if (_10 > i_37)
  goto <bb 3>; [94.50%]
else
  goto <bb 7>; [5.50%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 114863531]:
_11 = windows.num;
if (_11 == i_37)
  goto <bb 8>; [34.00%]
else
  goto <bb 18>; [66.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 39053601]:
_12 = windows.num;
if (_12 > 1073741823)
  goto <bb 9>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 15621]:
printf ("number too big%s", "");
exit (1);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 39037980]:
_13 = windows.num;
_14 = _13 + 1;
_15 = 1073741824 / _14;
if (_15 <= 7)
  goto <bb 11>; [0.04%]
else
  goto <bb 12>; [99.96%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 15615]:
printf ("size too big%s", "");
exit (1);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 39022365]:
_16 = windows.space;
if (_16 == 0)
  goto <bb 13>; [33.00%]
else
  goto <bb 14>; [67.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 12877380]:
windows.space = 80;
_17 = windows.space;
_18 = windows.list;
_19 = xrealloc (_18, 1, _17);
windows.list = _19;

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 39022365]:
goto <bb 16>; [100.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 315726406]:
_20 = windows.space;
_21 = windows.list;
_22 = xrealloc (_21, 2, _20);
windows.list = _22;
_23 = windows.space;
_24 = _23 * 2;
windows.space = _24;

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 354748771]:
_25 = windows.space;
_26 = windows.num;
_27 = _26 + 1;
_28 = (long unsigned int) _27;
_29 = _28 * 8;
if (_25 <= _29)
  goto <bb 15>; [89.00%]
else
  goto <bb 17>; [11.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 39022365]:
_30 = windows.list;
_31 = windows.num;
_32 = (long unsigned int) _31;
_33 = _32 * 8;
_34 = _30 + _33;
*_34 = w_43;
_35 = windows.num;
_36 = _35 + 1;
windows.num = _36;

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 114832295]:
w_43->references = 0;
return w_43;

=======Mapping node_fun:join_pane_exec=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
dst_wl_7 = cmd_find_pane (0, &dst_s);
if (dst_wl_7 == 0B)
  goto <bb 7>; [0.91%]
else
  goto <bb 3>; [99.09%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 1063970777]:
dst_w_8 = dst_wl_7->window;
src_wl_10 = cmd_find_pane (1, 0B);
if (src_wl_10 == 0B)
  goto <bb 7>; [0.45%]
else
  goto <bb 4>; [99.55%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1059182907]:
src_w_11 = src_wl_10->window;
if (dst_w_8 == src_w_11)
  goto <bb 5>; [0.45%]
else
  goto <bb 6>; [99.55%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 4766325]:
__builtin_puts (&"can\'t join a pane to its own window"[0]);
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1054416582]:
server_kill_window (src_w_11);
_1 = dst_wl_7->idx;
_2 = dst_s;
session_select (_2, _1);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# _3 = PHI <-1(2), -1(3), -1(5), 0(6)>
dst_s ={v} {CLOBBER};
return _3;

=======Mapping node_fun:session_select=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = &s_8(D)->windows;
wl_12 = winlink_find_by_index (_1, idx_10(D));
if (wl_12 == 0B)
  goto <bb 5>; [18.09%]
else
  goto <bb 3>; [81.91%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 879501929]:
_2 = s_8(D)->curw;
if (_2 == wl_12)
  goto <bb 5>; [30.95%]
else
  goto <bb 4>; [69.05%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 607296081]:
_3 = &s_8(D)->lastw;
winlink_stack_remove (_3, wl_12);
_4 = s_8(D)->curw;
_5 = &s_8(D)->lastw;
winlink_stack_push (_5, _4);
s_8(D)->curw = wl_12;

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _6 = PHI <-1(2), 1(3), 0(4)>
return _6;

=======Mapping node_fun:server_kill_window=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 47285799]:
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 382585114]:
_1 = sessions.list;
_2 = (long unsigned int) i_9;
_3 = _2 * 8;
_4 = _1 + _3;
s_14 = *_4;
if (s_14 == 0B)
  goto <bb 5>; [30.00%]
else
  goto <bb 4>; [70.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 267809581]:
_5 = session_has (s_14, w_15(D));
if (_5 == 0)
  goto <bb 5>; [57.11%]
else
  goto <bb 8>; [42.89%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 267721584]:
// predicted unlikely by continue predictor.
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1014686025]:
_6 = session_detach (s_14, wl_16);
if (_6 != 0)
  goto <bb 7>; [5.50%]
else
  goto <bb 8>; [94.50%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 55807731]:
server_destroy_session_group (s_14);
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1073741824]:
_7 = &s_14->windows;
wl_16 = winlink_find_by_window (_7, w_15(D));
if (wl_16 != 0B)
  goto <bb 6>; [94.50%]
else
  goto <bb 9>; [5.50%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 382585115]:
i_19 = i_9 + 1;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 429870914]:
# i_9 = PHI <0(2), i_19(9)>
_8 = sessions.num;
if (_8 > i_9)
  goto <bb 3>; [89.00%]
else
  goto <bb 11>; [11.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 47285800]:
return;

=======Mapping node_fun:server_destroy_session_group=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
sg_11 = session_group_find (s_10(D));
if (sg_11 == 0B)
  goto <bb 7>; [18.09%]
else
  goto <bb 3>; [81.91%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 879501929]:
_1 = sg_11->entry.tqe_next;
if (_1 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 615651353]:
_2 = sg_11->entry.tqe_next;
_3 = sg_11->entry.tqe_prev;
_2->entry.tqe_prev = _3;
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 263850576]:
_4 = sg_11->entry.tqe_prev;
session_groups.tqh_last = _4;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 879501929]:
_5 = sg_11->entry.tqe_prev;
_6 = sg_11->entry.tqe_next;
*_5 = _6;
free (sg_11);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073741824]:
return;

=======Mapping node_fun:session_detach=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = &s_6(D)->lastw;
winlink_stack_remove (_1, wl_8(D));
_2 = &s_6(D)->windows;
winlink_remove (_2, wl_8(D));
session_group_synchronize_from (s_6(D));
_3 = s_6(D)->windows.rbh_root;
if (_3 == 0B)
  goto <bb 3>; [9.81%]
else
  goto <bb 4>; [90.19%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 105334072]:
session_destroy (s_6(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _4 = PHI <0(2), 1(3)>
return _4;

=======Mapping node_fun:session_destroy=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114909494]:
_1 = s_31(D)->name;
printf ("session %s destroyed\n", _1);
_2 = session_index (s_31(D), &i);
if (_2 != 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 45964]:
printf ("session not found%s\n", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 114863530]:
_3 = sessions.list;
_4 = i;
_5 = (long unsigned int) _4;
_6 = _5 * 8;
_7 = _3 + _6;
*_7 = 0B;
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 958878294]:
_8 = sessions.num;
if (_8 > 1)
  goto <bb 6>; [74.50%]
else
  goto <bb 7>; [25.50%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 714364327]:
_9 = sessions.num;
_10 = _9 + 4294967295;
sessions.num = _10;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 244513967]:
_11 = sessions.list;
free (_11);
sessions.num = 0;
sessions.list = 0B;
sessions.space = 0;

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 958878294]:

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 1073741824]:
_12 = sessions.num;
if (_12 != 0)
  goto <bb 10>; [94.50%]
else
  goto <bb 11>; [5.50%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1014686025]:
_13 = sessions.list;
_14 = sessions.num;
_15 = _14 + 4294967295;
_16 = (long unsigned int) _15;
_17 = _16 * 8;
_18 = _13 + _17;
_19 = *_18;
if (_19 == 0B)
  goto <bb 5>; [94.50%]
else
  goto <bb 11>; [5.50%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 114863531]:
session_group_remove (s_31(D));
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 929350395]:
_20 = s_31(D)->lastw.tqh_first;
_21 = &s_31(D)->lastw;
winlink_stack_remove (_21, _20);

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 1044213926]:
_22 = s_31(D)->lastw.tqh_first;
if (_22 != 0B)
  goto <bb 12>; [89.00%]
else
  goto <bb 15>; [11.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 929350395]:
_23 = s_31(D)->windows.rbh_root;
_24 = &s_31(D)->windows;
winlink_remove (_24, _23);

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 1044213926]:
_25 = s_31(D)->windows.rbh_root;
if (_25 != 0B)
  goto <bb 14>; [89.00%]
else
  goto <bb 16>; [11.00%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 114863531]:
_26 = s_31(D)->name;
free (_26);
free (s_31(D));
i ={v} {CLOBBER};
return;

=======Mapping node_fun:session_group_synchronize_from=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 144196801]:
sg_7 = session_group_find (target_6(D));
if (sg_7 == 0B)
  goto <bb 8>; [18.09%]
else
  goto <bb 3>; [81.91%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 118111600]:
s_8 = sg_7->sessions.tqh_first;
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 955630225]:
if (s_1 != target_6(D))
  goto <bb 5>; [53.47%]
else
  goto <bb 6>; [46.53%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 510975480]:
session_group_synchronize1 (target_6(D), s_1);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 955630225]:
s_10 = s_1->gentry.tqe_next;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# s_1 = PHI <s_8(3), s_10(6)>
if (s_1 != 0B)
  goto <bb 4>; [89.00%]
else
  goto <bb 8>; [11.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 144196801]:
return;

=======Mapping node_fun:session_group_synchronize_to=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 140231388]:
sg_5 = session_group_find (s_4(D));
if (sg_5 == 0B)
  goto <bb 8>; [18.09%]
else
  goto <bb 3>; [81.91%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 114863530]:
target_6 = sg_5->sessions.tqh_first;
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1014686024]:
if (target_1 != s_4(D))
  goto <bb 7>; [5.50%]
else
  goto <bb 5>; [94.50%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 958878293]:
target_7 = target_1->gentry.tqe_next;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# target_1 = PHI <target_6(3), target_7(5)>
if (target_1 != 0B)
  goto <bb 4>; [94.50%]
else
  goto <bb 7>; [5.50%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 114863531]:
session_group_synchronize1 (target_1, s_4(D));

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 140231389]:
return;

=======Mapping node_fun:session_group_synchronize1=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 171052278]:
ww_21 = &target_20(D)->windows;
_1 = MEM[(struct winlinks *)target_20(D) + 40B].rbh_root;
if (_1 == 0B)
  goto <bb 3>; [30.95%]
else
  goto <bb 4>; [69.05%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 52940680]:
old_windows ={v} {CLOBBER};
old_lastw ={v} {CLOBBER};
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 118111598]:
_24 = MEM <long unsigned int> [(char * {ref-all})s_23(D) + 40B];
MEM <long unsigned int> [(char * {ref-all})&old_windows] = _24;
s_23(D)->windows.rbh_root = 0B;
wl_27 = winlinks_RB_MINMAX (ww_21, -1);
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630207]:
_2 = wl_13->idx;
_3 = wl_13->window;
_4 = &s_23(D)->windows;
winlink_add (_4, _3, _2);
wl_46 = winlinks_RB_NEXT (wl_13);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741805]:
# wl_13 = PHI <wl_27(4), wl_46(5)>
if (wl_13 != 0B)
  goto <bb 5>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111598]:
_28 = MEM <__int128 unsigned> [(char * {ref-all})s_23(D) + 24B];
MEM <__int128 unsigned> [(char * {ref-all})&old_lastw] = _28;
s_23(D)->lastw.tqh_first = 0B;
_5 = &s_23(D)->lastw.tqh_first;
s_23(D)->lastw.tqh_last = _5;
wl_32 = old_lastw.tqh_first;
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 955630224]:
_6 = wl_14->idx;
_7 = &s_23(D)->windows;
wl2_39 = winlink_find_by_index (_7, _6);
if (wl2_39 != 0B)
  goto <bb 9>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 668941160]:
wl2_39->sentry.tqe_next = 0B;
_8 = s_23(D)->lastw.tqh_last;
wl2_39->sentry.tqe_prev = _8;
_9 = s_23(D)->lastw.tqh_last;
*_9 = wl2_39;
_10 = &wl2_39->sentry.tqe_next;
s_23(D)->lastw.tqh_last = _10;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 955630225]:
wl_44 = wl_14->sentry.tqe_next;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 1073741824]:
# wl_14 = PHI <wl_32(7), wl_44(10)>
if (wl_14 != 0B)
  goto <bb 8>; [89.00%]
else
  goto <bb 12>; [11.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 118111600]:
_11 = s_23(D)->lastw.tqh_first;
s_23(D)->curw = _11;
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 955630224]:
wl_36 = old_windows.rbh_root;
winlink_remove (&old_windows, wl_36);

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 1073741824]:
_12 = old_windows.rbh_root;
if (_12 != 0B)
  goto <bb 13>; [89.00%]
else
  goto <bb 15>; [11.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 118111600]:
old_windows ={v} {CLOBBER};
old_lastw ={v} {CLOBBER};

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 171052281]:
return;

=======Mapping node_fun:winlink_remove=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
w_11 = wl_10(D)->window;
winlinks_RB_REMOVE (wwl_12(D), wl_10(D));
_1 = wl_10(D)->status_text;
if (_1 != 0B)
  goto <bb 3>; [53.47%]
else
  goto <bb 4>; [46.53%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 574129753]:
_2 = wl_10(D)->status_text;
free (_2);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
free (wl_10(D));
_3 = w_11->references;
if (_3 == 0)
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 429496]:
printf ("bad reference count%s\n", "");
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073312329]:
_4 = w_11->references;
_5 = _4 + 4294967295;
w_11->references = _5;
_6 = w_11->references;
if (_6 == 0)
  goto <bb 7>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 354193067]:
window_destroy (w_11);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1073312330]:
return;

=======Mapping node_fun:window_destroy=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114909494]:
_1 = window_index (w_24(D), &i);
if (_1 != 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 45964]:
printf ("index not found%s\n", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 114863530]:
_2 = windows.list;
_3 = i;
_4 = (long unsigned int) _3;
_5 = _4 * 8;
_6 = _2 + _5;
*_6 = 0B;
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 958878294]:
_7 = windows.num;
if (_7 > 1)
  goto <bb 6>; [74.50%]
else
  goto <bb 7>; [25.50%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 714364327]:
_8 = windows.num;
_9 = _8 + 4294967295;
windows.num = _9;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 244513967]:
_10 = windows.list;
free (_10);
windows.num = 0;
windows.list = 0B;
windows.space = 0;

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 958878294]:

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 1073741824]:
_11 = windows.num;
if (_11 != 0)
  goto <bb 10>; [94.50%]
else
  goto <bb 11>; [5.50%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1014686025]:
_12 = windows.list;
_13 = windows.num;
_14 = _13 + 4294967295;
_15 = (long unsigned int) _14;
_16 = _15 * 8;
_17 = _12 + _16;
_18 = *_17;
if (_18 == 0B)
  goto <bb 5>; [94.50%]
else
  goto <bb 11>; [5.50%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 114863531]:
_19 = w_24(D)->name;
if (_19 != 0B)
  goto <bb 12>; [53.47%]
else
  goto <bb 13>; [46.53%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 61417530]:
_20 = w_24(D)->name;
free (_20);

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 114863531]:
free (w_24(D));
i ={v} {CLOBBER};
return;

=======Mapping node_fun:winlink_stack_push=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
if (wl_9(D) == 0B)
  goto <bb 7>; [30.95%]
else
  goto <bb 3>; [69.05%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 741418728]:
winlink_stack_remove (stack_11(D), wl_9(D));
_1 = stack_11(D)->tqh_first;
wl_9(D)->sentry.tqe_next = _1;
_2 = wl_9(D)->sentry.tqe_next;
if (_2 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 518993111]:
_3 = stack_11(D)->tqh_first;
_4 = &wl_9(D)->sentry.tqe_next;
_3->sentry.tqe_prev = _4;
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 222425616]:
_5 = &wl_9(D)->sentry.tqe_next;
stack_11(D)->tqh_last = _5;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 741418729]:
stack_11(D)->tqh_first = wl_9(D);
_6 = &stack_11(D)->tqh_first;
wl_9(D)->sentry.tqe_prev = _6;

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073741824]:
return;

=======Mapping node_fun:winlink_stack_remove=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 140231388]:
if (wl_10(D) == 0B)
  goto <bb 11>; [18.09%]
else
  goto <bb 3>; [81.91%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 114863530]:
wl2_13 = stack_12(D)->tqh_first;
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1014686024]:
if (wl2_7 == wl_10(D))
  goto <bb 5>; [5.50%]
else
  goto <bb 9>; [94.50%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 55807731]:
_1 = wl_10(D)->sentry.tqe_next;
if (_1 != 0B)
  goto <bb 6>; [70.00%]
else
  goto <bb 7>; [30.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 39065412]:
_2 = wl_10(D)->sentry.tqe_next;
_3 = wl_10(D)->sentry.tqe_prev;
_2->sentry.tqe_prev = _3;
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 16742319]:
_4 = wl_10(D)->sentry.tqe_prev;
stack_12(D)->tqh_last = _4;

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 55807731]:
_5 = wl_10(D)->sentry.tqe_prev;
_6 = wl_10(D)->sentry.tqe_next;
*_5 = _6;
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 958878293]:
wl2_14 = wl2_7->sentry.tqe_next;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# wl2_7 = PHI <wl2_13(3), wl2_14(9)>
if (wl2_7 != 0B)
  goto <bb 4>; [94.50%]
else
  goto <bb 11>; [5.50%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 140231389]:
return;

=======Mapping node_fun:session_index=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
*i_14(D) = 0;
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686026]:
_1 = sessions.list;
_2 = *i_14(D);
_3 = (long unsigned int) _2;
_4 = _3 * 8;
_5 = _1 + _4;
_6 = *_5;
if (_6 == s_16(D))
  goto <bb 6>; [5.50%]
else
  goto <bb 4>; [94.50%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 958878296]:
_7 = *i_14(D);
_8 = _7 + 1;
*i_14(D) = _8;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
_9 = *i_14(D);
_10 = sessions.num;
if (_9 < _10)
  goto <bb 3>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 114863531]:
# _11 = PHI <0(3), -1(5)>
return _11;

=======Mapping node_fun:session_find=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 98121212]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686025]:
_1 = sessions.list;
_2 = (long unsigned int) i_8;
_3 = _2 * 8;
_4 = _1 + _3;
s_11 = *_4;
if (s_11 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 710280220]:
_5 = s_11->name;
_6 = strcmp (_5, name_12(D));
if (_6 == 0)
  goto <bb 7>; [5.50%]
else
  goto <bb 5>; [94.50%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 975620613]:
i_13 = i_8 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# i_8 = PHI <0(2), i_13(5)>
_7 = sessions.num;
if (_7 > i_8)
  goto <bb 3>; [94.50%]
else
  goto <bb 7>; [5.50%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 98121212]:
# _9 = PHI <s_11(4), 0B(6)>
return _9;

=======Mapping node_fun:session_group_remove=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
sg_35 = session_group_find (s_34(D));
if (sg_35 == 0B)
  goto <bb 16>; [18.09%]
else
  goto <bb 3>; [81.91%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 879501929]:
_1 = s_34(D)->gentry.tqe_next;
if (_1 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 615651353]:
_2 = s_34(D)->gentry.tqe_next;
_3 = s_34(D)->gentry.tqe_prev;
_2->gentry.tqe_prev = _3;
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 263850576]:
_4 = s_34(D)->gentry.tqe_prev;
sg_35->sessions.tqh_last = _4;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 879501929]:
_5 = s_34(D)->gentry.tqe_prev;
_6 = s_34(D)->gentry.tqe_next;
*_5 = _6;
_7 = sg_35->sessions.tqh_first;
_8 = _7->gentry.tqe_next;
if (_8 == 0B)
  goto <bb 7>; [30.00%]
else
  goto <bb 11>; [70.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 263850576]:
_9 = sg_35->sessions.tqh_first;
_10 = _9->gentry.tqe_next;
if (_10 != 0B)
  goto <bb 8>; [70.00%]
else
  goto <bb 9>; [30.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 184695404]:
_11 = sg_35->sessions.tqh_first;
_12 = sg_35->sessions.tqh_first;
_13 = _12->gentry.tqe_next;
_14 = _11->gentry.tqe_prev;
_13->gentry.tqe_prev = _14;
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 79155172]:
_15 = sg_35->sessions.tqh_first;
_16 = _15->gentry.tqe_prev;
sg_35->sessions.tqh_last = _16;

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 263850576]:
_17 = sg_35->sessions.tqh_first;
_18 = sg_35->sessions.tqh_first;
_19 = _18->gentry.tqe_prev;
_20 = _17->gentry.tqe_next;
*_19 = _20;

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 879501929]:
_21 = sg_35->sessions.tqh_first;
if (_21 == 0B)
  goto <bb 12>; [30.00%]
else
  goto <bb 16>; [70.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 263850576]:
_22 = sg_35->entry.tqe_next;
if (_22 != 0B)
  goto <bb 13>; [70.00%]
else
  goto <bb 14>; [30.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 184695404]:
_23 = sg_35->entry.tqe_next;
_24 = sg_35->entry.tqe_prev;
_23->entry.tqe_prev = _24;
goto <bb 15>; [100.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 79155172]:
_25 = sg_35->entry.tqe_prev;
session_groups.tqh_last = _25;

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 263850576]:
_26 = sg_35->entry.tqe_prev;
_27 = sg_35->entry.tqe_next;
*_26 = _27;
free (sg_35);

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 1073741824]:
return;

=======Mapping node_fun:window_index=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
*i_14(D) = 0;
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686026]:
_1 = windows.list;
_2 = *i_14(D);
_3 = (long unsigned int) _2;
_4 = _3 * 8;
_5 = _1 + _4;
_6 = *_5;
if (_6 == s_16(D))
  goto <bb 6>; [5.50%]
else
  goto <bb 4>; [94.50%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 958878296]:
_7 = *i_14(D);
_8 = _7 + 1;
*i_14(D) = _8;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
_9 = *i_14(D);
_10 = windows.num;
if (_9 < _10)
  goto <bb 3>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 114863531]:
# _11 = PHI <0(3), -1(5)>
return _11;

=======Mapping node_fun:winlink_add=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (idx_9(D) < 0)
  goto <bb 3>; [41.00%]
else
  goto <bb 4>; [59.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 440234144]:
_1 = ~idx_9(D);
idx_14 = winlink_next_index (wwl_11(D), _1);
if (idx_14 == -1)
  goto <bb 6>; [9.78%]
else
  goto <bb 5>; [90.22%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 633507681]:
_2 = winlink_find_by_index (wwl_11(D), idx_9(D));
if (_2 != 0B)
  goto <bb 6>; [32.93%]
else
  goto <bb 5>; [67.07%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 822072845]:
# idx_5 = PHI <idx_14(3), idx_9(D)(4)>
wl_16 = calloc (1, 136);
wl_16->idx = idx_5;
wl_16->window = w_18(D);
winlinks_RB_INSERT (wwl_11(D), wl_16);
_3 = w_18(D)->references;
_4 = _3 + 1;
w_18(D)->references = _4;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _6 = PHI <0B(3), 0B(4), wl_16(5)>
return _6;

=======Mapping node_fun:session_group_add=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
sg_15 = session_group_find (target_14(D));
if (sg_15 == 0B)
  goto <bb 3>; [17.43%]
else
  goto <bb 4>; [82.57%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 187153200]:
sg_17 = malloc (32);
sg_17->entry.tqe_next = 0B;
_1 = session_groups.tqh_last;
sg_17->entry.tqe_prev = _1;
_2 = session_groups.tqh_last;
*_2 = sg_17;
_3 = &sg_17->entry.tqe_next;
session_groups.tqh_last = _3;
sg_17->sessions.tqh_first = 0B;
_4 = &sg_17->sessions.tqh_first;
sg_17->sessions.tqh_last = _4;
target_14(D)->gentry.tqe_next = 0B;
_5 = sg_17->sessions.tqh_last;
target_14(D)->gentry.tqe_prev = _5;
_6 = sg_17->sessions.tqh_last;
*_6 = target_14(D);
_7 = &target_14(D)->gentry.tqe_next;
sg_17->sessions.tqh_last = _7;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# sg_11 = PHI <sg_15(2), sg_17(3)>
s_28(D)->gentry.tqe_next = 0B;
_8 = sg_11->sessions.tqh_last;
s_28(D)->gentry.tqe_prev = _8;
_9 = sg_11->sessions.tqh_last;
*_9 = s_28(D);
_10 = &s_28(D)->gentry.tqe_next;
sg_11->sessions.tqh_last = _10;
return;

=======Mapping node_fun:session_group_find=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 62492909]:
sg_5 = session_groups.tqh_first;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 114863530]:
s_6 = sg_1->sessions.tqh_first;
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1014686024]:
if (s_2 == target_8(D))
  goto <bb 9>; [5.50%]
else
  goto <bb 5>; [94.50%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 958878294]:
s_9 = s_2->gentry.tqe_next;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# s_2 = PHI <s_6(3), s_9(5)>
if (s_2 != 0B)
  goto <bb 4>; [94.50%]
else
  goto <bb 7>; [5.50%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 59055800]:
sg_7 = sg_1->entry.tqe_next;

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 121548709]:
# sg_1 = PHI <sg_5(2), sg_7(7)>
if (sg_1 != 0B)
  goto <bb 3>; [94.50%]
else
  goto <bb 9>; [5.50%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 62492910]:
# _3 = PHI <sg_1(4), 0B(8)>
return _3;

=======Mapping node_fun:session_has=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
_1 = &s_6(D)->windows;
wl_8 = winlinks_RB_MINMAX (_1, -1);
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686026]:
_2 = wl_3->window;
if (_2 == w_9(D))
  goto <bb 6>; [5.50%]
else
  goto <bb 4>; [94.50%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 958878296]:
wl_10 = winlinks_RB_NEXT (wl_3);

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# wl_3 = PHI <wl_8(2), wl_10(4)>
if (wl_3 != 0B)
  goto <bb 3>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 114863531]:
# _4 = PHI <1(3), 0(5)>
return _4;

=======Mapping node_fun:cmd_find_pane=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = sessions.num;
if (_1 == 0)
  goto <bb 3>; [9.39%]
else
  goto <bb 4>; [90.61%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 100824360]:
__builtin_puts (&"can\'t establish current session"[0]);
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 972917463]:
_2 = sessions.list;
s_8 = MEM[(struct session * *)_2 + 8B];
if (sp_9(D) != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 681042228]:
*sp_9(D) = s_8;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 972917464]:
if (arg_11(D) != 0)
  goto <bb 7>; [51.12%]
else
  goto <bb 8>; [48.88%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 497355411]:
_13 = s_8->curw;
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 475562053]:
_3 = s_8->curw;
_12 = winlinks_RB_NEXT (_3);

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 1073741824]:
# _4 = PHI <0B(3), _13(7), _12(8)>
return _4;

=======Mapping node_fun:winlink_find_by_window=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
wl_7 = winlinks_RB_MINMAX (wwl_6(D), -1);
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686026]:
_1 = wl_2->window;
if (_1 == w_8(D))
  goto <bb 6>; [5.50%]
else
  goto <bb 4>; [94.50%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 958878296]:
wl_9 = winlinks_RB_NEXT (wl_2);

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# wl_2 = PHI <wl_7(2), wl_9(4)>
if (wl_2 != 0B)
  goto <bb 3>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 114863531]:
# _3 = PHI <wl_2(3), 0B(5)>
return _3;

=======Mapping node_fun:winlink_next_index=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1073741824]:
# i_2 = PHI <idx_6(D)(2), i_3(8)>
_1 = winlink_find_by_index (wwl_8(D), i_2);
if (_1 == 0B)
  goto <bb 7>; [5.50%]
else
  goto <bb 4>; [94.50%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1014686026]:
if (i_2 == 10000)
  goto <bb 6>; [34.00%]
else
  goto <bb 5>; [66.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 669692774]:
i_10 = i_2 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1014686026]:
# i_3 = PHI <0(4), i_10(5)>
if (i_3 != idx_6(D))
  goto <bb 8>; [94.50%]
else
  goto <bb 7>; [5.50%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 958878295]:
goto <bb 3>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 114863531]:
# _4 = PHI <i_2(3), -1(6)>
return _4;

=======Mapping node_fun:winlink_find_by_index=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (idx_1(D) < 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("bad index%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
wl.idx = idx_1(D);
_5 = winlinks_RB_FIND (wwl_4(D), &wl);
wl ={v} {CLOBBER};
return _5;

=======Mapping node_fun:xrealloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
newsize_4 = nmemb_2(D) * size_3(D);
if (newsize_4 == 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("zero size%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
_1 = 1073741824 / nmemb_2(D);
if (_1 < size_3(D))
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 429324]:
printf ("nmemb * size > SIZE_MAX%s", "");
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1072883005]:
newptr_8 = realloc (oldptr_6(D), newsize_4);
if (newptr_8 == 0B)
  goto <bb 7>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 429152]:
printf ("xrealloc failed%s", "");
exit (1);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1072453853]:
return newptr_8;

=======Mapping node_fun:winlinks_RB_MINMAX=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
tmp_5 = head_4(D)->rbh_root;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
if (val_8(D) < 0)
  goto <bb 4>; [41.00%]
else
  goto <bb 5>; [59.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 391808389]:
tmp_10 = tmp_1->entry.rbe_left;
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 563821837]:
tmp_9 = tmp_1->entry.rbe_right;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 955630225]:
# tmp_6 = PHI <tmp_10(4), tmp_9(5)>
# parent_7 = PHI <tmp_1(4), tmp_1(5)>

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# tmp_1 = PHI <tmp_5(2), tmp_6(6)>
# parent_2 = PHI <0B(2), parent_7(6)>
if (tmp_1 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return parent_2;

=======Mapping node_fun:winlinks_RB_NEXT=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 168730857]:
_1 = elm_13(D)->entry.rbe_right;
if (_1 != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 118111600]:
elm_17 = elm_13(D)->entry.rbe_right;
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 955630226]:
elm_18 = elm_9->entry.rbe_left;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# elm_9 = PHI <elm_17(3), elm_18(4)>
_2 = elm_9->entry.rbe_left;
if (_2 != 0B)
  goto <bb 4>; [89.00%]
else
  goto <bb 13>; [11.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 50619256]:
_3 = elm_13(D)->entry.rbe_parent;
if (_3 != 0B)
  goto <bb 7>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 39989213]:
# elm_19 = PHI <elm_13(D)(6), elm_13(D)(7)>
goto <bb 14>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 35433480]:
_4 = elm_13(D)->entry.rbe_parent;
_5 = _4->entry.rbe_left;
if (_5 == elm_13(D))
  goto <bb 8>; [30.00%]
else
  goto <bb 10>; [70.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 10630044]:
elm_14 = elm_13(D)->entry.rbe_parent;
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 333829092]:
elm_15 = elm_10->entry.rbe_parent;

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 373818306]:
# elm_10 = PHI <elm_19(10), elm_15(9)>
_6 = elm_10->entry.rbe_parent;
if (_6 != 0B)
  goto <bb 11>; [94.50%]
else
  goto <bb 12>; [5.50%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 353258299]:
_7 = elm_10->entry.rbe_parent;
_8 = _7->entry.rbe_right;
if (_8 == elm_10)
  goto <bb 9>; [94.50%]
else
  goto <bb 12>; [5.50%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 39989213]:
elm_16 = elm_10->entry.rbe_parent;

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 168730857]:
# elm_11 = PHI <elm_9(5), elm_14(8), elm_16(12)>
return elm_11;

=======Mapping node_fun:winlinks_RB_FIND=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 91982362]:
tmp_7 = head_6(D)->rbh_root;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686024]:
comp_9 = winlink_cmp (elm_8(D), tmp_1);
if (comp_9 < 0)
  goto <bb 4>; [41.00%]
else
  goto <bb 5>; [59.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 416021266]:
tmp_12 = tmp_1->entry.rbe_left;
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 598664758]:
if (comp_9 > 0)
  goto <bb 6>; [94.50%]
else
  goto <bb 9>; [5.50%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 565738197]:
tmp_11 = tmp_1->entry.rbe_right;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 981759463]:
# tmp_4 = PHI <tmp_12(4), tmp_11(6)>

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# tmp_1 = PHI <tmp_7(2), tmp_4(7)>
if (tmp_1 != 0B)
  goto <bb 3>; [94.50%]
else
  goto <bb 9>; [5.50%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 91982362]:
# _2 = PHI <tmp_1(5), 0B(8)>
return _2;

=======Mapping node_fun:winlinks_RB_REMOVE=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 309087481]:
_1 = elm_28(D)->entry.rbe_left;
if (_1 == 0B)
  goto <bb 3>; [30.00%]
else
  goto <bb 4>; [70.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 92726243]:
child_48 = elm_28(D)->entry.rbe_right;
goto <bb 27>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 216361238]:
_2 = elm_28(D)->entry.rbe_right;
if (_2 == 0B)
  goto <bb 5>; [45.41%]
else
  goto <bb 6>; [54.59%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 98249638]:
child_47 = elm_28(D)->entry.rbe_left;
goto <bb 27>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 118111600]:
elm_30 = elm_28(D)->entry.rbe_right;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# elm_14 = PHI <elm_30(6), left_31(39)>
left_31 = elm_14->entry.rbe_left;
if (left_31 != 0B)
  goto <bb 39>; [89.00%]
else
  goto <bb 8>; [11.00%]

=======is loop:1=========

 bb index 39 
<bb 39> [local count: 955630225]:
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 118111600]:
child_32 = elm_14->entry.rbe_right;
parent_33 = elm_14->entry.rbe_parent;
color_34 = elm_14->entry.rbe_color;
if (child_32 != 0B)
  goto <bb 9>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 82678121]:
child_32->entry.rbe_parent = parent_33;

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 118111600]:
if (parent_33 != 0B)
  goto <bb 11>; [70.00%]
else
  goto <bb 14>; [30.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 82678121]:
_3 = parent_33->entry.rbe_left;
if (_3 == elm_14)
  goto <bb 12>; [30.00%]
else
  goto <bb 13>; [70.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 24803436]:
parent_33->entry.rbe_left = child_32;
goto <bb 15>; [100.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 57874685]:
parent_33->entry.rbe_right = child_32;
goto <bb 15>; [100.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 35433480]:
head_36(D)->rbh_root = child_32;

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 118111600]:
_4 = elm_14->entry.rbe_parent;
if (_4 == elm_28(D))
  goto <bb 16>; [30.00%]
else
  goto <bb 17>; [70.00%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 35433480]:

=======is loop:0=========

 bb index 17 
<bb 17> [local count: 118111600]:
# parent_17 = PHI <parent_33(15), elm_14(16)>
elm_14->entry = elm_28(D)->entry;
_5 = elm_28(D)->entry.rbe_parent;
if (_5 != 0B)
  goto <bb 18>; [70.00%]
else
  goto <bb 21>; [30.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 82678121]:
_6 = elm_28(D)->entry.rbe_parent;
_7 = _6->entry.rbe_left;
if (_7 == elm_28(D))
  goto <bb 19>; [30.00%]
else
  goto <bb 20>; [70.00%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 24803436]:
_8 = elm_28(D)->entry.rbe_parent;
_8->entry.rbe_left = elm_14;
goto <bb 22>; [100.00%]

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 57874685]:
_9 = elm_28(D)->entry.rbe_parent;
_9->entry.rbe_right = elm_14;
goto <bb 22>; [100.00%]

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 35433480]:
head_36(D)->rbh_root = elm_14;

=======is loop:0=========

 bb index 22 
<bb 22> [local count: 118111600]:
_10 = elm_28(D)->entry.rbe_left;
_10->entry.rbe_parent = elm_14;
_11 = elm_28(D)->entry.rbe_right;
if (_11 != 0B)
  goto <bb 23>; [70.00%]
else
  goto <bb 24>; [30.00%]

=======is loop:0=========

 bb index 23 
<bb 23> [local count: 82678121]:
_12 = elm_28(D)->entry.rbe_right;
_12->entry.rbe_parent = elm_14;

=======is loop:0=========

 bb index 24 
<bb 24> [local count: 118111600]:
if (parent_17 != 0B)
  goto <bb 37>; [70.00%]
else
  goto <bb 26>; [30.00%]

=======is loop:0=========

 bb index 37 
<bb 37> [local count: 82678121]:

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 751619282]:
# left_20 = PHI <parent_17(37), left_46(38)>
left_46 = left_20->entry.rbe_parent;
if (left_46 != 0B)
  goto <bb 38>; [89.00%]
else
  goto <bb 26>; [11.00%]

=======is loop:1=========

 bb index 38 
<bb 38> [local count: 668941161]:
goto <bb 25>; [100.00%]

=======is loop:0=========

 bb index 26 
<bb 26> [local count: 118111600]:
// predicted unlikely by goto predictor.
goto <bb 34>; [100.00%]

=======is loop:0=========

 bb index 27 
<bb 27> [local count: 190975881]:
# child_15 = PHI <child_48(3), child_47(5)>
parent_49 = elm_28(D)->entry.rbe_parent;
color_50 = elm_28(D)->entry.rbe_color;
if (child_15 != 0B)
  goto <bb 28>; [70.00%]
else
  goto <bb 29>; [30.00%]

=======is loop:0=========

 bb index 28 
<bb 28> [local count: 133683117]:
child_15->entry.rbe_parent = parent_49;

=======is loop:0=========

 bb index 29 
<bb 29> [local count: 190975881]:
if (parent_49 != 0B)
  goto <bb 30>; [70.00%]
else
  goto <bb 33>; [30.00%]

=======is loop:0=========

 bb index 30 
<bb 30> [local count: 133683117]:
_13 = parent_49->entry.rbe_left;
if (_13 == elm_28(D))
  goto <bb 31>; [30.00%]
else
  goto <bb 32>; [70.00%]

=======is loop:0=========

 bb index 31 
<bb 31> [local count: 40104935]:
parent_49->entry.rbe_left = child_15;
goto <bb 34>; [100.00%]

=======is loop:0=========

 bb index 32 
<bb 32> [local count: 93578183]:
parent_49->entry.rbe_right = child_15;
goto <bb 34>; [100.00%]

=======is loop:0=========

 bb index 33 
<bb 33> [local count: 57292764]:
head_36(D)->rbh_root = child_15;

=======is loop:0=========

 bb index 34 
<bb 34> [local count: 309087482]:
# child_16 = PHI <child_32(26), child_15(31), child_15(32), child_15(33)>
# parent_18 = PHI <parent_17(26), parent_49(31), parent_49(32), parent_49(33)>
# color_19 = PHI <color_34(26), color_50(31), color_50(32), color_50(33)>
color:
if (color_19 == 0)
  goto <bb 35>; [33.00%]
else
  goto <bb 36>; [67.00%]

=======is loop:0=========

 bb index 35 
<bb 35> [local count: 101998868]:
winlinks_RB_REMOVE_COLOR (head_36(D), parent_18, child_16);

=======is loop:0=========

 bb index 36 
<bb 36> [local count: 309087482]:
return elm_28(D);

=======Mapping node_fun:winlinks_RB_INSERT=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 91982362]:
tmp_13 = head_12(D)->rbh_root;
goto <bb 8>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686024]:
comp_24 = winlink_cmp (elm_14(D), tmp_2);
if (comp_24 < 0)
  goto <bb 4>; [41.00%]
else
  goto <bb 5>; [59.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 416021266]:
tmp_27 = tmp_2->entry.rbe_left;
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 598664758]:
if (comp_24 > 0)
  goto <bb 6>; [94.50%]
else
  goto <bb 15>; [5.50%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 565738197]:
tmp_26 = tmp_2->entry.rbe_right;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 981759463]:
# tmp_23 = PHI <tmp_27(4), tmp_26(6)>
# parent_25 = PHI <tmp_2(4), tmp_2(6)>
# comp_9 = PHI <comp_24(4), comp_24(6)>

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# tmp_2 = PHI <tmp_13(2), tmp_23(7)>
# parent_3 = PHI <0B(2), parent_25(7)>
# comp_4 = PHI <0(2), comp_9(7)>
if (tmp_2 != 0B)
  goto <bb 3>; [94.50%]
else
  goto <bb 9>; [5.50%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 59055800]:
elm_14(D)->entry.rbe_parent = parent_3;
elm_14(D)->entry.rbe_right = 0B;
_1 = elm_14(D)->entry.rbe_right;
elm_14(D)->entry.rbe_left = _1;
elm_14(D)->entry.rbe_color = 1;
if (parent_3 != 0B)
  goto <bb 10>; [70.00%]
else
  goto <bb 13>; [30.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 41339060]:
if (comp_4 < 0)
  goto <bb 11>; [41.00%]
else
  goto <bb 12>; [59.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 16949015]:
parent_3->entry.rbe_left = elm_14(D);
goto <bb 14>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 24390046]:
parent_3->entry.rbe_right = elm_14(D);
goto <bb 14>; [100.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 17716740]:
head_12(D)->rbh_root = elm_14(D);

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 59055800]:
winlinks_RB_INSERT_COLOR (head_12(D), elm_14(D));

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 91982362]:
# _5 = PHI <tmp_2(5), 0B(14)>
return _5;

=======Mapping node_fun:winlinks_RB_REMOVE_COLOR=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 65054214]:
goto <bb 82>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1037535244]:
_1 = parent_87->entry.rbe_left;
if (_1 == elm_88)
  goto <bb 4>; [30.00%]
else
  goto <bb 40>; [70.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 311260570]:
tmp_162 = parent_87->entry.rbe_right;
_2 = tmp_162->entry.rbe_color;
if (_2 == 1)
  goto <bb 5>; [34.00%]
else
  goto <bb 13>; [66.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 105828595]:
tmp_162->entry.rbe_color = 0;
parent_87->entry.rbe_color = 1;
tmp_165 = parent_87->entry.rbe_right;
_3 = tmp_165->entry.rbe_left;
parent_87->entry.rbe_right = _3;
_4 = parent_87->entry.rbe_right;
if (_4 != 0B)
  goto <bb 6>; [70.00%]
else
  goto <bb 7>; [30.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 74080017]:
_5 = tmp_165->entry.rbe_left;
_5->entry.rbe_parent = parent_87;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 105828595]:
_6 = parent_87->entry.rbe_parent;
tmp_165->entry.rbe_parent = _6;
_7 = tmp_165->entry.rbe_parent;
if (_7 != 0B)
  goto <bb 8>; [70.00%]
else
  goto <bb 11>; [30.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 74080017]:
_8 = parent_87->entry.rbe_parent;
_9 = _8->entry.rbe_left;
if (_9 == parent_87)
  goto <bb 9>; [30.00%]
else
  goto <bb 10>; [70.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 22224005]:
_10 = parent_87->entry.rbe_parent;
_10->entry.rbe_left = tmp_165;
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 51856012]:
_11 = parent_87->entry.rbe_parent;
_11->entry.rbe_right = tmp_165;
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 31748578]:
head_120(D)->rbh_root = tmp_165;

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 105828595]:
tmp_165->entry.rbe_left = parent_87;
parent_87->entry.rbe_parent = tmp_165;
tmp_174 = parent_87->entry.rbe_right;

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 311260570]:
# tmp_90 = PHI <tmp_162(4), tmp_174(12)>
_13 = tmp_90->entry.rbe_left;
if (_13 == 0B)
  goto <bb 15>; [30.00%]
else
  goto <bb 14>; [70.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 217882400]:
_14 = tmp_90->entry.rbe_left;
_15 = _14->entry.rbe_color;
if (_15 == 0)
  goto <bb 15>; [98.00%]
else
  goto <bb 18>; [2.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 306902922]:
_16 = tmp_90->entry.rbe_right;
if (_16 == 0B)
  goto <bb 17>; [30.00%]
else
  goto <bb 16>; [70.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 214832046]:
_17 = tmp_90->entry.rbe_right;
_18 = _17->entry.rbe_color;
if (_18 == 0)
  goto <bb 17>; [98.00%]
else
  goto <bb 18>; [2.00%]

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 302606280]:
tmp_90->entry.rbe_color = 1;
parent_176 = parent_87->entry.rbe_parent;
goto <bb 76>; [100.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [local count: 8654290]:
_19 = tmp_90->entry.rbe_right;
if (_19 == 0B)
  goto <bb 20>; [30.00%]
else
  goto <bb 19>; [70.00%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 6058003]:
_20 = tmp_90->entry.rbe_right;
_21 = _20->entry.rbe_color;
if (_21 == 0)
  goto <bb 20>; [50.00%]
else
  goto <bb 30>; [50.00%]

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 5625289]:
oleft_177 = tmp_90->entry.rbe_left;
if (oleft_177 != 0B)
  goto <bb 21>; [70.00%]
else
  goto <bb 22>; [30.00%]

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 3937702]:
oleft_177->entry.rbe_color = 0;

=======is loop:0=========

 bb index 22 
<bb 22> [local count: 5625289]:
tmp_90->entry.rbe_color = 1;
oleft_180 = tmp_90->entry.rbe_left;
_22 = oleft_180->entry.rbe_right;
tmp_90->entry.rbe_left = _22;
_23 = tmp_90->entry.rbe_left;
if (_23 != 0B)
  goto <bb 23>; [70.00%]
else
  goto <bb 24>; [30.00%]

=======is loop:0=========

 bb index 23 
<bb 23> [local count: 3937702]:
_24 = oleft_180->entry.rbe_right;
_24->entry.rbe_parent = tmp_90;

=======is loop:0=========

 bb index 24 
<bb 24> [local count: 5625289]:
_25 = tmp_90->entry.rbe_parent;
oleft_180->entry.rbe_parent = _25;
_26 = oleft_180->entry.rbe_parent;
if (_26 != 0B)
  goto <bb 25>; [70.00%]
else
  goto <bb 28>; [30.00%]

=======is loop:0=========

 bb index 25 
<bb 25> [local count: 3937702]:
_27 = tmp_90->entry.rbe_parent;
_28 = _27->entry.rbe_left;
if (_28 == tmp_90)
  goto <bb 26>; [30.00%]
else
  goto <bb 27>; [70.00%]

=======is loop:0=========

 bb index 26 
<bb 26> [local count: 1181311]:
_29 = tmp_90->entry.rbe_parent;
_29->entry.rbe_left = oleft_180;
goto <bb 29>; [100.00%]

=======is loop:0=========

 bb index 27 
<bb 27> [local count: 2756391]:
_30 = tmp_90->entry.rbe_parent;
_30->entry.rbe_right = oleft_180;
goto <bb 29>; [100.00%]

=======is loop:0=========

 bb index 28 
<bb 28> [local count: 1687587]:
head_120(D)->rbh_root = oleft_180;

=======is loop:0=========

 bb index 29 
<bb 29> [local count: 5625289]:
oleft_180->entry.rbe_right = tmp_90;
tmp_90->entry.rbe_parent = oleft_180;
tmp_189 = parent_87->entry.rbe_right;

=======is loop:0=========

 bb index 30 
<bb 30> [local count: 8654290]:
# tmp_91 = PHI <tmp_90(19), tmp_189(29)>
_31 = parent_87->entry.rbe_color;
tmp_91->entry.rbe_color = _31;
parent_87->entry.rbe_color = 0;
_32 = tmp_91->entry.rbe_right;
if (_32 != 0B)
  goto <bb 31>; [70.00%]
else
  goto <bb 32>; [30.00%]

=======is loop:0=========

 bb index 31 
<bb 31> [local count: 6058003]:
_33 = tmp_91->entry.rbe_right;
_33->entry.rbe_color = 0;

=======is loop:0=========

 bb index 32 
<bb 32> [local count: 8654290]:
tmp_193 = parent_87->entry.rbe_right;
_34 = tmp_193->entry.rbe_left;
parent_87->entry.rbe_right = _34;
_35 = parent_87->entry.rbe_right;
if (_35 != 0B)
  goto <bb 33>; [70.00%]
else
  goto <bb 34>; [30.00%]

=======is loop:0=========

 bb index 33 
<bb 33> [local count: 6058003]:
_36 = tmp_193->entry.rbe_left;
_36->entry.rbe_parent = parent_87;

=======is loop:0=========

 bb index 34 
<bb 34> [local count: 8654290]:
_37 = parent_87->entry.rbe_parent;
tmp_193->entry.rbe_parent = _37;
_38 = tmp_193->entry.rbe_parent;
if (_38 != 0B)
  goto <bb 35>; [70.00%]
else
  goto <bb 38>; [30.00%]

=======is loop:0=========

 bb index 35 
<bb 35> [local count: 6058003]:
_39 = parent_87->entry.rbe_parent;
_40 = _39->entry.rbe_left;
if (_40 == parent_87)
  goto <bb 36>; [30.00%]
else
  goto <bb 37>; [70.00%]

=======is loop:0=========

 bb index 36 
<bb 36> [local count: 1817401]:
_41 = parent_87->entry.rbe_parent;
_41->entry.rbe_left = tmp_193;
goto <bb 39>; [100.00%]

=======is loop:0=========

 bb index 37 
<bb 37> [local count: 4240602]:
_42 = parent_87->entry.rbe_parent;
_42->entry.rbe_right = tmp_193;
goto <bb 39>; [100.00%]

=======is loop:0=========

 bb index 38 
<bb 38> [local count: 2596287]:
head_120(D)->rbh_root = tmp_193;

=======is loop:0=========

 bb index 39 
<bb 39> [local count: 8654290]:
tmp_193->entry.rbe_left = parent_87;
parent_87->entry.rbe_parent = tmp_193;
elm_202 = head_120(D)->rbh_root;
goto <bb 79>; [100.00%]

=======is loop:1=========

 bb index 40 
<bb 40> [local count: 726274675]:
tmp_121 = parent_87->entry.rbe_left;
_43 = tmp_121->entry.rbe_color;
if (_43 == 1)
  goto <bb 41>; [34.00%]
else
  goto <bb 49>; [66.00%]

=======is loop:1=========

 bb index 41 
<bb 41> [local count: 246933392]:
tmp_121->entry.rbe_color = 0;
parent_87->entry.rbe_color = 1;
tmp_124 = parent_87->entry.rbe_left;
_44 = tmp_124->entry.rbe_right;
parent_87->entry.rbe_left = _44;
_45 = parent_87->entry.rbe_left;
if (_45 != 0B)
  goto <bb 42>; [70.00%]
else
  goto <bb 43>; [30.00%]

=======is loop:1=========

 bb index 42 
<bb 42> [local count: 172853375]:
_46 = tmp_124->entry.rbe_right;
_46->entry.rbe_parent = parent_87;

=======is loop:1=========

 bb index 43 
<bb 43> [local count: 246933392]:
_47 = parent_87->entry.rbe_parent;
tmp_124->entry.rbe_parent = _47;
_48 = tmp_124->entry.rbe_parent;
if (_48 != 0B)
  goto <bb 44>; [70.00%]
else
  goto <bb 47>; [30.00%]

=======is loop:1=========

 bb index 44 
<bb 44> [local count: 172853375]:
_49 = parent_87->entry.rbe_parent;
_50 = _49->entry.rbe_left;
if (_50 == parent_87)
  goto <bb 45>; [30.00%]
else
  goto <bb 46>; [70.00%]

=======is loop:1=========

 bb index 45 
<bb 45> [local count: 51856012]:
_51 = parent_87->entry.rbe_parent;
_51->entry.rbe_left = tmp_124;
goto <bb 48>; [100.00%]

=======is loop:1=========

 bb index 46 
<bb 46> [local count: 120997363]:
_52 = parent_87->entry.rbe_parent;
_52->entry.rbe_right = tmp_124;
goto <bb 48>; [100.00%]

=======is loop:1=========

 bb index 47 
<bb 47> [local count: 74080017]:
head_120(D)->rbh_root = tmp_124;

=======is loop:1=========

 bb index 48 
<bb 48> [local count: 246933392]:
tmp_124->entry.rbe_right = parent_87;
parent_87->entry.rbe_parent = tmp_124;
tmp_133 = parent_87->entry.rbe_left;

=======is loop:1=========

 bb index 49 
<bb 49> [local count: 726274676]:
# tmp_92 = PHI <tmp_121(40), tmp_133(48)>
_54 = tmp_92->entry.rbe_left;
if (_54 == 0B)
  goto <bb 51>; [30.00%]
else
  goto <bb 50>; [70.00%]

=======is loop:1=========

 bb index 50 
<bb 50> [local count: 508392274]:
_55 = tmp_92->entry.rbe_left;
_56 = _55->entry.rbe_color;
if (_56 == 0)
  goto <bb 51>; [98.00%]
else
  goto <bb 54>; [2.00%]

=======is loop:1=========

 bb index 51 
<bb 51> [local count: 716106828]:
_57 = tmp_92->entry.rbe_right;
if (_57 == 0B)
  goto <bb 53>; [30.00%]
else
  goto <bb 52>; [70.00%]

=======is loop:1=========

 bb index 52 
<bb 52> [local count: 501274781]:
_58 = tmp_92->entry.rbe_right;
_59 = _58->entry.rbe_color;
if (_59 == 0)
  goto <bb 53>; [98.00%]
else
  goto <bb 54>; [2.00%]

=======is loop:1=========

 bb index 53 
<bb 53> [local count: 706081331]:
tmp_92->entry.rbe_color = 1;
parent_135 = parent_87->entry.rbe_parent;
goto <bb 76>; [100.00%]

=======is loop:0=========

 bb index 54 
<bb 54> [local count: 20193344]:
_60 = tmp_92->entry.rbe_left;
if (_60 == 0B)
  goto <bb 56>; [30.00%]
else
  goto <bb 55>; [70.00%]

=======is loop:0=========

 bb index 55 
<bb 55> [local count: 14135341]:
_61 = tmp_92->entry.rbe_left;
_62 = _61->entry.rbe_color;
if (_62 == 0)
  goto <bb 56>; [50.00%]
else
  goto <bb 66>; [50.00%]

=======is loop:0=========

 bb index 56 
<bb 56> [local count: 13125674]:
oright_136 = tmp_92->entry.rbe_right;
if (oright_136 != 0B)
  goto <bb 57>; [70.00%]
else
  goto <bb 58>; [30.00%]

=======is loop:0=========

 bb index 57 
<bb 57> [local count: 9187972]:
oright_136->entry.rbe_color = 0;

=======is loop:0=========

 bb index 58 
<bb 58> [local count: 13125674]:
tmp_92->entry.rbe_color = 1;
oright_139 = tmp_92->entry.rbe_right;
_63 = oright_139->entry.rbe_left;
tmp_92->entry.rbe_right = _63;
_64 = tmp_92->entry.rbe_right;
if (_64 != 0B)
  goto <bb 59>; [70.00%]
else
  goto <bb 60>; [30.00%]

=======is loop:0=========

 bb index 59 
<bb 59> [local count: 9187972]:
_65 = oright_139->entry.rbe_left;
_65->entry.rbe_parent = tmp_92;

=======is loop:0=========

 bb index 60 
<bb 60> [local count: 13125674]:
_66 = tmp_92->entry.rbe_parent;
oright_139->entry.rbe_parent = _66;
_67 = oright_139->entry.rbe_parent;
if (_67 != 0B)
  goto <bb 61>; [70.00%]
else
  goto <bb 64>; [30.00%]

=======is loop:0=========

 bb index 61 
<bb 61> [local count: 9187972]:
_68 = tmp_92->entry.rbe_parent;
_69 = _68->entry.rbe_left;
if (_69 == tmp_92)
  goto <bb 62>; [30.00%]
else
  goto <bb 63>; [70.00%]

=======is loop:0=========

 bb index 62 
<bb 62> [local count: 2756391]:
_70 = tmp_92->entry.rbe_parent;
_70->entry.rbe_left = oright_139;
goto <bb 65>; [100.00%]

=======is loop:0=========

 bb index 63 
<bb 63> [local count: 6431580]:
_71 = tmp_92->entry.rbe_parent;
_71->entry.rbe_right = oright_139;
goto <bb 65>; [100.00%]

=======is loop:0=========

 bb index 64 
<bb 64> [local count: 3937702]:
head_120(D)->rbh_root = oright_139;

=======is loop:0=========

 bb index 65 
<bb 65> [local count: 13125674]:
oright_139->entry.rbe_left = tmp_92;
tmp_92->entry.rbe_parent = oright_139;
tmp_148 = parent_87->entry.rbe_left;

=======is loop:0=========

 bb index 66 
<bb 66> [local count: 20193344]:
# tmp_93 = PHI <tmp_92(55), tmp_148(65)>
_72 = parent_87->entry.rbe_color;
tmp_93->entry.rbe_color = _72;
parent_87->entry.rbe_color = 0;
_73 = tmp_93->entry.rbe_left;
if (_73 != 0B)
  goto <bb 67>; [70.00%]
else
  goto <bb 68>; [30.00%]

=======is loop:0=========

 bb index 67 
<bb 67> [local count: 14135341]:
_74 = tmp_93->entry.rbe_left;
_74->entry.rbe_color = 0;

=======is loop:0=========

 bb index 68 
<bb 68> [local count: 20193344]:
tmp_152 = parent_87->entry.rbe_left;
_75 = tmp_152->entry.rbe_right;
parent_87->entry.rbe_left = _75;
_76 = parent_87->entry.rbe_left;
if (_76 != 0B)
  goto <bb 69>; [70.00%]
else
  goto <bb 70>; [30.00%]

=======is loop:0=========

 bb index 69 
<bb 69> [local count: 14135341]:
_77 = tmp_152->entry.rbe_right;
_77->entry.rbe_parent = parent_87;

=======is loop:0=========

 bb index 70 
<bb 70> [local count: 20193344]:
_78 = parent_87->entry.rbe_parent;
tmp_152->entry.rbe_parent = _78;
_79 = tmp_152->entry.rbe_parent;
if (_79 != 0B)
  goto <bb 71>; [70.00%]
else
  goto <bb 74>; [30.00%]

=======is loop:0=========

 bb index 71 
<bb 71> [local count: 14135341]:
_80 = parent_87->entry.rbe_parent;
_81 = _80->entry.rbe_left;
if (_81 == parent_87)
  goto <bb 72>; [30.00%]
else
  goto <bb 73>; [70.00%]

=======is loop:0=========

 bb index 72 
<bb 72> [local count: 4240602]:
_82 = parent_87->entry.rbe_parent;
_82->entry.rbe_left = tmp_152;
goto <bb 75>; [100.00%]

=======is loop:0=========

 bb index 73 
<bb 73> [local count: 9894739]:
_83 = parent_87->entry.rbe_parent;
_83->entry.rbe_right = tmp_152;
goto <bb 75>; [100.00%]

=======is loop:0=========

 bb index 74 
<bb 74> [local count: 6058003]:
head_120(D)->rbh_root = tmp_152;

=======is loop:0=========

 bb index 75 
<bb 75> [local count: 20193344]:
tmp_152->entry.rbe_right = parent_87;
parent_87->entry.rbe_parent = tmp_152;
elm_161 = head_120(D)->rbh_root;
goto <bb 79>; [100.00%]

=======is loop:1=========

 bb index 76 
<bb 76> [local count: 1008687611]:
# parent_53 = PHI <parent_176(17), parent_135(53)>
# elm_12 = PHI <parent_87(17), parent_87(53)>

=======is loop:1=========

 bb index 82 
<bb 82> [local count: 1073741824]:
# parent_87 = PHI <parent_117(D)(2), parent_53(76)>
# elm_88 = PHI <elm_118(D)(2), elm_12(76)>
if (elm_88 == 0B)
  goto <bb 78>; [30.00%]
else
  goto <bb 77>; [70.00%]

=======is loop:1=========

 bb index 77 
<bb 77> [local count: 751619281]:
_85 = elm_88->entry.rbe_color;
if (_85 == 0)
  goto <bb 78>; [98.00%]
else
  goto <bb 79>; [2.00%]

=======is loop:1=========

 bb index 78 
<bb 78> [local count: 1058709437]:
_86 = head_120(D)->rbh_root;
if (_86 != elm_88)
  goto <bb 3>; [98.00%]
else
  goto <bb 79>; [2.00%]

=======is loop:0=========

 bb index 79 
<bb 79> [local count: 65054215]:
# elm_89 = PHI <elm_202(39), elm_161(75), elm_88(77), elm_88(78)>
if (elm_89 != 0B)
  goto <bb 80>; [70.00%]
else
  goto <bb 81>; [30.00%]

=======is loop:0=========

 bb index 80 
<bb 80> [local count: 45537951]:
elm_89->entry.rbe_color = 0;

=======is loop:0=========

 bb index 81 
<bb 81> [local count: 65054215]:
return;

=======Mapping node_fun:winlinks_RB_INSERT_COLOR=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863528]:
goto <bb 47>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 958878293]:
gparent_65 = parent_64->entry.rbe_parent;
_1 = gparent_65->entry.rbe_left;
if (_1 == parent_64)
  goto <bb 4>; [30.00%]
else
  goto <bb 24>; [70.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 287663485]:
tmp_91 = gparent_65->entry.rbe_right;
if (tmp_91 != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 7>; [30.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 201364440]:
_2 = tmp_91->entry.rbe_color;
if (_2 == 1)
  goto <bb 6>; [20.24%]
else
  goto <bb 7>; [79.76%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 40756163]:
tmp_91->entry.rbe_color = 0;
parent_64->entry.rbe_color = 0;
gparent_65->entry.rbe_color = 1;
// predicted unlikely by continue predictor.
goto <bb 44>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 246907322]:
_3 = parent_64->entry.rbe_right;
if (_3 == elm_48)
  goto <bb 8>; [30.00%]
else
  goto <bb 16>; [70.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 74072196]:
tmp_95 = parent_64->entry.rbe_right;
_4 = tmp_95->entry.rbe_left;
parent_64->entry.rbe_right = _4;
_5 = parent_64->entry.rbe_right;
if (_5 != 0B)
  goto <bb 9>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 51850537]:
_6 = tmp_95->entry.rbe_left;
_6->entry.rbe_parent = parent_64;

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 74072196]:
_7 = parent_64->entry.rbe_parent;
tmp_95->entry.rbe_parent = _7;
_8 = tmp_95->entry.rbe_parent;
if (_8 != 0B)
  goto <bb 11>; [70.00%]
else
  goto <bb 14>; [30.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 51850537]:
_9 = parent_64->entry.rbe_parent;
_10 = _9->entry.rbe_left;
if (_10 == parent_64)
  goto <bb 12>; [30.00%]
else
  goto <bb 13>; [70.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 15555161]:
_11 = parent_64->entry.rbe_parent;
_11->entry.rbe_left = tmp_95;
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 36295376]:
_12 = parent_64->entry.rbe_parent;
_12->entry.rbe_right = tmp_95;
goto <bb 15>; [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 22221659]:
head_74(D)->rbh_root = tmp_95;

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 74072196]:
tmp_95->entry.rbe_left = parent_64;
parent_64->entry.rbe_parent = tmp_95;

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 246907322]:
# elm_46 = PHI <elm_48(7), parent_64(15)>
# parent_49 = PHI <parent_64(7), elm_48(15)>
parent_49->entry.rbe_color = 0;
gparent_65->entry.rbe_color = 1;
tmp_106 = gparent_65->entry.rbe_left;
_13 = tmp_106->entry.rbe_right;
gparent_65->entry.rbe_left = _13;
_14 = gparent_65->entry.rbe_left;
if (_14 != 0B)
  goto <bb 17>; [70.00%]
else
  goto <bb 18>; [30.00%]

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 172835126]:
_15 = tmp_106->entry.rbe_right;
_15->entry.rbe_parent = gparent_65;

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 246907322]:
_16 = gparent_65->entry.rbe_parent;
tmp_106->entry.rbe_parent = _16;
_17 = tmp_106->entry.rbe_parent;
if (_17 != 0B)
  goto <bb 19>; [70.00%]
else
  goto <bb 22>; [30.00%]

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 172835126]:
_18 = gparent_65->entry.rbe_parent;
_19 = _18->entry.rbe_left;
if (_19 == gparent_65)
  goto <bb 20>; [30.00%]
else
  goto <bb 21>; [70.00%]

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 51850537]:
_20 = gparent_65->entry.rbe_parent;
_20->entry.rbe_left = tmp_106;
goto <bb 23>; [100.00%]

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 120984589]:
_21 = gparent_65->entry.rbe_parent;
_21->entry.rbe_right = tmp_106;
goto <bb 23>; [100.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 74072196]:
head_74(D)->rbh_root = tmp_106;

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 246907322]:
tmp_106->entry.rbe_right = gparent_65;
gparent_65->entry.rbe_parent = tmp_106;
goto <bb 44>; [100.00%]

=======is loop:1=========

 bb index 24 
<bb 24> [local count: 671214808]:
tmp_66 = gparent_65->entry.rbe_left;
if (tmp_66 != 0B)
  goto <bb 25>; [70.00%]
else
  goto <bb 27>; [30.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [local count: 469850367]:
_22 = tmp_66->entry.rbe_color;
if (_22 == 1)
  goto <bb 26>; [20.24%]
else
  goto <bb 27>; [79.76%]

=======is loop:1=========

 bb index 26 
<bb 26> [local count: 95097714]:
tmp_66->entry.rbe_color = 0;
parent_64->entry.rbe_color = 0;
gparent_65->entry.rbe_color = 1;
// predicted unlikely by continue predictor.
goto <bb 44>; [100.00%]

=======is loop:1=========

 bb index 27 
<bb 27> [local count: 576117095]:
_23 = parent_64->entry.rbe_left;
if (_23 == elm_48)
  goto <bb 28>; [30.00%]
else
  goto <bb 36>; [70.00%]

=======is loop:1=========

 bb index 28 
<bb 28> [local count: 172835127]:
tmp_70 = parent_64->entry.rbe_left;
_24 = tmp_70->entry.rbe_right;
parent_64->entry.rbe_left = _24;
_25 = parent_64->entry.rbe_left;
if (_25 != 0B)
  goto <bb 29>; [70.00%]
else
  goto <bb 30>; [30.00%]

=======is loop:1=========

 bb index 29 
<bb 29> [local count: 120984589]:
_26 = tmp_70->entry.rbe_right;
_26->entry.rbe_parent = parent_64;

=======is loop:1=========

 bb index 30 
<bb 30> [local count: 172835127]:
_27 = parent_64->entry.rbe_parent;
tmp_70->entry.rbe_parent = _27;
_28 = tmp_70->entry.rbe_parent;
if (_28 != 0B)
  goto <bb 31>; [70.00%]
else
  goto <bb 34>; [30.00%]

=======is loop:1=========

 bb index 31 
<bb 31> [local count: 120984589]:
_29 = parent_64->entry.rbe_parent;
_30 = _29->entry.rbe_left;
if (_30 == parent_64)
  goto <bb 32>; [30.00%]
else
  goto <bb 33>; [70.00%]

=======is loop:1=========

 bb index 32 
<bb 32> [local count: 36295376]:
_31 = parent_64->entry.rbe_parent;
_31->entry.rbe_left = tmp_70;
goto <bb 35>; [100.00%]

=======is loop:1=========

 bb index 33 
<bb 33> [local count: 84689213]:
_32 = parent_64->entry.rbe_parent;
_32->entry.rbe_right = tmp_70;
goto <bb 35>; [100.00%]

=======is loop:1=========

 bb index 34 
<bb 34> [local count: 51850537]:
head_74(D)->rbh_root = tmp_70;

=======is loop:1=========

 bb index 35 
<bb 35> [local count: 172835127]:
tmp_70->entry.rbe_right = parent_64;
parent_64->entry.rbe_parent = tmp_70;

=======is loop:1=========

 bb index 36 
<bb 36> [local count: 576117095]:
# elm_47 = PHI <elm_48(27), parent_64(35)>
# parent_50 = PHI <parent_64(27), elm_48(35)>
parent_50->entry.rbe_color = 0;
gparent_65->entry.rbe_color = 1;
tmp_82 = gparent_65->entry.rbe_right;
_34 = tmp_82->entry.rbe_left;
gparent_65->entry.rbe_right = _34;
_35 = gparent_65->entry.rbe_right;
if (_35 != 0B)
  goto <bb 37>; [70.00%]
else
  goto <bb 38>; [30.00%]

=======is loop:1=========

 bb index 37 
<bb 37> [local count: 403281968]:
_36 = tmp_82->entry.rbe_left;
_36->entry.rbe_parent = gparent_65;

=======is loop:1=========

 bb index 38 
<bb 38> [local count: 576117095]:
_37 = gparent_65->entry.rbe_parent;
tmp_82->entry.rbe_parent = _37;
_38 = tmp_82->entry.rbe_parent;
if (_38 != 0B)
  goto <bb 39>; [70.00%]
else
  goto <bb 42>; [30.00%]

=======is loop:1=========

 bb index 39 
<bb 39> [local count: 403281968]:
_39 = gparent_65->entry.rbe_parent;
_40 = _39->entry.rbe_left;
if (_40 == gparent_65)
  goto <bb 40>; [30.00%]
else
  goto <bb 41>; [70.00%]

=======is loop:1=========

 bb index 40 
<bb 40> [local count: 120984589]:
_41 = gparent_65->entry.rbe_parent;
_41->entry.rbe_left = tmp_82;
goto <bb 43>; [100.00%]

=======is loop:1=========

 bb index 41 
<bb 41> [local count: 282297379]:
_42 = gparent_65->entry.rbe_parent;
_42->entry.rbe_right = tmp_82;
goto <bb 43>; [100.00%]

=======is loop:1=========

 bb index 42 
<bb 42> [local count: 172835127]:
head_74(D)->rbh_root = tmp_82;

=======is loop:1=========

 bb index 43 
<bb 43> [local count: 576117096]:
tmp_82->entry.rbe_left = gparent_65;
gparent_65->entry.rbe_parent = tmp_82;

=======is loop:1=========

 bb index 44 
<bb 44> [local count: 958878295]:
# elm_43 = PHI <gparent_65(6), elm_46(23), gparent_65(26), elm_47(43)>

=======is loop:1=========

 bb index 47 
<bb 47> [local count: 1073741824]:
# elm_48 = PHI <elm_62(D)(2), elm_43(44)>
parent_64 = elm_48->entry.rbe_parent;
if (parent_64 != 0B)
  goto <bb 45>; [94.50%]
else
  goto <bb 46>; [5.50%]

=======is loop:1=========

 bb index 45 
<bb 45> [local count: 1014686024]:
_44 = parent_64->entry.rbe_color;
if (_44 == 1)
  goto <bb 3>; [94.50%]
else
  goto <bb 46>; [5.50%]

=======is loop:0=========

 bb index 46 
<bb 46> [local count: 114863531]:
_45 = head_74(D)->rbh_root;
_45->entry.rbe_color = 0;
return;

=======Mapping node_fun:winlink_cmp=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = wl1_4(D)->idx;
_2 = wl2_5(D)->idx;
_6 = _1 - _2;
return _6;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 1 [0m
[40;34m    gimple free   count : 12 [0m
[40;34m    all ptable point : 15 [0m
[40;34m    analyzable ptable point : 1 [0m
[40;34m    used_stmt array stack totalsize of : 0.000248 mb[0m
[40;34m    collect time: : 0.004745 s [0m
[40;34m    algorithm time: 0.081275 s [0m
[40;34m    gimple stmt count : : 1104 [0m
[40;34m    this report analysis in Fri Feb 11 21:37:36 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)  2157k ( 33%)
 phase opt and generate             :   0.32 (100%)   0.12 (100%)   0.44 ( 98%)  4203k ( 65%)
 dump files                         :   0.03 (  9%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 callgraph functions expansion      :   0.27 ( 84%)   0.06 ( 50%)   0.32 ( 71%)  3326k ( 51%)
 lto stream decompression           :   0.00 (  0%)   0.01 (  8%)   0.00 (  0%)     0  (  0%)
 ipa lto gimple in                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)   560k (  9%)
 df live regs                       :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 tree CFG cleanup                   :   0.02 (  6%)   0.00 (  0%)   0.01 (  2%)  5880  (  0%)
 dominator optimization             :   0.03 (  9%)   0.00 (  0%)   0.01 (  2%)   186k (  3%)
 tree CCP                           :   0.01 (  3%)   0.00 (  0%)   0.01 (  2%)  2392  (  0%)
 tree backward propagate            :   0.01 (  3%)   0.00 (  0%)   0.01 (  2%)     0  (  0%)
 tree conservative DCE              :   0.00 (  0%)   0.01 (  8%)   0.00 (  0%)  2544  (  0%)
 tree aggressive DCE                :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)     0  (  0%)
 tree canonical iv                  :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)    12k (  0%)
 complete unrolling                 :   0.01 (  3%)   0.00 (  0%)   0.02 (  4%)    14k (  0%)
 tree iv optimization               :   0.01 (  3%)   0.00 (  0%)   0.01 (  2%)    43k (  1%)
 tree SSA uncprop                   :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 tree modref                        :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)    10k (  0%)
 dominance computation              :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)     0  (  0%)
 expand                             :   0.01 (  3%)   0.00 (  0%)   0.00 (  0%)   497k (  8%)
 forward prop                       :   0.01 (  3%)   0.00 (  0%)   0.01 (  2%)  2208  (  0%)
 dead code elimination              :   0.00 (  0%)   0.01 (  8%)   0.00 (  0%)     0  (  0%)
 loop fini                          :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)   296  (  0%)
 combiner                           :   0.01 (  3%)   0.00 (  0%)   0.01 (  2%)    89k (  1%)
 integrated RA                      :   0.01 (  3%)   0.00 (  0%)   0.05 ( 11%)  1069k ( 16%)
 LRA non-specific                   :   0.01 (  3%)   0.01 (  8%)   0.00 (  0%)    10k (  0%)
 LRA virtuals elimination           :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)  2184  (  0%)
 LRA create live ranges             :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)   600  (  0%)
 thread pro- & epilogue             :   0.01 (  3%)   0.00 (  0%)   0.01 (  2%)    79k (  1%)
 shorten branches                   :   0.01 (  3%)   0.01 (  8%)   0.02 (  4%)     0  (  0%)
 tree if-combine                    :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)  1800  (  0%)
 plugin execution                   :   0.07 ( 22%)   0.06 ( 50%)   0.12 ( 27%)    20k (  0%)
 initialize rtl                     :   0.01 (  3%)   0.01 (  8%)   0.00 (  0%)    12k (  0%)
 rest of compilation                :   0.02 (  6%)   0.00 (  0%)   0.06 ( 13%)   122k (  2%)
 repair loop structures             :   0.00 (  0%)   0.00 (  0%)   0.01 (  2%)     0  (  0%)
 TOTAL                              :   0.32          0.12          0.45         6511k
