In file included from test.c:5:0:
common.h: In function ‘discard_my_cleanups’:
common.h:94:21: warning: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘void *’ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
common.h: In function ‘do_my_cleanups’:
common.h:108:13: warning: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘void *’ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
In file included from test.c:7:0:
bfd.h: At top level:
bfd.h:55:1: warning: useless storage class specifier in empty declaration
 };
 ^
test.c:9:0: warning: "S_IREAD" redefined
 #    define S_IREAD 00400
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:175:0: note: this is the location of the previous definition
 # define S_IREAD S_IRUSR
 
test.c:10:0: warning: "S_IWRITE" redefined
 #    define S_IWRITE 00200
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:176:0: note: this is the location of the previous definition
 # define S_IWRITE S_IWUSR
 
test.c:11:0: warning: "S_IEXEC" redefined
 #    define S_IEXEC 00100
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:177:0: note: this is the location of the previous definition
 # define S_IEXEC S_IXUSR
 
test.c:13:0: warning: "S_IRUSR" redefined
 #    define S_IRUSR S_IREAD   /* read, owner */
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:168:0: note: this is the location of the previous definition
 #define S_IRUSR __S_IREAD /* Read by owner.  */
 
test.c:14:0: warning: "S_IWUSR" redefined
 #    define S_IWUSR S_IWRITE  /* write, owner */
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:169:0: note: this is the location of the previous definition
 #define S_IWUSR __S_IWRITE /* Write by owner.  */
 
test.c:15:0: warning: "S_IXUSR" redefined
 #    define S_IXUSR S_IEXEC   /* execute, owner */
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:170:0: note: this is the location of the previous definition
 #define S_IXUSR __S_IEXEC /* Execute by owner.  */
 
test.c:17:0: warning: "S_IRGRP" redefined
 #    define S_IRGRP (S_IREAD  >> 3)  /* read, group */
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:180:0: note: this is the location of the previous definition
 #define S_IRGRP (S_IRUSR >> 3) /* Read by group.  */
 
test.c:18:0: warning: "S_IWGRP" redefined
 #    define S_IWGRP (S_IWRITE >> 3)  /* write, group */
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:181:0: note: this is the location of the previous definition
 #define S_IWGRP (S_IWUSR >> 3) /* Write by group.  */
 
test.c:19:0: warning: "S_IXGRP" redefined
 #    define S_IXGRP (S_IEXEC  >> 3)  /* execute, group */
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:182:0: note: this is the location of the previous definition
 #define S_IXGRP (S_IXUSR >> 3) /* Execute by group.  */
 
test.c:21:0: warning: "S_IROTH" redefined
 #    define S_IROTH (S_IREAD  >> 6)  /* read, other */
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:186:0: note: this is the location of the previous definition
 #define S_IROTH (S_IRGRP >> 3) /* Read by others.  */
 
test.c:22:0: warning: "S_IWOTH" redefined
 #    define S_IWOTH (S_IWRITE >> 6)  /* write, other */
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:187:0: note: this is the location of the previous definition
 #define S_IWOTH (S_IWGRP >> 3) /* Write by others.  */
 
test.c:23:0: warning: "S_IXOTH" redefined
 #    define S_IXOTH (S_IEXEC  >> 6)  /* execute, other */
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:188:0: note: this is the location of the previous definition
 #define S_IXOTH (S_IXGRP >> 3) /* Execute by others.  */
 
test.c:25:0: warning: "S_IRWXU" redefined
 #  define S_IRWXU (S_IRUSR | S_IWUSR | S_IXUSR)
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:172:0: note: this is the location of the previous definition
 #define S_IRWXU (__S_IREAD|__S_IWRITE|__S_IEXEC)
 
test.c:26:0: warning: "S_IRWXG" redefined
 #  define S_IRWXG (S_IRGRP | S_IWGRP | S_IXGRP)
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:184:0: note: this is the location of the previous definition
 #define S_IRWXG (S_IRWXU >> 3)
 
test.c:27:0: warning: "S_IRWXO" redefined
 #  define S_IRWXO (S_IROTH | S_IWOTH | S_IXOTH)
 
In file included from common.h:3:0,
                 from test.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:190:0: note: this is the location of the previous definition
 #define S_IRWXO (S_IRWXG >> 3)
 
test.c: In function ‘template_in_dir’:
test.c:45:23: warning: implicit declaration of function ‘strrchr’ [-Wimplicit-function-declaration]
   const char *slash = strrchr (path, '/');
                       ^~~~~~~
test.c:45:23: warning: incompatible implicit declaration of built-in function ‘strrchr’
test.c:45:23: note: include ‘<string.h>’ or provide a declaration of ‘strrchr’
test.c:53:7: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
       memcpy (tmpname, path, len);
       ^~~~~~
test.c:53:7: warning: incompatible implicit declaration of built-in function ‘memcpy’
test.c:53:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
test.c:62:3: warning: incompatible implicit declaration of built-in function ‘memcpy’
   memcpy (tmpname + len, template, sizeof (template));
   ^~~~~~
test.c:62:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
test.c: In function ‘make_tempname’:
test.c:81:3: warning: implicit declaration of function ‘close’; did you mean ‘pclose’? [-Wimplicit-function-declaration]
   close (fd);
   ^~~~~
   pclose
test.c: In function ‘set_times’:
test.c:103:14: warning: implicit declaration of function ‘utime’; did you mean ‘futimens’? [-Wimplicit-function-declaration]
     result = utime (destination, tb);
              ^~~~~
              futimens
test.c: In function ‘smart_rename’:
test.c:156:12: warning: implicit declaration of function ‘chown’ [-Wimplicit-function-declaration]
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^~~~~
test.c:164:4: warning: implicit declaration of function ‘unlink’; did you mean ‘unix’? [-Wimplicit-function-declaration]
    unlink (from);
    ^~~~~~
    unix
In file included from test.c:5:0:
test.c: In function ‘write_archive’:
test.c:213:32: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
                                ^
common.h:21:27: note: in definition of macro ‘xmalloc’
 #define xmalloc(a) malloc(a)
                           ^
test.c:213:32: warning: incompatible implicit declaration of built-in function ‘strlen’
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
                                ^
common.h:21:27: note: in definition of macro ‘xmalloc’
 #define xmalloc(a) malloc(a)
                           ^
test.c:213:32: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
                                ^
common.h:21:27: note: in definition of macro ‘xmalloc’
 #define xmalloc(a) malloc(a)
                           ^
test.c:214:3: warning: implicit declaration of function ‘strcpy’ [-Wimplicit-function-declaration]
   strcpy (old_name, bfd_get_filename (iarch));
   ^~~~~~
test.c:214:3: warning: incompatible implicit declaration of built-in function ‘strcpy’
test.c:214:3: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’
=======ipa_pta=========
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
====================POINTER_TYPE============================
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
====================POINTER_TYPE============================
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
====================POINTER_TYPE============================
 <ssa_name 0x7f0991c3a9d8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c3e7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f0991c344e0>
 <ssa_name 0x7f0991c43900
    type <pointer_type 0x7f0991c17f18
        type <record_type 0x7f0991c17e70 bfd BLK
            size <integer_cst 0x7f099218bc30 constant 384>
            unit size <integer_cst 0x7f0991c1a480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c17d20 fields <field_decl 0x7f0991c197b8 filename> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c17f18> chain <type_decl 0x7f0991c19850 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0991c42990 nbfd>
    def_stmt nbfd_38 = malloc (48);
    version 38
    ptr-info 0x7f0991c345e8>
====================POINTER_TYPE============================
 <ssa_name 0x7f0991c3a558
    type <pointer_type 0x7f0991c17f18
        type <record_type 0x7f0991c17e70 bfd BLK
            size <integer_cst 0x7f099218bc30 constant 384>
            unit size <integer_cst 0x7f0991c1a480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c17d20 fields <field_decl 0x7f0991c197b8 filename> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c17f18> chain <type_decl 0x7f0991c19850 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0991c37900 obfd>
    def_stmt obfd_12 = _87;
    version 12
    ptr-info 0x7f0991c344b0>
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
------------------------------
# VUSE <.MEM_1(D)>
contents_head_4 = iarch.archive_next;
 <component_ref 0x7f09920d15d0
    type <pointer_type 0x7f0991c17dc8
        type <record_type 0x7f0991c17d20 bfd BLK
            size <integer_cst 0x7f099218bc30 constant 384>
            unit size <integer_cst 0x7f0991c1a480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c17d20 fields <field_decl 0x7f0991c197b8 filename> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c17dc8> chain <type_decl 0x7f0991c19850 D.3998>>
        unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f0992e67bd0 iarch
        type <record_type 0x7f0991c17e70 bfd BLK size <integer_cst 0x7f099218bc30 384> unit size <integer_cst 0x7f0991c1a480 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c17d20 fields <field_decl 0x7f0991c197b8 filename> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c17f18> chain <type_decl 0x7f0991c19850 D.3998>>
        addressable BLK file test.c line 243 col 13 size <integer_cst 0x7f099218bc30 384> unit size <integer_cst 0x7f0991c1a480 48>
        align 128 context <function_decl 0x7f0991c18b00 main>>
    arg 1 <field_decl 0x7f0991c19688 archive_next type <pointer_type 0x7f0991c17dc8>
        unsigned DI file bfd.h line 60 col 14 size <integer_cst 0x7f09920d2be8 64> unit size <integer_cst 0x7f09920d2c00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7f09920d2c48 constant 16>
        bit offset <integer_cst 0x7f09920d2c60 constant 0> context <record_type 0x7f0991c17d20 bfd>
        chain <field_decl 0x7f0991c195f0 xvec type <pointer_type 0x7f0991c17bd0>
            unsigned DI file bfd.h line 62 col 27 size <integer_cst 0x7f09920d2be8 64> unit size <integer_cst 0x7f09920d2c00 8>
            align 64 offset_align 128 offset <integer_cst 0x7f09920d2c48 16> bit offset <integer_cst 0x7f09920d2be8 64> context <record_type 0x7f0991c17d20 bfd> chain <field_decl 0x7f0991c19558 memory>>>
    test.c:211:29 start: test.c:211:29 finish: test.c:211:29>
mappinggggggggggggggggggg22gggggggggggg-------
------------------------------
# VUSE <.MEM_1(D)>
_21 = iarch.filename;
 <component_ref 0x7f09920d1780
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
   
    arg 0 <var_decl 0x7f0992e67bd0 iarch
        type <record_type 0x7f0991c17e70 bfd BLK
            size <integer_cst 0x7f099218bc30 constant 384>
            unit size <integer_cst 0x7f0991c1a480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c17d20 fields <field_decl 0x7f0991c197b8 filename> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c17f18> chain <type_decl 0x7f0991c19850 D.3998>>
        addressable BLK file test.c line 243 col 13 size <integer_cst 0x7f099218bc30 384> unit size <integer_cst 0x7f0991c1a480 48>
        align 128 context <function_decl 0x7f0991c18b00 main>>
    arg 1 <field_decl 0x7f0991c197b8 filename type <pointer_type 0x7f0991c17930>
        unsigned DI file bfd.h line 58 col 8 size <integer_cst 0x7f09920d2be8 64> unit size <integer_cst 0x7f09920d2c00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7f09920d2c18 constant 0>
        bit offset <integer_cst 0x7f09920d2c60 constant 0> context <record_type 0x7f0991c17d20 bfd>
        chain <field_decl 0x7f0991c19720 direction type <integer_type 0x7f09920e65e8 int>
            SI file bfd.h line 59 col 6
            size <integer_cst 0x7f09920d2e28 constant 32>
            unit size <integer_cst 0x7f09920d2e40 constant 4>
            align 32 offset_align 128 offset <integer_cst 0x7f09920d2c18 0> bit offset <integer_cst 0x7f09920d2be8 64> context <record_type 0x7f0991c17d20 bfd> chain <field_decl 0x7f0991c19688 archive_next>>>
    test.c:203:14 start: test.c:203:14 finish: test.c:203:14>
mappinggggggggggggggggggg22gggggggggggg-------
------------------------------
_71 = _21;
 <ssa_name 0x7f0991c3ac18
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
   
    def_stmt _21 = iarch.filename;
    version 21
    ptr-info 0x7f0991c34528>
------------------------------
_5 = _71;
 <ssa_name 0x7f0991c531f8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c3eea0 D.4093>
    def_stmt _71 = _21;
    version 71
    ptr-info 0x7f0991c34618>
------------------------------
_7 = _6 + 1;
 <ssa_name 0x7f0991c3a3a8
    type <integer_type 0x7f09920e67e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f09920e6738 precision 64 min <integer_cst 0x7f09920d2eb8 0> max <integer_cst 0x7f09920d4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f09920f29d8>>
   
    def_stmt _6 = strlen (_5);
    version 6>
------------------------------
# VUSE <.MEM_72>
_20 = iarch.filename;
 <component_ref 0x7f09920d1720
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
   
    arg 0 <var_decl 0x7f0992e67bd0 iarch
        type <record_type 0x7f0991c17e70 bfd BLK
            size <integer_cst 0x7f099218bc30 constant 384>
            unit size <integer_cst 0x7f0991c1a480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c17d20 fields <field_decl 0x7f0991c197b8 filename> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c17f18> chain <type_decl 0x7f0991c19850 D.3998>>
        addressable BLK file test.c line 243 col 13 size <integer_cst 0x7f099218bc30 384> unit size <integer_cst 0x7f0991c1a480 48>
        align 128 context <function_decl 0x7f0991c18b00 main>>
    arg 1 <field_decl 0x7f0991c197b8 filename type <pointer_type 0x7f0991c17930>
        unsigned DI file bfd.h line 58 col 8 size <integer_cst 0x7f09920d2be8 64> unit size <integer_cst 0x7f09920d2c00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7f09920d2c18 constant 0>
        bit offset <integer_cst 0x7f09920d2c60 constant 0> context <record_type 0x7f0991c17d20 bfd>
        chain <field_decl 0x7f0991c19720 direction type <integer_type 0x7f09920e65e8 int>
            SI file bfd.h line 59 col 6
            size <integer_cst 0x7f09920d2e28 constant 32>
            unit size <integer_cst 0x7f09920d2e40 constant 4>
            align 32 offset_align 128 offset <integer_cst 0x7f09920d2c18 0> bit offset <integer_cst 0x7f09920d2be8 64> context <record_type 0x7f0991c17d20 bfd> chain <field_decl 0x7f0991c19688 archive_next>>>
    test.c:203:14 start: test.c:203:14 finish: test.c:203:14>
mappinggggggggggggggggggg22gggggggggggg-------
------------------------------
_73 = _20;
 <ssa_name 0x7f0991c3abd0
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
   
    def_stmt _20 = iarch.filename;
    version 20
    ptr-info 0x7f0991c34510>
------------------------------
_9 = _73;
 <ssa_name 0x7f0991c53288
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c3ed80 D.4091>
    def_stmt _73 = _20;
    version 73
    ptr-info 0x7f0991c34630>
------------------------------
_23 = (long int) slash_22;
 <ssa_name 0x7f0991c431f8
    type <pointer_type 0x7f0991c172a0
        type <integer_type 0x7f0991c171f8 char readonly string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c172a0>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0991c252a0>>
    var <var_decl 0x7f0991c42360 slash>
    def_stmt slash_22 = strrchr (old_name_8, 47);
    version 22
    ptr-info 0x7f0991c34540>
------------------------------
_24 = (long int) old_name_8;
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
------------------------------
_25 = _23 - _24;
 <ssa_name 0x7f0991c43240
    type <integer_type 0x7f09920e6738 long int DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f09920e6738 precision 64 min <integer_cst 0x7f09920d2e70 -9223372036854775808> max <integer_cst 0x7f09920d2e88 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09920f2930>>
   
    def_stmt _23 = (long int) slash_22;
    version 23>
------------------------------
len_26 = (size_t) _25;
 <ssa_name 0x7f0991c432d0
    type <integer_type 0x7f09920e6738 long int DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f09920e6738 precision 64 min <integer_cst 0x7f09920d2e70 -9223372036854775808> max <integer_cst 0x7f09920d2e88 9223372036854775807>
        pointer_to_this <pointer_type 0x7f09920f2930>>
   
    def_stmt _25 = _23 - _24;
    version 25>
------------------------------
_27 = len_26 + 11;
 <ssa_name 0x7f0991c43318
    type <integer_type 0x7f0991c22000 size_t public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f09920e6738 precision 64 min <integer_cst 0x7f09920d2eb8 0> max <integer_cst 0x7f09920d4500 18446744073709551615> context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c42480 len>
    def_stmt len_26 = (size_t) _25;
    version 26>
------------------------------
len_29 = len_26 + 1;
 <ssa_name 0x7f0991c43318
    type <integer_type 0x7f0991c22000 size_t public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f09920e6738 precision 64 min <integer_cst 0x7f09920d2eb8 0> max <integer_cst 0x7f09920d4500 18446744073709551615> context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c42480 len>
    def_stmt len_26 = (size_t) _25;
    version 26>
------------------------------
_30 = tmpname_28 + len_26;
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
------------------------------
_34 = tmpname_32 + len_33;
 <ssa_name 0x7f0991c434c8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
    version 32
    ptr-info 0x7f0991c345a0>
 <string_cst 0x7f0991c3b7e0
    type <array_type 0x7f0991c26930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        BLK
        size <integer_cst 0x7f0991c1a708 constant 72>
        unit size <integer_cst 0x7f0991c1a6f0 constant 9>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7f0991c26888 type <integer_type 0x7f09920e6000 sizetype>
            DI
            size <integer_cst 0x7f09920d2be8 constant 64>
            unit size <integer_cst 0x7f09920d2c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7f09920e6738 precision 64 min <integer_cst 0x7f09920d2c18 0> max <integer_cst 0x7f09920d2c00 8>>
        pointer_to_this <pointer_type 0x7f0991c269d8>>
    readonly constant static "stXXXXXX\000">
------------------------------
_35 = tmpname_32;
 <ssa_name 0x7f0991c434c8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
    version 32
    ptr-info 0x7f0991c345a0>
------------------------------
_80 = tmpname_32;
 <ssa_name 0x7f0991c434c8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
    version 32
    ptr-info 0x7f0991c345a0>
------------------------------
tmpname_17 = _80;
 <ssa_name 0x7f0991c53480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c42510 D.4107>
    def_stmt _80 = tmpname_32;
    version 80
    ptr-info 0x7f0991c34648>
------------------------------
_84 = _19;
 <ssa_name 0x7f0991c3aa68
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
   
    def_stmt _19 = PHI <0B(6), tmpname_17(7)>
    version 19
    ptr-info 0x7f0991c344f8>
------------------------------
new_name_10 = _84;
 <ssa_name 0x7f0991c535a0
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c3e900 D.4086>
    def_stmt _84 = _19;
    version 84
    ptr-info 0x7f0991c34660>
 <string_cst 0x7f0991c28190
    type <array_type 0x7f0991c22dc8
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        BLK
        size <integer_cst 0x7f0991c1a540 constant 456>
        unit size <integer_cst 0x7f0991c1a5d0 constant 57>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7f0991c22d20 type <integer_type 0x7f09920e6000 sizetype>
            DI
            size <integer_cst 0x7f09920d2be8 constant 64>
            unit size <integer_cst 0x7f09920d2c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7f09920e6738 precision 64 min <integer_cst 0x7f09920d2c18 0> max <integer_cst 0x7f0991c1a5b8 56>>
        pointer_to_this <pointer_type 0x7f0991c22e70>>
    readonly constant static "could not create temporary file whilst writing archive%s\000">
 <string_cst 0x7f0991c340c0
    type <array_type 0x7f0991c25000
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        QI size <integer_cst 0x7f09920d2cd8 8> unit size <integer_cst 0x7f09920d2cf0 1>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7f0991c22f18 type <integer_type 0x7f09920e6000 sizetype>
            DI
            size <integer_cst 0x7f09920d2be8 constant 64>
            unit size <integer_cst 0x7f09920d2c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7f09920e6738 precision 64 min <integer_cst 0x7f09920d2c18 0> max <integer_cst 0x7f09920d2c18 0>>
        pointer_to_this <pointer_type 0x7f0991c250a8>>
    readonly constant static "\000">
------------------------------
# VUSE <.MEM_69>
_36 = MEM[(int *)new_name_10];
 <mem_ref 0x7f0991c3fb90
    type <integer_type 0x7f09920e65e8 int public SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e65e8 precision 32 min <integer_cst 0x7f09920d2de0 -2147483648> max <integer_cst 0x7f09920d2df8 2147483647>
        pointer_to_this <pointer_type 0x7f09920eda80>>
   
    arg 0 <ssa_name 0x7f0991c3a4c8
        type <pointer_type 0x7f0991c17930 type <integer_type 0x7f0991c17888 char>
            public unsigned DI
            size <integer_cst 0x7f09920d2be8 constant 64>
            unit size <integer_cst 0x7f09920d2c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
        var <var_decl 0x7f0991c37a20 new_name>
        def_stmt new_name_10 = _84;
        version 10
        ptr-info 0x7f0991c34498>
    arg 1 <integer_cst 0x7f0991c34270 type <pointer_type 0x7f09920eda80> constant 0>>
 <string_cst 0x7f0991c3ba20
    type <array_type 0x7f0991c26498
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7f0991c263f0 type <integer_type 0x7f09920e6000 sizetype>
            DI
            size <integer_cst 0x7f09920d2be8 constant 64>
            unit size <integer_cst 0x7f09920d2c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7f09920e6738 precision 64 min <integer_cst 0x7f09920d2c18 0> max <integer_cst 0x7f0991c1a600 3>>
        pointer_to_this <pointer_type 0x7f0991c26540>>
    readonly constant static "%d\012\000">
------------------------------
_39 = nbfd_38;
 <ssa_name 0x7f0991c43900
    type <pointer_type 0x7f0991c17f18
        type <record_type 0x7f0991c17e70 bfd BLK
            size <integer_cst 0x7f099218bc30 constant 384>
            unit size <integer_cst 0x7f0991c1a480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c17d20 fields <field_decl 0x7f0991c197b8 filename> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c17f18> chain <type_decl 0x7f0991c19850 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0991c42990 nbfd>
    def_stmt nbfd_38 = malloc (48);
    version 38
    ptr-info 0x7f0991c345e8>
------------------------------
_87 = nbfd_38;
 <ssa_name 0x7f0991c43900
    type <pointer_type 0x7f0991c17f18
        type <record_type 0x7f0991c17e70 bfd BLK
            size <integer_cst 0x7f099218bc30 constant 384>
            unit size <integer_cst 0x7f0991c1a480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c17d20 fields <field_decl 0x7f0991c197b8 filename> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c17f18> chain <type_decl 0x7f0991c19850 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0991c42990 nbfd>
    def_stmt nbfd_38 = malloc (48);
    version 38
    ptr-info 0x7f0991c345e8>
------------------------------
obfd_12 = _87;
 <ssa_name 0x7f0991c53678
    type <pointer_type 0x7f0991c17f18
        type <record_type 0x7f0991c17e70 bfd BLK
            size <integer_cst 0x7f099218bc30 constant 384>
            unit size <integer_cst 0x7f0991c1a480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c17d20 fields <field_decl 0x7f0991c197b8 filename> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c17f18> chain <type_decl 0x7f0991c19850 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0991c42a20 D.4114>
    def_stmt _87 = nbfd_38;
    version 87
    ptr-info 0x7f0991c34678>
 <string_cst 0x7f0991c340f0
    type <array_type 0x7f0991c253f0
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        BLK
        size <integer_cst 0x7f09920ee090 constant 24>
        unit size <integer_cst 0x7f0991c1a600 constant 3>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7f0991c1f498 type <integer_type 0x7f09920e6000 sizetype>
            DI
            size <integer_cst 0x7f09920d2be8 constant 64>
            unit size <integer_cst 0x7f09920d2c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7f09920e6738 precision 64 min <integer_cst 0x7f09920d2c18 0> max <integer_cst 0x7f09920d2db0 2>>
        pointer_to_this <pointer_type 0x7f0991c25498>>
    readonly constant static "%s\000">
------------------------------
_41 = _40 % 2;
 <ssa_name 0x7f0991c43c18
    type <integer_type 0x7f09920e65e8 int public SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e65e8 precision 32 min <integer_cst 0x7f09920d2de0 -2147483648> max <integer_cst 0x7f09920d2df8 2147483647>
        pointer_to_this <pointer_type 0x7f09920eda80>>
   
    def_stmt _40 = rand ();
    version 40>
------------------------------
_42 = _41 == 1;
 <ssa_name 0x7f0991c43c60
    type <integer_type 0x7f09920e65e8 int public SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e65e8 precision 32 min <integer_cst 0x7f09920d2de0 -2147483648> max <integer_cst 0x7f09920d2df8 2147483647>
        pointer_to_this <pointer_type 0x7f09920eda80>>
   
    def_stmt _41 = _40 % 2;
    version 41>
------------------------------
ret_43 = (bfd_boolean) _42;
 <ssa_name 0x7f0991c43ca8
    type <boolean_type 0x7f0991c257e0 _Bool public unsigned QI
        size <integer_cst 0x7f09920d2cd8 constant 8>
        unit size <integer_cst 0x7f09920d2cf0 constant 1>
        align 8 symtab 0 alias set -1 canonical type 0x7f09920e6b28 precision 1 min <integer_cst 0x7f0991c1a648 0> max <integer_cst 0x7f0991c1a630 1>>
   
    def_stmt _42 = _41 == 1;
    version 42>
------------------------------
_14 = _90(D);
 <ssa_name 0x7f0991c53750
    type <pointer_type 0x7f0991c1f930
        type <integer_type 0x7f0991c1f888 bfd_boolean SI
            size <integer_cst 0x7f09920d2e28 constant 32>
            unit size <integer_cst 0x7f09920d2e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f09920e65e8 precision 32 min <integer_cst 0x7f09920d2de0 -2147483648> max <integer_cst 0x7f09920d2df8 2147483647> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c1f930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0991c42e10 D.4121>
    def_stmt GIMPLE_NOP
    version 90
    ptr-info 0x7f0991c34690>
 <string_cst 0x7f0991c34120
    type <array_type 0x7f0991c253f0
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        BLK
        size <integer_cst 0x7f09920ee090 constant 24>
        unit size <integer_cst 0x7f0991c1a600 constant 3>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7f0991c1f498 type <integer_type 0x7f09920e6000 sizetype>
            DI
            size <integer_cst 0x7f09920d2be8 constant 64>
            unit size <integer_cst 0x7f09920d2c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7f09920e6738 precision 64 min <integer_cst 0x7f09920d2c18 0> max <integer_cst 0x7f09920d2db0 2>>
        pointer_to_this <pointer_type 0x7f0991c25498>>
    readonly constant static "%s\000">
------------------------------
_61 = _60 % 2;
 <ssa_name 0x7f0991c4caf8
    type <integer_type 0x7f09920e65e8 int public SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e65e8 precision 32 min <integer_cst 0x7f09920d2de0 -2147483648> max <integer_cst 0x7f09920d2df8 2147483647>
        pointer_to_this <pointer_type 0x7f09920eda80>>
   
    def_stmt _60 = rand ();
    version 60>
------------------------------
_62 = _61 == 1;
 <ssa_name 0x7f0991c4cb40
    type <integer_type 0x7f09920e65e8 int public SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e65e8 precision 32 min <integer_cst 0x7f09920d2de0 -2147483648> max <integer_cst 0x7f09920d2df8 2147483647>
        pointer_to_this <pointer_type 0x7f09920eda80>>
   
    def_stmt _61 = _60 % 2;
    version 61>
------------------------------
ret_63 = (bfd_boolean) _62;
 <ssa_name 0x7f0991c4cb88
    type <boolean_type 0x7f0991c257e0 _Bool public unsigned QI
        size <integer_cst 0x7f09920d2cd8 constant 8>
        unit size <integer_cst 0x7f09920d2cf0 constant 1>
        align 8 symtab 0 alias set -1 canonical type 0x7f09920e6b28 precision 1 min <integer_cst 0x7f0991c1a648 0> max <integer_cst 0x7f0991c1a630 1>>
   
    def_stmt _62 = _61 == 1;
    version 62>
 <var_decl 0x7f0991c48750 s
    type <record_type 0x7f0991c1f5e8 stat BLK
        size <integer_cst 0x7f0991c1a498 constant 1152>
        unit size <integer_cst 0x7f0991c1a528 constant 144>
        align 64 symtab 0 alias set -1 canonical type 0x7f0991c1f5e8
        fields <field_decl 0x7f0991c20ab0 st_dev type <integer_type 0x7f0991c1f0a8 __dev_t>
            unsigned DI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 28 col 13
            size <integer_cst 0x7f09920d2be8 constant 64>
            unit size <integer_cst 0x7f09920d2c00 constant 8>
            align 64 offset_align 128
            offset <integer_cst 0x7f09920d2c18 constant 0>
            bit offset <integer_cst 0x7f09920d2c60 constant 0> context <record_type 0x7f0991c1f5e8 stat> chain <field_decl 0x7f0991c20a18 st_ino>> context <translation_unit_decl 0x7f09920dd168 test.c>
        pointer_to_this <pointer_type 0x7f0991c22348> chain <type_decl 0x7f0991c20b48 D.4031>>
    addressable used BLK file test.c line 124 col 15 size <integer_cst 0x7f0991c1a498 1152> unit size <integer_cst 0x7f0991c1a528 144>
    align 128 context <function_decl 0x7f0991c18b00 main> abstract_origin <var_decl 0x7f0991c3e990 s> chain <var_decl 0x7f0991c487e0 ret>>
------------------------------
_45 = _44 == 0;
 <ssa_name 0x7f0991c4c630
    type <integer_type 0x7f09920e65e8 int public SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e65e8 precision 32 min <integer_cst 0x7f09920d2de0 -2147483648> max <integer_cst 0x7f09920d2df8 2147483647>
        pointer_to_this <pointer_type 0x7f09920eda80>>
   
    def_stmt _44 = lstat (old_name_8, &s);
    version 44>
------------------------------
exists_46 = (bfd_boolean) _45;
 <ssa_name 0x7f0991c4c678
    type <boolean_type 0x7f0991c257e0 _Bool public unsigned QI
        size <integer_cst 0x7f09920d2cd8 constant 8>
        unit size <integer_cst 0x7f09920d2cf0 constant 1>
        align 8 symtab 0 alias set -1 canonical type 0x7f09920e6b28 precision 1 min <integer_cst 0x7f0991c1a648 0> max <integer_cst 0x7f0991c1a630 1>>
   
    def_stmt _45 = _44 == 0;
    version 45>
------------------------------
# VUSE <.MEM_93>
_47 = BIT_FIELD_REF <s, 32, 192>;
 <bit_field_ref 0x7f09920d1ab0
    type <integer_type 0x7f09920e6690 unsigned int public unsigned SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e6690 precision 32 min <integer_cst 0x7f09920d2e58 0> max <integer_cst 0x7f09920d2e10 4294967295>
        pointer_to_this <pointer_type 0x7f09920f2888>>
   
    arg 0 <var_decl 0x7f0991c48750 s
        type <record_type 0x7f0991c1f5e8 stat BLK
            size <integer_cst 0x7f0991c1a498 constant 1152>
            unit size <integer_cst 0x7f0991c1a528 constant 144>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c1f5e8 fields <field_decl 0x7f0991c20ab0 st_dev> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c22348> chain <type_decl 0x7f0991c20b48 D.4031>>
        addressable used BLK file test.c line 124 col 15 size <integer_cst 0x7f0991c1a498 1152> unit size <integer_cst 0x7f0991c1a528 144>
        align 128 context <function_decl 0x7f0991c18b00 main> abstract_origin <var_decl 0x7f0991c3e990 s>
        chain <var_decl 0x7f0991c487e0 ret type <integer_type 0x7f09920e65e8 int>
            used SI file test.c line 125 col 7 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
            align 32 context <function_decl 0x7f0991c18b00 main> abstract_origin <var_decl 0x7f0991c42f30 ret>>>
    arg 1 <integer_cst 0x7f09920ee048 type <integer_type 0x7f09920e6000 sizetype> constant 32>
    arg 2 <integer_cst 0x7f09920ee0a8 type <integer_type 0x7f09920e60a8 bitsizetype> constant 192>
    test.c:134:4 start: test.c:134:4 finish: test.c:134:4>
------------------------------
_48 = _47 & 61568;
 <ssa_name 0x7f0991c4c708
    type <integer_type 0x7f09920e6690 unsigned int public unsigned SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e6690 precision 32 min <integer_cst 0x7f09920d2e58 0> max <integer_cst 0x7f09920d2e10 4294967295>
        pointer_to_this <pointer_type 0x7f09920f2888>>
   
    def_stmt _47 = BIT_FIELD_REF <s, 32, 192>;
    version 47>
------------------------------
# VUSE <.MEM_93>
_49 = s.st_nlink;
 <component_ref 0x7f09920d1b10
    type <integer_type 0x7f0991c1f348 __nlink_t public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f09920e6738 precision 64 min <integer_cst 0x7f09920d2eb8 0> max <integer_cst 0x7f09920d4500 18446744073709551615> context <translation_unit_decl 0x7f09920dd168 test.c>>
   
    arg 0 <var_decl 0x7f0991c48750 s
        type <record_type 0x7f0991c1f5e8 stat BLK
            size <integer_cst 0x7f0991c1a498 constant 1152>
            unit size <integer_cst 0x7f0991c1a528 constant 144>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c1f5e8 fields <field_decl 0x7f0991c20ab0 st_dev> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c22348> chain <type_decl 0x7f0991c20b48 D.4031>>
        addressable used BLK file test.c line 124 col 15 size <integer_cst 0x7f0991c1a498 1152> unit size <integer_cst 0x7f0991c1a528 144>
        align 128 context <function_decl 0x7f0991c18b00 main> abstract_origin <var_decl 0x7f0991c3e990 s>
        chain <var_decl 0x7f0991c487e0 ret type <integer_type 0x7f09920e65e8 int>
            used SI file test.c line 125 col 7
            size <integer_cst 0x7f09920d2e28 constant 32>
            unit size <integer_cst 0x7f09920d2e40 constant 4>
            align 32 context <function_decl 0x7f0991c18b00 main> abstract_origin <var_decl 0x7f0991c42f30 ret>>>
    arg 1 <field_decl 0x7f0991c20980 st_nlink type <integer_type 0x7f0991c1f348 __nlink_t>
        unsigned DI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 41 col 15 size <integer_cst 0x7f09920d2be8 64> unit size <integer_cst 0x7f09920d2c00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7f09920d2c48 constant 16>
        bit offset <integer_cst 0x7f09920d2c60 constant 0> context <record_type 0x7f0991c1f5e8 stat>
        chain <field_decl 0x7f0991c208e8 st_mode type <integer_type 0x7f0991c1f2a0 __mode_t>
            unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 42 col 14 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
            align 32 offset_align 128 offset <integer_cst 0x7f09920d2c48 16> bit offset <integer_cst 0x7f09920d2be8 64> context <record_type 0x7f0991c1f5e8 stat> chain <field_decl 0x7f0991c20850 st_uid>>>
    test.c:135:8 start: test.c:135:8 finish: test.c:135:8>
mappinggggggggggggggggggg22gggggggggggg-------
------------------------------
# VUSE <.MEM_95>
_51 = s.st_mode;
 <component_ref 0x7f09920d1b70
    type <integer_type 0x7f0991c1f2a0 __mode_t unsigned SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e6690 precision 32 min <integer_cst 0x7f09920d2e58 0> max <integer_cst 0x7f09920d2e10 4294967295> context <translation_unit_decl 0x7f09920dd168 test.c>>
   
    arg 0 <var_decl 0x7f0991c48750 s
        type <record_type 0x7f0991c1f5e8 stat BLK
            size <integer_cst 0x7f0991c1a498 constant 1152>
            unit size <integer_cst 0x7f0991c1a528 constant 144>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c1f5e8 fields <field_decl 0x7f0991c20ab0 st_dev> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c22348> chain <type_decl 0x7f0991c20b48 D.4031>>
        addressable used BLK file test.c line 124 col 15 size <integer_cst 0x7f0991c1a498 1152> unit size <integer_cst 0x7f0991c1a528 144>
        align 128 context <function_decl 0x7f0991c18b00 main> abstract_origin <var_decl 0x7f0991c3e990 s>
        chain <var_decl 0x7f0991c487e0 ret type <integer_type 0x7f09920e65e8 int>
            used SI file test.c line 125 col 7 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
            align 32 context <function_decl 0x7f0991c18b00 main> abstract_origin <var_decl 0x7f0991c42f30 ret>>>
    arg 1 <field_decl 0x7f0991c208e8 st_mode type <integer_type 0x7f0991c1f2a0 __mode_t>
        unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 42 col 14 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
        align 32 offset_align 128
        offset <integer_cst 0x7f09920d2c48 constant 16>
        bit offset <integer_cst 0x7f09920d2be8 constant 64> context <record_type 0x7f0991c1f5e8 stat>
        chain <field_decl 0x7f0991c20850 st_uid type <integer_type 0x7f0991c1f1f8 __uid_t>
            unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 44 col 13 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
            align 32 offset_align 128 offset <integer_cst 0x7f09920d2c48 16>
            bit offset <integer_cst 0x7f0991c1a510 constant 96> context <record_type 0x7f0991c1f5e8 stat> chain <field_decl 0x7f0991c207b8 st_gid>>>
    test.c:155:20 start: test.c:155:20 finish: test.c:155:20>
mappinggggggggggggggggggg22gggggggggggg-------
------------------------------
_52 = _51 & 511;
 <ssa_name 0x7f0991c4c828
    type <integer_type 0x7f09920e6690 unsigned int public unsigned SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e6690 precision 32 min <integer_cst 0x7f09920d2e58 0> max <integer_cst 0x7f09920d2e10 4294967295>
        pointer_to_this <pointer_type 0x7f09920f2888>>
   
    def_stmt _51 = s.st_mode;
    version 51>
------------------------------
# VUSE <.MEM_98>
_53 = s.st_gid;
 <component_ref 0x7f09920d1bd0
    type <integer_type 0x7f0991c1f150 __gid_t unsigned SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e6690 precision 32 min <integer_cst 0x7f09920d2e58 0> max <integer_cst 0x7f09920d2e10 4294967295> context <translation_unit_decl 0x7f09920dd168 test.c>>
   
    arg 0 <var_decl 0x7f0991c48750 s
        type <record_type 0x7f0991c1f5e8 stat BLK
            size <integer_cst 0x7f0991c1a498 constant 1152>
            unit size <integer_cst 0x7f0991c1a528 constant 144>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c1f5e8 fields <field_decl 0x7f0991c20ab0 st_dev> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c22348> chain <type_decl 0x7f0991c20b48 D.4031>>
        addressable used BLK file test.c line 124 col 15 size <integer_cst 0x7f0991c1a498 1152> unit size <integer_cst 0x7f0991c1a528 144>
        align 128 context <function_decl 0x7f0991c18b00 main> abstract_origin <var_decl 0x7f0991c3e990 s>
        chain <var_decl 0x7f0991c487e0 ret type <integer_type 0x7f09920e65e8 int>
            used SI file test.c line 125 col 7 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
            align 32 context <function_decl 0x7f0991c18b00 main> abstract_origin <var_decl 0x7f0991c42f30 ret>>>
    arg 1 <field_decl 0x7f0991c207b8 st_gid type <integer_type 0x7f0991c1f150 __gid_t>
        unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 45 col 13 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
        align 32 offset_align 128
        offset <integer_cst 0x7f09920ee048 constant 32>
        bit offset <integer_cst 0x7f09920d2c60 constant 0> context <record_type 0x7f0991c1f5e8 stat>
        chain <field_decl 0x7f0991c20720 __pad0 type <integer_type 0x7f09920e65e8 int>
            SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 47 col 9 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
            align 32 offset_align 128 offset <integer_cst 0x7f09920ee048 32> bit offset <integer_cst 0x7f09920d2e28 32> context <record_type 0x7f0991c1f5e8 stat> chain <field_decl 0x7f0991c20688 st_rdev>>>
    test.c:156:12 start: test.c:156:12 finish: test.c:156:12>
mappinggggggggggggggggggg22gggggggggggg-------
------------------------------
# VUSE <.MEM_98>
_54 = s.st_uid;
 <component_ref 0x7f09920d1c30
    type <integer_type 0x7f0991c1f1f8 __uid_t unsigned SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e6690 precision 32 min <integer_cst 0x7f09920d2e58 0> max <integer_cst 0x7f09920d2e10 4294967295> context <translation_unit_decl 0x7f09920dd168 test.c>>
   
    arg 0 <var_decl 0x7f0991c48750 s
        type <record_type 0x7f0991c1f5e8 stat BLK
            size <integer_cst 0x7f0991c1a498 constant 1152>
            unit size <integer_cst 0x7f0991c1a528 constant 144>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c1f5e8 fields <field_decl 0x7f0991c20ab0 st_dev> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c22348> chain <type_decl 0x7f0991c20b48 D.4031>>
        addressable used BLK file test.c line 124 col 15 size <integer_cst 0x7f0991c1a498 1152> unit size <integer_cst 0x7f0991c1a528 144>
        align 128 context <function_decl 0x7f0991c18b00 main> abstract_origin <var_decl 0x7f0991c3e990 s>
        chain <var_decl 0x7f0991c487e0 ret type <integer_type 0x7f09920e65e8 int>
            used SI file test.c line 125 col 7 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
            align 32 context <function_decl 0x7f0991c18b00 main> abstract_origin <var_decl 0x7f0991c42f30 ret>>>
    arg 1 <field_decl 0x7f0991c20850 st_uid type <integer_type 0x7f0991c1f1f8 __uid_t>
        unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 44 col 13 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
        align 32 offset_align 128
        offset <integer_cst 0x7f09920d2c48 constant 16>
        bit offset <integer_cst 0x7f0991c1a510 constant 96> context <record_type 0x7f0991c1f5e8 stat>
        chain <field_decl 0x7f0991c207b8 st_gid type <integer_type 0x7f0991c1f150 __gid_t>
            unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 45 col 13 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
            align 32 offset_align 128
            offset <integer_cst 0x7f09920ee048 constant 32>
            bit offset <integer_cst 0x7f09920d2c60 constant 0> context <record_type 0x7f0991c1f5e8 stat> chain <field_decl 0x7f0991c20720 __pad0>>>
    test.c:156:12 start: test.c:156:12 finish: test.c:156:12>
mappinggggggggggggggggggg22gggggggggggg-------
------------------------------
# VUSE <.MEM_99>
_56 = s.st_mode;
 <component_ref 0x7f09920d1c90
    type <integer_type 0x7f0991c1f2a0 __mode_t unsigned SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e6690 precision 32 min <integer_cst 0x7f09920d2e58 0> max <integer_cst 0x7f09920d2e10 4294967295> context <translation_unit_decl 0x7f09920dd168 test.c>>
   
    arg 0 <var_decl 0x7f0991c48750 s
        type <record_type 0x7f0991c1f5e8 stat BLK
            size <integer_cst 0x7f0991c1a498 constant 1152>
            unit size <integer_cst 0x7f0991c1a528 constant 144>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c1f5e8 fields <field_decl 0x7f0991c20ab0 st_dev> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c22348> chain <type_decl 0x7f0991c20b48 D.4031>>
        addressable used BLK file test.c line 124 col 15 size <integer_cst 0x7f0991c1a498 1152> unit size <integer_cst 0x7f0991c1a528 144>
        align 128 context <function_decl 0x7f0991c18b00 main> abstract_origin <var_decl 0x7f0991c3e990 s>
        chain <var_decl 0x7f0991c487e0 ret type <integer_type 0x7f09920e65e8 int>
            used SI file test.c line 125 col 7 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
            align 32 context <function_decl 0x7f0991c18b00 main> abstract_origin <var_decl 0x7f0991c42f30 ret>>>
    arg 1 <field_decl 0x7f0991c208e8 st_mode type <integer_type 0x7f0991c1f2a0 __mode_t>
        unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 42 col 14 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
        align 32 offset_align 128
        offset <integer_cst 0x7f09920d2c48 constant 16>
        bit offset <integer_cst 0x7f09920d2be8 constant 64> context <record_type 0x7f0991c1f5e8 stat>
        chain <field_decl 0x7f0991c20850 st_uid type <integer_type 0x7f0991c1f1f8 __uid_t>
            unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 44 col 13 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
            align 32 offset_align 128 offset <integer_cst 0x7f09920d2c48 16>
            bit offset <integer_cst 0x7f0991c1a510 constant 96> context <record_type 0x7f0991c1f5e8 stat> chain <field_decl 0x7f0991c207b8 st_gid>>>
    test.c:157:15 start: test.c:157:15 finish: test.c:157:15>
mappinggggggggggggggggggg22gggggggggggg-------
------------------------------
_57 = _56 & 4095;
 <ssa_name 0x7f0991c4c990
    type <integer_type 0x7f09920e6690 unsigned int public unsigned SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e6690 precision 32 min <integer_cst 0x7f09920d2e58 0> max <integer_cst 0x7f09920d2e10 4294967295>
        pointer_to_this <pointer_type 0x7f09920f2888>>
   
    def_stmt _56 = s.st_mode;
    version 56>
 <string_cst 0x7f09920d1a50
    type <array_type 0x7f0991c25bd0
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        BLK
        size <integer_cst 0x7f0991c1a690 constant 184>
        unit size <integer_cst 0x7f0991c1a678 constant 23>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7f0991c25b28 type <integer_type 0x7f09920e6000 sizetype>
            DI
            size <integer_cst 0x7f09920d2be8 constant 64>
            unit size <integer_cst 0x7f09920d2c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7f09920e6738 precision 64 min <integer_cst 0x7f09920d2c18 0> max <integer_cst 0x7f0991c1a660 22>>
        pointer_to_this <pointer_type 0x7f0991c25c78>>
    readonly constant static "unable to rename '%s';\000">
------------------------------
_102 = ret_59;
 <ssa_name 0x7f0991c4ca68
    type <integer_type 0x7f09920e65e8 int public SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e65e8 precision 32 min <integer_cst 0x7f09920d2de0 -2147483648> max <integer_cst 0x7f09920d2df8 2147483647>
        pointer_to_this <pointer_type 0x7f09920eda80>>
    var <var_decl 0x7f0991c487e0 ret>
    def_stmt ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
    version 59>
------------------------------
_16 = _102;
 <ssa_name 0x7f0991c53ab0
    type <integer_type 0x7f09920e65e8 int public SI
        size <integer_cst 0x7f09920d2e28 constant 32>
        unit size <integer_cst 0x7f09920d2e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f09920e65e8 precision 32 min <integer_cst 0x7f09920d2de0 -2147483648> max <integer_cst 0x7f09920d2df8 2147483647>
        pointer_to_this <pointer_type 0x7f09920eda80>>
    var <var_decl 0x7f0991c48870 D.4139>
    def_stmt _102 = ret_59;
    version 102>
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
qwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqw-1dqwdqwdqwdqwd
max expan 1   13--------GIMPLE goto -------
# VUSE <.MEM_74>
slash_22 = strrchr (old_name_8, 47);
max expan 2   2--------GIMPLE goto -------
_23 = (long int) slash_22;
GIMPLE ASSIGN
_23 = (long int) slash_22;
max expan 3   1_25 = _23 - _24;
--------GIMPLE goto -------
_25 = _23 - _24;
GIMPLE ASSIGN
_25 = _23 - _24;
max expan 4   1len_26 = (size_t) _25;
--------GIMPLE goto -------
len_26 = (size_t) _25;
GIMPLE ASSIGN
len_26 = (size_t) _25;
max expan 5   4--------GIMPLE goto -------
_30 = tmpname_28 + len_26;
GIMPLE ASSIGN
_30 = tmpname_28 + len_26;
max expan 6   1# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
--------GIMPLE goto -------
# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
GIMPLE ASSIGN
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
_30 = tmpname_28 + len_26;
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
len_29 = len_26 + 1;
GIMPLE ASSIGN
len_29 = len_26 + 1;
max expan 7   1len_33 = PHI <len_29(3), 0(4)>
--------GIMPLE goto -------
len_33 = PHI <len_29(3), 0(4)>
tewtw
max expan 8   1_34 = tmpname_32 + len_33;
--------GIMPLE goto -------
_34 = tmpname_32 + len_33;
GIMPLE ASSIGN
_34 = tmpname_32 + len_33;
max expan 9   1# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
--------GIMPLE goto -------
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
_34 = tmpname_32 + len_33;
[40;41m =======recursive_stmt========= [0m
len_29 = len_26 + 1;
--------GIMPLE goto -------
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
--------GIMPLE goto -------
_27 = len_26 + 11;
GIMPLE ASSIGN
_27 = len_26 + 11;
max expan 10   1# .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
--------GIMPLE goto -------
# .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
_27 = len_26 + 11;
len_26 = (size_t) _25;
_25 = _23 - _24;
_23 = (long int) slash_22;
--------GIMPLE goto -------
if (slash_22 != 0B)
if (slash_22 != 0B)
--------GIMPLE goto -------
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
max expan 11   0--------GIMPLE goto -------
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
--------GIMPLE goto -------
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
max expan 12   1if (_55 >= 0)
--------GIMPLE goto -------
if (_55 >= 0)
if (_55 >= 0)
--------GIMPLE goto -------
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
--------GIMPLE goto -------
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
max expan 13   5--------GIMPLE goto -------
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
tewtw
max expan 14   1_102 = ret_59;
--------GIMPLE goto -------
_102 = ret_59;
GIMPLE ASSIGN
_102 = ret_59;
max expan 15   1_16 = _102;
--------GIMPLE goto -------
_16 = _102;
GIMPLE ASSIGN
_16 = _102;
max expan 16   1if (_16 != 0)
--------GIMPLE goto -------
if (_16 != 0)
if (_16 != 0)
_16 = _102;
_102 = ret_59;
--------GIMPLE goto -------
if (ret_50 == 0)
if (ret_50 == 0)
--------GIMPLE goto -------
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
max expan 17   3--------GIMPLE goto -------
if (_44 == 0)
if (_44 == 0)
--------GIMPLE goto -------
if (_44 != 0)
if (_44 != 0)
--------GIMPLE goto -------
_45 = _44 == 0;
GIMPLE ASSIGN
_45 = _44 == 0;
max expan 18   1exists_46 = (bfd_boolean) _45;
--------GIMPLE goto -------
exists_46 = (bfd_boolean) _45;
GIMPLE ASSIGN
exists_46 = (bfd_boolean) _45;
max expan 19   0exists_46 = (bfd_boolean) _45;
_45 = _44 == 0;
--------GIMPLE goto -------
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
--------GIMPLE goto -------
_24 = (long int) old_name_8;
GIMPLE ASSIGN
_24 = (long int) old_name_8;
max expan 20   1_25 = _23 - _24;
--------GIMPLE goto -------
_25 = _23 - _24;
GIMPLE ASSIGN
_25 = _23 - _24;
_25 = _23 - _24;
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
_24 = (long int) old_name_8;
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
--------GIMPLE goto -------
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
max expan 21   0--------GIMPLE goto -------
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
max expan 22   0--------GIMPLE goto -------
# .MEM_74 = VDEF <.MEM_72>
strcpy (old_name_8, _9);
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
qwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqw-1dqwdqwdqwdqwd
max expan 1   3--------GIMPLE goto -------
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
tewtw
max expan 2   3--------GIMPLE goto -------
_80 = tmpname_32;
GIMPLE ASSIGN
_80 = tmpname_32;
max expan 3   1tmpname_17 = _80;
--------GIMPLE goto -------
tmpname_17 = _80;
GIMPLE ASSIGN
tmpname_17 = _80;
max expan 4   3--------GIMPLE goto -------
_19 = PHI <0B(6), tmpname_17(7)>
tewtw
max expan 5   1_84 = _19;
--------GIMPLE goto -------
_84 = _19;
GIMPLE ASSIGN
_84 = _19;
max expan 6   1new_name_10 = _84;
--------GIMPLE goto -------
new_name_10 = _84;
GIMPLE ASSIGN
new_name_10 = _84;
max expan 7   5--------GIMPLE goto -------
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
--------GIMPLE goto -------
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
--------GIMPLE goto -------
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
max expan 8   5--------GIMPLE goto -------
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
tewtw
max expan 9   1_102 = ret_59;
--------GIMPLE goto -------
_102 = ret_59;
GIMPLE ASSIGN
_102 = ret_59;
max expan 10   1_16 = _102;
--------GIMPLE goto -------
_16 = _102;
GIMPLE ASSIGN
_16 = _102;
max expan 11   1if (_16 != 0)
--------GIMPLE goto -------
if (_16 != 0)
if (_16 != 0)
_16 = _102;
_102 = ret_59;
--------GIMPLE goto -------
if (ret_50 == 0)
if (ret_50 == 0)
max expan 12   13--------GIMPLE goto -------
# VUSE <.MEM_74>
slash_22 = strrchr (old_name_8, 47);
max expan 13   2--------GIMPLE goto -------
_23 = (long int) slash_22;
GIMPLE ASSIGN
_23 = (long int) slash_22;
max expan 14   1_25 = _23 - _24;
--------GIMPLE goto -------
_25 = _23 - _24;
GIMPLE ASSIGN
_25 = _23 - _24;
max expan 15   1len_26 = (size_t) _25;
--------GIMPLE goto -------
len_26 = (size_t) _25;
GIMPLE ASSIGN
len_26 = (size_t) _25;
max expan 16   4--------GIMPLE goto -------
_30 = tmpname_28 + len_26;
GIMPLE ASSIGN
_30 = tmpname_28 + len_26;
max expan 17   1# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
--------GIMPLE goto -------
# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
GIMPLE ASSIGN
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
_30 = tmpname_28 + len_26;
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
len_29 = len_26 + 1;
GIMPLE ASSIGN
len_29 = len_26 + 1;
max expan 18   1len_33 = PHI <len_29(3), 0(4)>
--------GIMPLE goto -------
len_33 = PHI <len_29(3), 0(4)>
tewtw
max expan 19   1_34 = tmpname_32 + len_33;
--------GIMPLE goto -------
_34 = tmpname_32 + len_33;
GIMPLE ASSIGN
_34 = tmpname_32 + len_33;
max expan 20   1# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
--------GIMPLE goto -------
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
_34 = tmpname_32 + len_33;
len_29 = len_26 + 1;
--------GIMPLE goto -------
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
--------GIMPLE goto -------
_27 = len_26 + 11;
GIMPLE ASSIGN
_27 = len_26 + 11;
max expan 21   1# .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
--------GIMPLE goto -------
# .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
_27 = len_26 + 11;
len_26 = (size_t) _25;
_25 = _23 - _24;
_23 = (long int) slash_22;
--------GIMPLE goto -------
if (slash_22 != 0B)
if (slash_22 != 0B)
--------GIMPLE goto -------
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
max expan 22   0--------GIMPLE goto -------
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
--------GIMPLE goto -------
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
max expan 23   1if (_55 >= 0)
--------GIMPLE goto -------
if (_55 >= 0)
if (_55 >= 0)
--------GIMPLE goto -------
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
--------GIMPLE goto -------
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
--------GIMPLE goto -------
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
max expan 24   3--------GIMPLE goto -------
if (_44 == 0)
if (_44 == 0)
--------GIMPLE goto -------
if (_44 != 0)
if (_44 != 0)
--------GIMPLE goto -------
_45 = _44 == 0;
GIMPLE ASSIGN
_45 = _44 == 0;
max expan 25   1exists_46 = (bfd_boolean) _45;
--------GIMPLE goto -------
exists_46 = (bfd_boolean) _45;
GIMPLE ASSIGN
exists_46 = (bfd_boolean) _45;
max expan 26   0exists_46 = (bfd_boolean) _45;
_45 = _44 == 0;
--------GIMPLE goto -------
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
--------GIMPLE goto -------
_24 = (long int) old_name_8;
GIMPLE ASSIGN
_24 = (long int) old_name_8;
max expan 27   1_25 = _23 - _24;
--------GIMPLE goto -------
_25 = _23 - _24;
GIMPLE ASSIGN
_25 = _23 - _24;
_25 = _23 - _24;
_24 = (long int) old_name_8;
--------GIMPLE goto -------
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
--------GIMPLE goto -------
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
max expan 28   0--------GIMPLE goto -------
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
max expan 29   0--------GIMPLE goto -------
# .MEM_74 = VDEF <.MEM_72>
strcpy (old_name_8, _9);
--------GIMPLE goto -------
# VUSE <.MEM_69>
_36 = MEM[(int *)new_name_10];
GIMPLE ASSIGN
# VUSE <.MEM_69>
_36 = MEM[(int *)new_name_10];
max expan 30   1# .MEM_85 = VDEF <.MEM_69>
_37 = __printf_chk (1, "%d\n", _36);
--------GIMPLE goto -------
# .MEM_85 = VDEF <.MEM_69>
_37 = __printf_chk (1, "%d\n", _36);
max expan 31   0# VUSE <.MEM_69>
_36 = MEM[(int *)new_name_10];
--------GIMPLE goto -------
if (new_name_10 == 0B)
if (new_name_10 == 0B)
new_name_10 = _84;
_84 = _19;
--------GIMPLE goto -------
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
--------GIMPLE goto -------
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);
max expan 32   2--------GIMPLE goto -------
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
--------GIMPLE goto -------
if (fd_18 == -1)
if (fd_18 == -1)
tmpname_17 = _80;
_80 = tmpname_32;
--------GIMPLE goto -------
_35 = tmpname_32;
GIMPLE ASSIGN
_35 = tmpname_32;
max expan 33   0_35 = tmpname_32;
--------GIMPLE goto -------
_34 = tmpname_32 + len_33;
GIMPLE ASSIGN
_34 = tmpname_32 + len_33;
_34 = tmpname_32 + len_33;
--------GIMPLE goto -------
_30 = tmpname_28 + len_26;
GIMPLE ASSIGN
_30 = tmpname_28 + len_26;
[40;41m =======recursive_stmt========= [0m
_30 = tmpname_28 + len_26;
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
qwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqw-1dqwdqwdqwdqwd
max expan 1   1tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
--------GIMPLE goto -------
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
tewtw
max expan 2   3--------GIMPLE goto -------
_80 = tmpname_32;
GIMPLE ASSIGN
_80 = tmpname_32;
max expan 3   1tmpname_17 = _80;
--------GIMPLE goto -------
tmpname_17 = _80;
GIMPLE ASSIGN
tmpname_17 = _80;
max expan 4   3--------GIMPLE goto -------
_19 = PHI <0B(6), tmpname_17(7)>
tewtw
max expan 5   1_84 = _19;
--------GIMPLE goto -------
_84 = _19;
GIMPLE ASSIGN
_84 = _19;
max expan 6   1new_name_10 = _84;
--------GIMPLE goto -------
new_name_10 = _84;
GIMPLE ASSIGN
new_name_10 = _84;
max expan 7   5--------GIMPLE goto -------
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
--------GIMPLE goto -------
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
--------GIMPLE goto -------
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
max expan 8   5--------GIMPLE goto -------
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
tewtw
max expan 9   1_102 = ret_59;
--------GIMPLE goto -------
_102 = ret_59;
GIMPLE ASSIGN
_102 = ret_59;
max expan 10   1_16 = _102;
--------GIMPLE goto -------
_16 = _102;
GIMPLE ASSIGN
_16 = _102;
max expan 11   1if (_16 != 0)
--------GIMPLE goto -------
if (_16 != 0)
if (_16 != 0)
_16 = _102;
_102 = ret_59;
--------GIMPLE goto -------
if (ret_50 == 0)
if (ret_50 == 0)
max expan 12   13--------GIMPLE goto -------
# VUSE <.MEM_74>
slash_22 = strrchr (old_name_8, 47);
max expan 13   2--------GIMPLE goto -------
_23 = (long int) slash_22;
GIMPLE ASSIGN
_23 = (long int) slash_22;
max expan 14   1_25 = _23 - _24;
--------GIMPLE goto -------
_25 = _23 - _24;
GIMPLE ASSIGN
_25 = _23 - _24;
max expan 15   1len_26 = (size_t) _25;
--------GIMPLE goto -------
len_26 = (size_t) _25;
GIMPLE ASSIGN
len_26 = (size_t) _25;
max expan 16   4--------GIMPLE goto -------
_30 = tmpname_28 + len_26;
GIMPLE ASSIGN
_30 = tmpname_28 + len_26;
max expan 17   1# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
--------GIMPLE goto -------
# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
GIMPLE ASSIGN
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
_30 = tmpname_28 + len_26;
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
len_29 = len_26 + 1;
GIMPLE ASSIGN
len_29 = len_26 + 1;
max expan 18   1len_33 = PHI <len_29(3), 0(4)>
--------GIMPLE goto -------
len_33 = PHI <len_29(3), 0(4)>
tewtw
max expan 19   1_34 = tmpname_32 + len_33;
--------GIMPLE goto -------
_34 = tmpname_32 + len_33;
GIMPLE ASSIGN
_34 = tmpname_32 + len_33;
max expan 20   1# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
--------GIMPLE goto -------
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
_34 = tmpname_32 + len_33;
len_29 = len_26 + 1;
--------GIMPLE goto -------
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
--------GIMPLE goto -------
_27 = len_26 + 11;
GIMPLE ASSIGN
_27 = len_26 + 11;
max expan 21   1# .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
--------GIMPLE goto -------
# .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
_27 = len_26 + 11;
len_26 = (size_t) _25;
_25 = _23 - _24;
_23 = (long int) slash_22;
--------GIMPLE goto -------
if (slash_22 != 0B)
if (slash_22 != 0B)
--------GIMPLE goto -------
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
max expan 22   0--------GIMPLE goto -------
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
--------GIMPLE goto -------
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
max expan 23   1if (_55 >= 0)
--------GIMPLE goto -------
if (_55 >= 0)
if (_55 >= 0)
--------GIMPLE goto -------
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
--------GIMPLE goto -------
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
--------GIMPLE goto -------
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
max expan 24   3--------GIMPLE goto -------
if (_44 == 0)
if (_44 == 0)
--------GIMPLE goto -------
if (_44 != 0)
if (_44 != 0)
--------GIMPLE goto -------
_45 = _44 == 0;
GIMPLE ASSIGN
_45 = _44 == 0;
max expan 25   1exists_46 = (bfd_boolean) _45;
--------GIMPLE goto -------
exists_46 = (bfd_boolean) _45;
GIMPLE ASSIGN
exists_46 = (bfd_boolean) _45;
max expan 26   0exists_46 = (bfd_boolean) _45;
_45 = _44 == 0;
--------GIMPLE goto -------
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
--------GIMPLE goto -------
_24 = (long int) old_name_8;
GIMPLE ASSIGN
_24 = (long int) old_name_8;
max expan 27   1_25 = _23 - _24;
--------GIMPLE goto -------
_25 = _23 - _24;
GIMPLE ASSIGN
_25 = _23 - _24;
_25 = _23 - _24;
_24 = (long int) old_name_8;
--------GIMPLE goto -------
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
--------GIMPLE goto -------
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
max expan 28   0--------GIMPLE goto -------
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
max expan 29   0--------GIMPLE goto -------
# .MEM_74 = VDEF <.MEM_72>
strcpy (old_name_8, _9);
--------GIMPLE goto -------
# VUSE <.MEM_69>
_36 = MEM[(int *)new_name_10];
GIMPLE ASSIGN
# VUSE <.MEM_69>
_36 = MEM[(int *)new_name_10];
max expan 30   1# .MEM_85 = VDEF <.MEM_69>
_37 = __printf_chk (1, "%d\n", _36);
--------GIMPLE goto -------
# .MEM_85 = VDEF <.MEM_69>
_37 = __printf_chk (1, "%d\n", _36);
max expan 31   0# VUSE <.MEM_69>
_36 = MEM[(int *)new_name_10];
--------GIMPLE goto -------
if (new_name_10 == 0B)
if (new_name_10 == 0B)
new_name_10 = _84;
_84 = _19;
--------GIMPLE goto -------
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
--------GIMPLE goto -------
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);
max expan 32   2--------GIMPLE goto -------
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
--------GIMPLE goto -------
if (fd_18 == -1)
if (fd_18 == -1)
tmpname_17 = _80;
_80 = tmpname_32;
--------GIMPLE goto -------
_35 = tmpname_32;
GIMPLE ASSIGN
_35 = tmpname_32;
max expan 33   0_35 = tmpname_32;
--------GIMPLE goto -------
_34 = tmpname_32 + len_33;
GIMPLE ASSIGN
_34 = tmpname_32 + len_33;
_34 = tmpname_32 + len_33;
 <ssa_name 0x7f0991c43900
    type <pointer_type 0x7f0991c17f18
        type <record_type 0x7f0991c17e70 bfd BLK
            size <integer_cst 0x7f099218bc30 constant 384>
            unit size <integer_cst 0x7f0991c1a480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c17d20 fields <field_decl 0x7f0991c197b8 filename> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c17f18> chain <type_decl 0x7f0991c19850 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0991c42990 nbfd>
    def_stmt nbfd_38 = malloc (48);
    version 38
    ptr-info 0x7f0991c345e8>
qwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqw-1dqwdqwdqwdqwd
max expan 1   2--------GIMPLE goto -------
_87 = nbfd_38;
GIMPLE ASSIGN
_87 = nbfd_38;
max expan 2   1obfd_12 = _87;
--------GIMPLE goto -------
obfd_12 = _87;
GIMPLE ASSIGN
obfd_12 = _87;
max expan 3   2--------GIMPLE goto -------
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
--------GIMPLE goto -------
if (obfd_12 == 0B)
if (obfd_12 == 0B)
obfd_12 = _87;
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
_87 = nbfd_38;
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
_39 = nbfd_38;
GIMPLE ASSIGN
_39 = nbfd_38;
max expan 4   0_39 = nbfd_38;
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
=======================================================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 16 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;33m =======POP node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m
 <function_decl 0x7f0991c18b00 main
    type <function_type 0x7f0991c177e0
        type <integer_type 0x7f09920e65e8 int public SI
            size <integer_cst 0x7f09920d2e28 constant 32>
            unit size <integer_cst 0x7f09920d2e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f09920e65e8 precision 32 min <integer_cst 0x7f09920d2de0 -2147483648> max <integer_cst 0x7f09920d2df8 2147483647>
            pointer_to_this <pointer_type 0x7f09920eda80>>
        QI
        size <integer_cst 0x7f09920d2cd8 constant 8>
        unit size <integer_cst 0x7f09920d2cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 241 col 5 align 8 context <translation_unit_decl 0x7f09920dd168 test.c> initial <block 0x7f0991c29060>
    result <result_decl 0x7f09920dd1e0 D.4060 type <integer_type 0x7f09920e65e8 int>
        ignored SI file test.c line 241 col 5 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
        align 32 context <function_decl 0x7f0991c18b00 main>>
    struct-function 0x7f0991c31000>
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>

dot graph START

======================================================================
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

slash_22 = strrchr (old_name_8, 47);
In function ‘main’:
test.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 2: slash_22 = strrchr (old_name_8, 47);
test.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start slash_22 = strrchr (old_name_8, 47);
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start slash_22 = strrchr (old_name_8, 47);
test.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph stmt end

this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_23 = (long int) slash_22;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 3: _23 = (long int) slash_22;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _23 = (long int) slash_22;
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _23 = (long int) slash_22;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_25 = _23 - _24;
test.c:51:19: warning: use location
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 3: _25 = _23 - _24;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _25 = _23 - _24;
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _25 = _23 - _24;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_26 = (size_t) _25;
test.c:51:11: warning: use location
       len = slash - path;
           ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 3: len_26 = (size_t) _25;
test.c:51:11: warning: use location
       len = slash - path;
           ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start len_26 = (size_t) _25;
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start len_26 = (size_t) _25;
test.c:51:11: warning: use location
       len = slash - path;
           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_30 = tmpname_28 + len_26;
test.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 3: _30 = tmpname_28 + len_26;
test.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _30 = tmpname_28 + len_26;
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _30 = tmpname_28 + len_26;
test.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_30 = 47;
test.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 3: *_30 = 47;
test.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start *_30 = 47;
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start *_30 = 47;
test.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_29 = len_26 + 1;
test.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 3: len_29 = len_26 + 1;
test.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start len_29 = len_26 + 1;
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start len_29 = len_26 + 1;
test.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_33 = PHI <len_29(3), 0(4)>
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---strrchr-----
dot graph entry main
dot graph target entry end

_34 = tmpname_32 + len_33;
test.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 5: _34 = tmpname_32 + len_33;
test.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _34 = tmpname_32 + len_33;
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _34 = tmpname_32 + len_33;
test.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

memcpy (_34, "stXXXXXX", 9);
test.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 5: memcpy (_34, "stXXXXXX", 9);
test.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start memcpy (_34, "stXXXXXX", 9);
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start memcpy (_34, "stXXXXXX", 9);
test.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

memcpy (tmpname_28, old_name_8, len_26);
test.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 3: memcpy (tmpname_28, old_name_8, len_26);
test.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start memcpy (tmpname_28, old_name_8, len_26);
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start memcpy (tmpname_28, old_name_8, len_26);
test.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_27 = len_26 + 11;
test.c:52:26: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
                          ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 3: _27 = len_26 + 11;
test.c:52:26: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
                          ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _27 = len_26 + 11;
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _27 = len_26 + 11;
test.c:52:26: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
                          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (slash_22 != 0B)
test.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 2: if (slash_22 != 0B)
test.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start if (slash_22 != 0B)
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start if (slash_22 != 0B)
test.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph stmt end

if (slash_22 != 0B)

 ================== find cond branch ================= 
if (slash_22 != 0B)
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 21: _58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (old_name_8, _57);
test.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 20: chmod (old_name_8, _57);
test.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start chmod (old_name_8, _57);
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start chmod (old_name_8, _57);
test.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_55 = chown (old_name_8, _54, _53);
test.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 19: _55 = chown (old_name_8, _54, _53);
test.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start _55 = chown (old_name_8, _54, _53);
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _55 = chown (old_name_8, _54, _53);
test.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph stmt end

this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (_55 >= 0)
test.c:156:11: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
           ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 19: if (_55 >= 0)
test.c:156:11: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
           ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start if (_55 >= 0)
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start if (_55 >= 0)
test.c:156:11: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
           ^
dot graph stmt end

if (_55 >= 0)

 ================== find cond branch ================= 
if (_55 >= 0)
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

chmod (old_name_8, _52);
test.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 19: chmod (old_name_8, _52);
test.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start chmod (old_name_8, _52);
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start chmod (old_name_8, _52);
test.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_50 = rename (new_name_10, old_name_8);
test.c:138:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 17: ret_50 = rename (new_name_10, old_name_8);
test.c:138:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start ret_50 = rename (new_name_10, old_name_8);
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start ret_50 = rename (new_name_10, old_name_8);
test.c:138:11: warning: use location
       ret = rename (from, to);
           ^
dot graph stmt end

this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 23: ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

dot graph stmt start ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---rename-----
dot graph entry main
dot graph target entry end

_102 = ret_59;
lto1: warning: use location
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 23: _102 = ret_59;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

dot graph stmt start _102 = ret_59;
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _102 = ret_59;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

_16 = _102;
test.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 23: _16 = _102;
test.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

dot graph stmt start _16 = _102;
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _16 = _102;
test.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_44 = lstat (old_name_8, &s);
test.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 14: _44 = lstat (old_name_8, &s);
test.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _44 = lstat (old_name_8, &s);
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _44 = lstat (old_name_8, &s);
test.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph stmt end

this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_45 = _44 == 0;
test.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 14: _45 = _44 == 0;
test.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _45 = _44 == 0;
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _45 = _44 == 0;
test.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

exists_46 = (bfd_boolean) _45;
test.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 14: exists_46 = (bfd_boolean) _45;
test.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start exists_46 = (bfd_boolean) _45;
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start exists_46 = (bfd_boolean) _45;
test.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_24 = (long int) old_name_8;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 3: _24 = (long int) old_name_8;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _24 = (long int) old_name_8;
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _24 = (long int) old_name_8;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

free (old_name_8);
test.c:237:3: warning: use location
   free (old_name);
   ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 25: free (old_name_8);
test.c:237:3: warning: use location
   free (old_name);
   ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 25dot graph target basicblock en1

dot graph stmt start free (old_name_8);
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start free (old_name_8);
test.c:237:3: warning: use location
   free (old_name);
   ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (old_name_8);
test.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

_15 = __printf_chk (1, "%s", old_name_8);
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 13: _15 = __printf_chk (1, "%s", old_name_8);
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 13dot graph target basicblock en1

dot graph stmt start _15 = __printf_chk (1, "%s", old_name_8);
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _15 = __printf_chk (1, "%s", old_name_8);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

_13 = __printf_chk (1, "%s", old_name_8);
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 11: _13 = __printf_chk (1, "%s", old_name_8);
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start _13 = __printf_chk (1, "%s", old_name_8);
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start _13 = __printf_chk (1, "%s", old_name_8);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

strcpy (old_name_8, _9);
test.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc en1

dot graph target line desc form basic block 2: strcpy (old_name_8, _9);
test.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
dot graph target line desend

dot graph target loc start # .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
test.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start strcpy (old_name_8, _9);
old_name_8 = malloc (_7);
dot graph stmt end

dot graph stmt start strcpy (old_name_8, _9);
test.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
dot graph stmt end

this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 
dot graph target basicblock start from main basic block 25dot graph target basicblock en1

dot graph arrowsubgraph cluster_2340997 dot graph subgraph  free (old_name_8);
old_name_8 = malloc (_7);
dot graph subgrapend

 <ssa_name 0x7f0991c3a438
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c37990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f0991c34468>

 ================== Start Use after free Check ================== 
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
test.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
test.c:237:3: warning: Use after free error!: free location 
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================

 <function_decl 0x7f0991c18b00 main
    type <function_type 0x7f0991c177e0
        type <integer_type 0x7f09920e65e8 int public SI
            size <integer_cst 0x7f09920d2e28 constant 32>
            unit size <integer_cst 0x7f09920d2e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f09920e65e8 precision 32 min <integer_cst 0x7f09920d2de0 -2147483648> max <integer_cst 0x7f09920d2df8 2147483647>
            pointer_to_this <pointer_type 0x7f09920eda80>>
        QI
        size <integer_cst 0x7f09920d2cd8 constant 8>
        unit size <integer_cst 0x7f09920d2cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 241 col 5 align 8 context <translation_unit_decl 0x7f09920dd168 test.c> initial <block 0x7f0991c29060>
    result <result_decl 0x7f09920dd1e0 D.4060 type <integer_type 0x7f09920e65e8 int>
        ignored SI file test.c line 241 col 5 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
        align 32 context <function_decl 0x7f0991c18b00 main>>
    struct-function 0x7f0991c31000>
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>

dot graph START

======================================================================
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_80 = tmpname_32;
lto1: warning: use location
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 5: _80 = tmpname_32;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _80 = tmpname_32;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _80 = tmpname_32;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_17 = _80;
test.c:72:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: tmpname_17 = _80;
test.c:72:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start tmpname_17 = _80;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start tmpname_17 = _80;
test.c:72:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 8: _19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start _19 = PHI <0B(6), tmpname_17(7)>
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_84 = _19;
lto1: warning: use location
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 8: _84 = _19;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start _84 = _19;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _84 = _19;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

new_name_10 = _84;
test.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 8: new_name_10 = _84;
test.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start new_name_10 = _84;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start new_name_10 = _84;
test.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^
dot graph stmt end

dot graph entry main
dot graph target entry end

unlink (new_name_10);
test.c:174:7: warning: use location
       unlink (from);
       ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 22: unlink (new_name_10);
test.c:174:7: warning: use location
       unlink (from);
       ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 22dot graph target basicblock en1

dot graph stmt start unlink (new_name_10);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start unlink (new_name_10);
test.c:174:7: warning: use location
       unlink (from);
       ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (new_name_10);
test.c:164:4: warning: use location
    unlink (from);
    ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: unlink (new_name_10);
test.c:164:4: warning: use location
    unlink (from);
    ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start unlink (new_name_10);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start unlink (new_name_10);
test.c:164:4: warning: use location
    unlink (from);
    ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_50 = rename (new_name_10, old_name_8);
test.c:138:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 17: ret_50 = rename (new_name_10, old_name_8);
test.c:138:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start ret_50 = rename (new_name_10, old_name_8);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start ret_50 = rename (new_name_10, old_name_8);
test.c:138:11: warning: use location
       ret = rename (from, to);
           ^
dot graph stmt end

this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 23: ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

dot graph stmt start ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---rename-----
dot graph entry main
dot graph target entry end

_102 = ret_59;
lto1: warning: use location
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 23: _102 = ret_59;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

dot graph stmt start _102 = ret_59;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _102 = ret_59;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

_16 = _102;
test.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 23: _16 = _102;
test.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

dot graph stmt start _16 = _102;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _16 = _102;
test.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (_16 != 0)
test.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 23: if (_16 != 0)
test.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

dot graph stmt start if (_16 != 0)
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start if (_16 != 0)
test.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^
dot graph stmt end

if (_16 != 0)

 ================== find cond branch ================= 
if (_16 != 0)
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

slash_22 = strrchr (old_name_8, 47);
test.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 2: slash_22 = strrchr (old_name_8, 47);
test.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start slash_22 = strrchr (old_name_8, 47);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start slash_22 = strrchr (old_name_8, 47);
test.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph stmt end

this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_23 = (long int) slash_22;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: _23 = (long int) slash_22;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _23 = (long int) slash_22;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _23 = (long int) slash_22;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_25 = _23 - _24;
test.c:51:19: warning: use location
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: _25 = _23 - _24;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _25 = _23 - _24;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _25 = _23 - _24;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_26 = (size_t) _25;
test.c:51:11: warning: use location
       len = slash - path;
           ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: len_26 = (size_t) _25;
test.c:51:11: warning: use location
       len = slash - path;
           ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start len_26 = (size_t) _25;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start len_26 = (size_t) _25;
test.c:51:11: warning: use location
       len = slash - path;
           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_30 = tmpname_28 + len_26;
test.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: _30 = tmpname_28 + len_26;
test.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _30 = tmpname_28 + len_26;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _30 = tmpname_28 + len_26;
test.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_30 = 47;
test.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: *_30 = 47;
test.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start *_30 = 47;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start *_30 = 47;
test.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_29 = len_26 + 1;
test.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: len_29 = len_26 + 1;
test.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start len_29 = len_26 + 1;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start len_29 = len_26 + 1;
test.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_33 = PHI <len_29(3), 0(4)>
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---strrchr-----
dot graph entry main
dot graph target entry end

_34 = tmpname_32 + len_33;
test.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _34 = tmpname_32 + len_33;
test.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _34 = tmpname_32 + len_33;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _34 = tmpname_32 + len_33;
test.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

memcpy (_34, "stXXXXXX", 9);
test.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: memcpy (_34, "stXXXXXX", 9);
test.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start memcpy (_34, "stXXXXXX", 9);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start memcpy (_34, "stXXXXXX", 9);
test.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

memcpy (tmpname_28, old_name_8, len_26);
test.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: memcpy (tmpname_28, old_name_8, len_26);
test.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start memcpy (tmpname_28, old_name_8, len_26);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start memcpy (tmpname_28, old_name_8, len_26);
test.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_27 = len_26 + 11;
test.c:52:26: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
                          ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: _27 = len_26 + 11;
test.c:52:26: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
                          ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _27 = len_26 + 11;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _27 = len_26 + 11;
test.c:52:26: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
                          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (slash_22 != 0B)
test.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 2: if (slash_22 != 0B)
test.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start if (slash_22 != 0B)
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start if (slash_22 != 0B)
test.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph stmt end

if (slash_22 != 0B)

 ================== find cond branch ================= 
if (slash_22 != 0B)
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (old_name_8, _57);
test.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 20: chmod (old_name_8, _57);
test.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start chmod (old_name_8, _57);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start chmod (old_name_8, _57);
test.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_55 = chown (old_name_8, _54, _53);
test.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 19: _55 = chown (old_name_8, _54, _53);
test.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start _55 = chown (old_name_8, _54, _53);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _55 = chown (old_name_8, _54, _53);
test.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph stmt end

this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (old_name_8, _52);
test.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 19: chmod (old_name_8, _52);
test.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start chmod (old_name_8, _52);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start chmod (old_name_8, _52);
test.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_44 = lstat (old_name_8, &s);
test.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 14: _44 = lstat (old_name_8, &s);
test.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _44 = lstat (old_name_8, &s);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _44 = lstat (old_name_8, &s);
test.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph stmt end

this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_45 = _44 == 0;
test.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 14: _45 = _44 == 0;
test.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _45 = _44 == 0;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _45 = _44 == 0;
test.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

exists_46 = (bfd_boolean) _45;
test.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 14: exists_46 = (bfd_boolean) _45;
test.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start exists_46 = (bfd_boolean) _45;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start exists_46 = (bfd_boolean) _45;
test.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_24 = (long int) old_name_8;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: _24 = (long int) old_name_8;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _24 = (long int) old_name_8;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _24 = (long int) old_name_8;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

free (old_name_8);
test.c:237:3: warning: use location
   free (old_name);
   ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 25: free (old_name_8);
test.c:237:3: warning: use location
   free (old_name);
   ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 25dot graph target basicblock en1

dot graph stmt start free (old_name_8);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start free (old_name_8);
test.c:237:3: warning: use location
   free (old_name);
   ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (old_name_8);
test.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

_15 = __printf_chk (1, "%s", old_name_8);
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 13: _15 = __printf_chk (1, "%s", old_name_8);
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 13dot graph target basicblock en1

dot graph stmt start _15 = __printf_chk (1, "%s", old_name_8);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _15 = __printf_chk (1, "%s", old_name_8);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

_13 = __printf_chk (1, "%s", old_name_8);
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 11: _13 = __printf_chk (1, "%s", old_name_8);
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start _13 = __printf_chk (1, "%s", old_name_8);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _13 = __printf_chk (1, "%s", old_name_8);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

strcpy (old_name_8, _9);
test.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 2: strcpy (old_name_8, _9);
test.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start strcpy (old_name_8, _9);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start strcpy (old_name_8, _9);
test.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
dot graph stmt end

this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

_36 = MEM[(int *)new_name_10];
test.c:187:2: warning: use location
  __USE(name);
  ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: _36 = MEM[(int *)new_name_10];
test.c:187:2: warning: use location
  __USE(name);
  ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _36 = MEM[(int *)new_name_10];
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _36 = MEM[(int *)new_name_10];
test.c:187:2: warning: use location
  __USE(name);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_37 = __printf_chk (1, "%d\n", _36);
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: _37 = __printf_chk (1, "%d\n", _36);
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _37 = __printf_chk (1, "%d\n", _36);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _37 = __printf_chk (1, "%d\n", _36);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

if (new_name_10 == 0B)
test.c:217:6: warning: use location
   if (new_name == NULL)
      ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 8: if (new_name_10 == 0B)
test.c:217:6: warning: use location
   if (new_name == NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start if (new_name_10 == 0B)
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start if (new_name_10 == 0B)
test.c:217:6: warning: use location
   if (new_name == NULL)
      ^
dot graph stmt end

if (new_name_10 == 0B)

 ================== find cond branch ================= 
if (new_name_10 == 0B)
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

free (tmpname_17);
test.c:78:7: warning: use location
       free (tmpname);
       ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 6: free (tmpname_17);
test.c:78:7: warning: use location
       free (tmpname);
       ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 6dot graph target basicblock en1

dot graph stmt start free (tmpname_17);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start free (tmpname_17);
test.c:78:7: warning: use location
       free (tmpname);
       ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (tmpname_17);
test.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

fd_18 = mkstemp (tmpname_17);
test.c:75:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: fd_18 = mkstemp (tmpname_17);
test.c:75:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start fd_18 = mkstemp (tmpname_17);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start fd_18 = mkstemp (tmpname_17);
test.c:75:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph stmt end

this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:2 
dot graph entry main
dot graph target entry end

close (fd_18);
test.c:81:3: warning: use location
   close (fd);
   ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: close (fd_18);
test.c:81:3: warning: use location
   close (fd);
   ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start close (fd_18);
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start close (fd_18);
test.c:81:3: warning: use location
   close (fd);
   ^
dot graph stmt end

this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:2 
dot graph entry main
dot graph target entry end

if (fd_18 == -1)
test.c:76:6: warning: use location
   if (fd == -1)
      ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: if (fd_18 == -1)
test.c:76:6: warning: use location
   if (fd == -1)
      ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start if (fd_18 == -1)
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start if (fd_18 == -1)
test.c:76:6: warning: use location
   if (fd == -1)
      ^
dot graph stmt end

if (fd_18 == -1)

 ================== find cond branch ================= 
if (fd_18 == -1)
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_35 = tmpname_32;
test.c:63:10: warning: use location
   return tmpname;
          ^
dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _35 = tmpname_32;
test.c:63:10: warning: use location
   return tmpname;
          ^
dot graph target line desend

dot graph target loc start # .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
test.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _35 = tmpname_32;
tmpname_28 = malloc (_27);
dot graph stmt end

dot graph stmt start _35 = tmpname_32;
test.c:63:10: warning: use location
   return tmpname;
          ^
dot graph stmt end

dot graph target basicblock start from main basic block 25dot graph target basicblock en1

dot graph arrowsubgraph cluster_1159460819 dot graph subgraph  free (old_name_8);
old_name_8 = malloc (_7);
dot graph subgrapend

 <ssa_name 0x7f0991c433a8
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f0991c34558>

 ================== Start Use after free Check ================== 
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
test.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
test.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
_84 = _19;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
new_name_10 = _84;
test.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
test.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
test.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
test.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
test.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
_16 = _102;
test.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
test.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
test.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
test.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
test.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
test.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
test.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
test.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
test.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
test.c:237:3: warning: use location
   free (old_name);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
# VUSE <.MEM_69>
_36 = MEM[(int *)new_name_10];
test.c:187:2: warning: use location
  __USE(name);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_85 = VDEF <.MEM_69>
_37 = __printf_chk (1, "%d\n", _36);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
if (new_name_10 == 0B)
test.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
test.c:81:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================
 <function_decl 0x7f0991c18b00 main
    type <function_type 0x7f0991c177e0
        type <integer_type 0x7f09920e65e8 int public SI
            size <integer_cst 0x7f09920d2e28 constant 32>
            unit size <integer_cst 0x7f09920d2e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f09920e65e8 precision 32 min <integer_cst 0x7f09920d2de0 -2147483648> max <integer_cst 0x7f09920d2df8 2147483647>
            pointer_to_this <pointer_type 0x7f09920eda80>>
        QI
        size <integer_cst 0x7f09920d2cd8 constant 8>
        unit size <integer_cst 0x7f09920d2cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 241 col 5 align 8 context <translation_unit_decl 0x7f09920dd168 test.c> initial <block 0x7f0991c29060>
    result <result_decl 0x7f09920dd1e0 D.4060 type <integer_type 0x7f09920e65e8 int>
        ignored SI file test.c line 241 col 5 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
        align 32 context <function_decl 0x7f0991c18b00 main>>
    struct-function 0x7f0991c31000>
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>

dot graph START

======================================================================
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_80 = tmpname_32;
lto1: warning: use location
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 5: _80 = tmpname_32;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _80 = tmpname_32;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _80 = tmpname_32;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_17 = _80;
test.c:72:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: tmpname_17 = _80;
test.c:72:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start tmpname_17 = _80;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start tmpname_17 = _80;
test.c:72:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 8: _19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start _19 = PHI <0B(6), tmpname_17(7)>
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_84 = _19;
lto1: warning: use location
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 8: _84 = _19;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start _84 = _19;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _84 = _19;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

new_name_10 = _84;
test.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 8: new_name_10 = _84;
test.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start new_name_10 = _84;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start new_name_10 = _84;
test.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^
dot graph stmt end

dot graph entry main
dot graph target entry end

unlink (new_name_10);
test.c:174:7: warning: use location
       unlink (from);
       ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 22: unlink (new_name_10);
test.c:174:7: warning: use location
       unlink (from);
       ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 22dot graph target basicblock en1

dot graph stmt start unlink (new_name_10);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start unlink (new_name_10);
test.c:174:7: warning: use location
       unlink (from);
       ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (new_name_10);
test.c:164:4: warning: use location
    unlink (from);
    ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: unlink (new_name_10);
test.c:164:4: warning: use location
    unlink (from);
    ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start unlink (new_name_10);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start unlink (new_name_10);
test.c:164:4: warning: use location
    unlink (from);
    ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_50 = rename (new_name_10, old_name_8);
test.c:138:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 17: ret_50 = rename (new_name_10, old_name_8);
test.c:138:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start ret_50 = rename (new_name_10, old_name_8);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start ret_50 = rename (new_name_10, old_name_8);
test.c:138:11: warning: use location
       ret = rename (from, to);
           ^
dot graph stmt end

this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 23: ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

dot graph stmt start ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---rename-----
dot graph entry main
dot graph target entry end

_102 = ret_59;
lto1: warning: use location
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 23: _102 = ret_59;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

dot graph stmt start _102 = ret_59;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _102 = ret_59;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

_16 = _102;
test.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 23: _16 = _102;
test.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

dot graph stmt start _16 = _102;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _16 = _102;
test.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (_16 != 0)
test.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 23: if (_16 != 0)
test.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

dot graph stmt start if (_16 != 0)
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start if (_16 != 0)
test.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^
dot graph stmt end

if (_16 != 0)

 ================== find cond branch ================= 
if (_16 != 0)
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

slash_22 = strrchr (old_name_8, 47);
test.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 2: slash_22 = strrchr (old_name_8, 47);
test.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start slash_22 = strrchr (old_name_8, 47);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start slash_22 = strrchr (old_name_8, 47);
test.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph stmt end

this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_23 = (long int) slash_22;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: _23 = (long int) slash_22;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _23 = (long int) slash_22;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _23 = (long int) slash_22;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_25 = _23 - _24;
test.c:51:19: warning: use location
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: _25 = _23 - _24;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _25 = _23 - _24;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _25 = _23 - _24;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_26 = (size_t) _25;
test.c:51:11: warning: use location
       len = slash - path;
           ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: len_26 = (size_t) _25;
test.c:51:11: warning: use location
       len = slash - path;
           ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start len_26 = (size_t) _25;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start len_26 = (size_t) _25;
test.c:51:11: warning: use location
       len = slash - path;
           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_30 = tmpname_28 + len_26;
test.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: _30 = tmpname_28 + len_26;
test.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _30 = tmpname_28 + len_26;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _30 = tmpname_28 + len_26;
test.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_30 = 47;
test.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: *_30 = 47;
test.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start *_30 = 47;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start *_30 = 47;
test.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_29 = len_26 + 1;
test.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: len_29 = len_26 + 1;
test.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start len_29 = len_26 + 1;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start len_29 = len_26 + 1;
test.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_33 = PHI <len_29(3), 0(4)>
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---strrchr-----
dot graph entry main
dot graph target entry end

_34 = tmpname_32 + len_33;
test.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _34 = tmpname_32 + len_33;
test.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _34 = tmpname_32 + len_33;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _34 = tmpname_32 + len_33;
test.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

memcpy (_34, "stXXXXXX", 9);
test.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: memcpy (_34, "stXXXXXX", 9);
test.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start memcpy (_34, "stXXXXXX", 9);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start memcpy (_34, "stXXXXXX", 9);
test.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

memcpy (tmpname_28, old_name_8, len_26);
test.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: memcpy (tmpname_28, old_name_8, len_26);
test.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start memcpy (tmpname_28, old_name_8, len_26);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start memcpy (tmpname_28, old_name_8, len_26);
test.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_27 = len_26 + 11;
test.c:52:26: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
                          ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: _27 = len_26 + 11;
test.c:52:26: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
                          ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _27 = len_26 + 11;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _27 = len_26 + 11;
test.c:52:26: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
                          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (slash_22 != 0B)
test.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 2: if (slash_22 != 0B)
test.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start if (slash_22 != 0B)
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start if (slash_22 != 0B)
test.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph stmt end

if (slash_22 != 0B)

 ================== find cond branch ================= 
if (slash_22 != 0B)
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (old_name_8, _57);
test.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 20: chmod (old_name_8, _57);
test.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start chmod (old_name_8, _57);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start chmod (old_name_8, _57);
test.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_55 = chown (old_name_8, _54, _53);
test.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 19: _55 = chown (old_name_8, _54, _53);
test.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start _55 = chown (old_name_8, _54, _53);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _55 = chown (old_name_8, _54, _53);
test.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph stmt end

this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (old_name_8, _52);
test.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 19: chmod (old_name_8, _52);
test.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start chmod (old_name_8, _52);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start chmod (old_name_8, _52);
test.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_44 = lstat (old_name_8, &s);
test.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 14: _44 = lstat (old_name_8, &s);
test.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _44 = lstat (old_name_8, &s);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _44 = lstat (old_name_8, &s);
test.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph stmt end

this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_45 = _44 == 0;
test.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 14: _45 = _44 == 0;
test.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start _45 = _44 == 0;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _45 = _44 == 0;
test.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

exists_46 = (bfd_boolean) _45;
test.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 14: exists_46 = (bfd_boolean) _45;
test.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start exists_46 = (bfd_boolean) _45;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start exists_46 = (bfd_boolean) _45;
test.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_24 = (long int) old_name_8;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 3: _24 = (long int) old_name_8;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _24 = (long int) old_name_8;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _24 = (long int) old_name_8;
test.c:51:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

free (old_name_8);
test.c:237:3: warning: use location
   free (old_name);
   ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 25: free (old_name_8);
test.c:237:3: warning: use location
   free (old_name);
   ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 25dot graph target basicblock en1

dot graph stmt start free (old_name_8);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start free (old_name_8);
test.c:237:3: warning: use location
   free (old_name);
   ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (old_name_8);
test.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

_15 = __printf_chk (1, "%s", old_name_8);
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 13: _15 = __printf_chk (1, "%s", old_name_8);
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 13dot graph target basicblock en1

dot graph stmt start _15 = __printf_chk (1, "%s", old_name_8);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _15 = __printf_chk (1, "%s", old_name_8);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

_13 = __printf_chk (1, "%s", old_name_8);
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 11: _13 = __printf_chk (1, "%s", old_name_8);
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start _13 = __printf_chk (1, "%s", old_name_8);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _13 = __printf_chk (1, "%s", old_name_8);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

strcpy (old_name_8, _9);
test.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 2: strcpy (old_name_8, _9);
test.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start strcpy (old_name_8, _9);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start strcpy (old_name_8, _9);
test.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
dot graph stmt end

this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

_36 = MEM[(int *)new_name_10];
test.c:187:2: warning: use location
  __USE(name);
  ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: _36 = MEM[(int *)new_name_10];
test.c:187:2: warning: use location
  __USE(name);
  ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _36 = MEM[(int *)new_name_10];
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _36 = MEM[(int *)new_name_10];
test.c:187:2: warning: use location
  __USE(name);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_37 = __printf_chk (1, "%d\n", _36);
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: _37 = __printf_chk (1, "%d\n", _36);
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _37 = __printf_chk (1, "%d\n", _36);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _37 = __printf_chk (1, "%d\n", _36);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

if (new_name_10 == 0B)
test.c:217:6: warning: use location
   if (new_name == NULL)
      ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 8: if (new_name_10 == 0B)
test.c:217:6: warning: use location
   if (new_name == NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start if (new_name_10 == 0B)
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start if (new_name_10 == 0B)
test.c:217:6: warning: use location
   if (new_name == NULL)
      ^
dot graph stmt end

if (new_name_10 == 0B)

 ================== find cond branch ================= 
if (new_name_10 == 0B)
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

free (tmpname_17);
test.c:78:7: warning: use location
       free (tmpname);
       ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 6: free (tmpname_17);
test.c:78:7: warning: use location
       free (tmpname);
       ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 6dot graph target basicblock en1

dot graph stmt start free (tmpname_17);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start free (tmpname_17);
test.c:78:7: warning: use location
       free (tmpname);
       ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (tmpname_17);
test.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

fd_18 = mkstemp (tmpname_17);
test.c:75:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: fd_18 = mkstemp (tmpname_17);
test.c:75:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start fd_18 = mkstemp (tmpname_17);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start fd_18 = mkstemp (tmpname_17);
test.c:75:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph stmt end

this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:2 
dot graph entry main
dot graph target entry end

close (fd_18);
test.c:81:3: warning: use location
   close (fd);
   ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: close (fd_18);
test.c:81:3: warning: use location
   close (fd);
   ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start close (fd_18);
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start close (fd_18);
test.c:81:3: warning: use location
   close (fd);
   ^
dot graph stmt end

this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:2 
dot graph entry main
dot graph target entry end

if (fd_18 == -1)
test.c:76:6: warning: use location
   if (fd == -1)
      ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: if (fd_18 == -1)
test.c:76:6: warning: use location
   if (fd == -1)
      ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start if (fd_18 == -1)
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start if (fd_18 == -1)
test.c:76:6: warning: use location
   if (fd == -1)
      ^
dot graph stmt end

if (fd_18 == -1)

 ================== find cond branch ================= 
if (fd_18 == -1)
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_35 = tmpname_32;
test.c:63:10: warning: use location
   return tmpname;
          ^
dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _35 = tmpname_32;
test.c:63:10: warning: use location
   return tmpname;
          ^
dot graph target line desend

dot graph target loc start # .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
test.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _35 = tmpname_32;
tmpname_31 = malloc (9);
dot graph stmt end

dot graph stmt start _35 = tmpname_32;
test.c:63:10: warning: use location
   return tmpname;
          ^
dot graph stmt end

dot graph target basicblock start from main basic block 25dot graph target basicblock en1

dot graph arrowsubgraph cluster_285469488 dot graph subgraph  free (old_name_8);
old_name_8 = malloc (_7);
dot graph subgrapend

 <ssa_name 0x7f0991c43480
    type <pointer_type 0x7f0991c17930
        type <integer_type 0x7f0991c17888 char public string-flag QI
            size <integer_cst 0x7f09920d2cd8 constant 8>
            unit size <integer_cst 0x7f09920d2cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f09920e63f0 precision 8 min <integer_cst 0x7f0991c1a180 -128> max <integer_cst 0x7f0991c1a168 127>
            pointer_to_this <pointer_type 0x7f0991c17930>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f09920dd168 test.c>>
    var <var_decl 0x7f0991c423f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f0991c34588>

 ================== Start Use after free Check ================== 
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
test.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
test.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
_84 = _19;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
new_name_10 = _84;
test.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
test.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
test.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
test.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
test.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
_16 = _102;
test.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
test.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
test.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
test.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
test.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
test.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
test.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
test.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
test.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
test.c:237:3: warning: use location
   free (old_name);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
# VUSE <.MEM_69>
_36 = MEM[(int *)new_name_10];
test.c:187:2: warning: use location
  __USE(name);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_85 = VDEF <.MEM_69>
_37 = __printf_chk (1, "%d\n", _36);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
if (new_name_10 == 0B)
test.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
test.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
test.c:81:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================
 <function_decl 0x7f0991c18b00 main
    type <function_type 0x7f0991c177e0
        type <integer_type 0x7f09920e65e8 int public SI
            size <integer_cst 0x7f09920d2e28 constant 32>
            unit size <integer_cst 0x7f09920d2e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f09920e65e8 precision 32 min <integer_cst 0x7f09920d2de0 -2147483648> max <integer_cst 0x7f09920d2df8 2147483647>
            pointer_to_this <pointer_type 0x7f09920eda80>>
        QI
        size <integer_cst 0x7f09920d2cd8 constant 8>
        unit size <integer_cst 0x7f09920d2cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 241 col 5 align 8 context <translation_unit_decl 0x7f09920dd168 test.c> initial <block 0x7f0991c29060>
    result <result_decl 0x7f09920dd1e0 D.4060 type <integer_type 0x7f09920e65e8 int>
        ignored SI file test.c line 241 col 5 size <integer_cst 0x7f09920d2e28 32> unit size <integer_cst 0x7f09920d2e40 4>
        align 32 context <function_decl 0x7f0991c18b00 main>>
    struct-function 0x7f0991c31000>
 <ssa_name 0x7f0991c43900
    type <pointer_type 0x7f0991c17f18
        type <record_type 0x7f0991c17e70 bfd BLK
            size <integer_cst 0x7f099218bc30 constant 384>
            unit size <integer_cst 0x7f0991c1a480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c17d20 fields <field_decl 0x7f0991c197b8 filename> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c17f18> chain <type_decl 0x7f0991c19850 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0991c42990 nbfd>
    def_stmt nbfd_38 = malloc (48);
    version 38
    ptr-info 0x7f0991c345e8>

dot graph START

======================================================================
 <ssa_name 0x7f0991c43900
    type <pointer_type 0x7f0991c17f18
        type <record_type 0x7f0991c17e70 bfd BLK
            size <integer_cst 0x7f099218bc30 constant 384>
            unit size <integer_cst 0x7f0991c1a480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c17d20 fields <field_decl 0x7f0991c197b8 filename> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c17f18> chain <type_decl 0x7f0991c19850 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0991c42990 nbfd>
    def_stmt nbfd_38 = malloc (48);
    version 38
    ptr-info 0x7f0991c345e8>

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

_87 = nbfd_38;
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
test.c:189:7: warning: use location
  bfd *nbfd = malloc(sizeof(bfd));
       ^
dot graph target loc en1

dot graph target line desc form basic block 10: _87 = nbfd_38;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
test.c:189:7: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _87 = nbfd_38;
nbfd_38 = malloc (48);
dot graph stmt end

dot graph stmt start _87 = nbfd_38;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

obfd_12 = _87;
test.c:222:8: warning: use location
   obfd = bfd_openw (new_name);
        ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
test.c:189:7: warning: use location
  bfd *nbfd = malloc(sizeof(bfd));
       ^
dot graph target loc en1

dot graph target line desc form basic block 10: obfd_12 = _87;
test.c:222:8: warning: use location
   obfd = bfd_openw (new_name);
        ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
test.c:189:7: warning: use location
  bfd *nbfd = malloc(sizeof(bfd));
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start obfd_12 = _87;
nbfd_38 = malloc (48);
dot graph stmt end

dot graph stmt start obfd_12 = _87;
test.c:222:8: warning: use location
   obfd = bfd_openw (new_name);
        ^
dot graph stmt end

dot graph entry main
dot graph target entry end

free (obfd_12);
test.c:198:2: warning: use location
  free(abfd);
  ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
test.c:189:7: warning: use location
  bfd *nbfd = malloc(sizeof(bfd));
       ^
dot graph target loc en1

dot graph target line desc form basic block 12: free (obfd_12);
test.c:198:2: warning: use location
  free(abfd);
  ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
test.c:189:7: warning: use location
  bfd *nbfd = malloc(sizeof(bfd));
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

dot graph stmt start free (obfd_12);
nbfd_38 = malloc (48);
dot graph stmt end

dot graph stmt start free (obfd_12);
test.c:198:2: warning: use location
  free(abfd);
  ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (obfd_12);
test.c:198:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

if (obfd_12 == 0B)
test.c:224:6: warning: use location
   if (obfd == NULL)
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
test.c:189:7: warning: use location
  bfd *nbfd = malloc(sizeof(bfd));
       ^
dot graph target loc en1

dot graph target line desc form basic block 10: if (obfd_12 == 0B)
test.c:224:6: warning: use location
   if (obfd == NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
test.c:189:7: warning: use location
  bfd *nbfd = malloc(sizeof(bfd));
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start if (obfd_12 == 0B)
nbfd_38 = malloc (48);
dot graph stmt end

dot graph stmt start if (obfd_12 == 0B)
test.c:224:6: warning: use location
   if (obfd == NULL)
      ^
dot graph stmt end

if (obfd_12 == 0B)

 ================== find cond branch ================= 
if (obfd_12 == 0B)
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_39 = nbfd_38;
test.c:190:9: warning: use location
  return nbfd;
         ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
test.c:189:7: warning: use location
  bfd *nbfd = malloc(sizeof(bfd));
       ^
dot graph target loc en1

dot graph target line desc form basic block 10: _39 = nbfd_38;
test.c:190:9: warning: use location
  return nbfd;
         ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
test.c:189:7: warning: use location
  bfd *nbfd = malloc(sizeof(bfd));
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _39 = nbfd_38;
nbfd_38 = malloc (48);
dot graph stmt end

dot graph stmt start _39 = nbfd_38;
test.c:190:9: warning: use location
  return nbfd;
         ^
dot graph stmt end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

dot graph arrowsubgraph cluster_1784756475 dot graph subgraph  free (obfd_12);
obfd_12 = _87;
dot graph subgrapend

 <ssa_name 0x7f0991c43900
    type <pointer_type 0x7f0991c17f18
        type <record_type 0x7f0991c17e70 bfd BLK
            size <integer_cst 0x7f099218bc30 constant 384>
            unit size <integer_cst 0x7f0991c1a480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f0991c17d20 fields <field_decl 0x7f0991c197b8 filename> context <translation_unit_decl 0x7f09920dd168 test.c>
            pointer_to_this <pointer_type 0x7f0991c17f18> chain <type_decl 0x7f0991c19850 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f09920d2be8 constant 64>
        unit size <integer_cst 0x7f09920d2c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0991c42990 nbfd>
    def_stmt nbfd_38 = malloc (48);
    version 38
    ptr-info 0x7f0991c345e8>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================

[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 4
 [0m
[40;34m    used_stmt array stack totalsize of : 2280
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
algorithm time: 0.033331 s
=======Mapping node_fun:main=========
<bb 2> [100.00%]:
contents_head_4 = iarch.archive_next;
_21 = iarch.filename;
_71 = _21;
_5 = _71;
_6 = strlen (_5);
_7 = _6 + 1;
old_name_8 = malloc (_7);
_20 = iarch.filename;
_73 = _20;
_9 = _73;
strcpy (old_name_8, _9);
slash_22 = strrchr (old_name_8, 47);
if (slash_22 != 0B)
  goto <bb 3>; [66.53%]
else
  goto <bb 4>; [33.47%]

=======is loop:0=========
<bb 3> [66.53%]:
_23 = (long int) slash_22;
_24 = (long int) old_name_8;
_25 = _23 - _24;
len_26 = (size_t) _25;
_27 = len_26 + 11;
tmpname_28 = malloc (_27);
memcpy (tmpname_28, old_name_8, len_26);
len_29 = len_26 + 1;
_30 = tmpname_28 + len_26;
*_30 = 47;
goto <bb 5>; [100.00%]

=======is loop:0=========
<bb 4> [33.47%]:
tmpname_31 = malloc (9);

=======is loop:0=========
<bb 5> [100.00%]:
# tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
# len_33 = PHI <len_29(3), 0(4)>
_34 = tmpname_32 + len_33;
memcpy (_34, "stXXXXXX", 9);
_35 = tmpname_32;
_80 = tmpname_32;
tmpname_17 = _80;
fd_18 = mkstemp (tmpname_17);
if (fd_18 == -1)
  goto <bb 6>; [4.85%]
else
  goto <bb 7>; [95.15%]

=======is loop:0=========
<bb 6> [4.85%]:
free (tmpname_17);
goto <bb 8>; [100.00%]

=======is loop:0=========
<bb 7> [95.15%]:
close (fd_18);

=======is loop:0=========
<bb 8> [100.00%]:
# _19 = PHI <0B(6), tmpname_17(7)>
_84 = _19;
new_name_10 = _84;
if (new_name_10 == 0B)
  goto <bb 9>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========
<bb 9> [0.04%]:
_11 = __printf_chk (1, "could not create temporary file whilst writing archive%s", "");
exit (1);

=======is loop:0=========
<bb 10> [99.96%]:
_36 = MEM[(int *)new_name_10];
_37 = __printf_chk (1, "%d\n", _36);
nbfd_38 = malloc (48);
_39 = nbfd_38;
_87 = nbfd_38;
obfd_12 = _87;
if (obfd_12 == 0B)
  goto <bb 11>; [0.04%]
else
  goto <bb 12>; [99.96%]

=======is loop:0=========
<bb 11> [0.04%]:
_13 = __printf_chk (1, "%s", old_name_8);
exit (1);

=======is loop:0=========
<bb 12> [99.92%]:
_40 = rand ();
_41 = _40 % 2;
_42 = _41 == 1;
ret_43 = (bfd_boolean) _42;
free (obfd_12);
_14 = _90(D);
if (_14 == 0B)
  goto <bb 13>; [0.04%]
else
  goto <bb 14>; [99.96%]

=======is loop:0=========
<bb 13> [0.04%]:
_15 = __printf_chk (1, "%s", old_name_8);
exit (1);

=======is loop:0=========
<bb 14> [99.88%]:
_60 = rand ();
_61 = _60 % 2;
_62 = _61 == 1;
ret_63 = (bfd_boolean) _62;
free (&iarch);
_44 = lstat (old_name_8, &s);
_45 = _44 == 0;
exists_46 = (bfd_boolean) _45;
if (_44 != 0)
  goto <bb 17>; [33.00%]
else
  goto <bb 15>; [67.00%]

=======is loop:0=========
<bb 15> [66.92%]:
_47 = BIT_FIELD_REF <s, 32, 192>;
_48 = _47 & 61568;
if (_48 == 32896)
  goto <bb 16>; [34.00%]
else
  goto <bb 22>; [66.00%]

=======is loop:0=========
<bb 16> [22.75%]:
_49 = s.st_nlink;
if (_49 == 1)
  goto <bb 17>; [34.00%]
else
  goto <bb 22>; [66.00%]

=======is loop:0=========
<bb 17> [40.70%]:
ret_50 = rename (new_name_10, old_name_8);
if (ret_50 == 0)
  goto <bb 18>; [70.44%]
else
  goto <bb 21>; [29.56%]

=======is loop:0=========
<bb 18> [28.67%]:
if (_44 == 0)
  goto <bb 19>; [36.64%]
else
  goto <bb 23>; [63.36%]

=======is loop:0=========
<bb 19> [10.50%]:
_51 = s.st_mode;
_52 = _51 & 511;
chmod (old_name_8, _52);
_53 = s.st_gid;
_54 = s.st_uid;
_55 = chown (old_name_8, _54, _53);
if (_55 >= 0)
  goto <bb 20>; [46.68%]
else
  goto <bb 23>; [53.32%]

=======is loop:0=========
<bb 20> [4.90%]:
_56 = s.st_mode;
_57 = _56 & 4095;
chmod (old_name_8, _57);
goto <bb 23>; [100.00%]

=======is loop:0=========
<bb 21> [12.03%]:
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
unlink (new_name_10);
goto <bb 23>; [100.00%]

=======is loop:0=========
<bb 22> [59.18%]:
unlink (new_name_10);

=======is loop:0=========
<bb 23> [99.88%]:
# ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
s ={v} {CLOBBER};
_102 = ret_59;
_16 = _102;
if (_16 != 0)
  goto <bb 24>; [0.04%]
else
  goto <bb 25>; [99.96%]

=======is loop:0=========
<bb 24> [0.04%]:
exit (1);

=======is loop:0=========
<bb 25> [99.84%]:
free (old_name_8);
iarch ={v} {CLOBBER};
return 0;

=======is loop:0=========
time: 0.054142 s
In function ‘bfd_close’,
    inlined from ‘write_archive’ at test.c:233:3,
    inlined from ‘main’ at test.c:244:9:
test.c:198:2: warning: attempt to free a non-heap object ‘iarch’ [-Wfree-nonheap-object]
  free(abfd);
  ^
