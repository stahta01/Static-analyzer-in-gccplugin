
;; Function CRYPTO_atomic_add (CRYPTO_atomic_add, funcdef_no=22, decl_uid=3594, cgraph_uid=23, symbol_order=23)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
int CRYPTO_atomic_add (int * val, int amount, int * ret)
{
  int D.3676;

  <bb 2> :
  _1 = *val;
  _2 = amount + _1;
  *val = _2;
  _3 = *val;
  *ret = _3;
  D.3676 = 1;
  return D.3676;

}



;; Function lh_CONF_VALUE_free (lh_CONF_VALUE_free, funcdef_no=24, decl_uid=3612, cgraph_uid=25, symbol_order=25)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8 7 5 6
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 2, outer 1
;;  nodes: 7 6
;; 2 succs { 3 4 }
;; 3 succs { 11 }
;; 4 succs { 9 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 9 }
;; 9 succs { 5 10 }
;; 10 succs { 11 }
;; 11 succs { 1 }
void lh_CONF_VALUE_free (struct OPENSSL_LHASH * lh)
{
  struct OPENSSL_LH_NODE * nn;
  struct OPENSSL_LH_NODE * n;
  unsigned int i;

  <bb 2> :
  if (lh == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 4> :
  i = 0;
  goto <bb 9>; [INV]

  <bb 5> :
  _1 = lh->b;
  _2 = (long unsigned int) i;
  _3 = _2 * 8;
  _4 = _1 + _3;
  n = *_4;
  goto <bb 7>; [INV]

  <bb 6> :
  nn = n->next;
  free (n);
  n = nn;

  <bb 7> :
  if (n != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  i = i + 1;

  <bb 9> :
  _5 = lh->num_nodes;
  if (i < _5)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  _6 = lh->b;
  free (_6);
  free (lh);

  <bb 11> :
  return;

}



;; Function lh_CONF_VALUE_new (lh_CONF_VALUE_new, funcdef_no=25, decl_uid=3624, cgraph_uid=26, symbol_order=26)

Merging blocks 5 and 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
struct CONF_VALUE * lh_CONF_VALUE_new ()
{
  struct OPENSSL_LHASH * ret;
  struct CONF_VALUE * D.3683;

  <bb 2> :
  ret = malloc (176);
  if (ret == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3683 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  _1 = malloc (8);
  ret->b = _1;
  _2 = ret->b;
  if (_2 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  // predicted unlikely by goto predictor.
  _3 = ret->b;
  free (_3);
  free (ret);
  D.3683 = 0B;
  goto <bb 7>; [INV]

  <bb 6> :
  D.3683 = ret;

  <bb 7> :
  return D.3683;

}



;; Function lh_CONF_VALUE_retrieve (lh_CONF_VALUE_retrieve, funcdef_no=26, decl_uid=3630, cgraph_uid=27, symbol_order=27)

Merging blocks 5 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void * lh_CONF_VALUE_retrieve (struct OPENSSL_LHASH * lh, const void * data)
{
  int scratch;
  void * ret;
  struct OPENSSL_LH_NODE * * rn;
  long unsigned int hash;
  void * D.3689;

  <bb 2> :
  lh->error = 0;
  rn = getrn (lh, data, &hash);
  _1 = *rn;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = &lh->num_retrieve_miss;
  CRYPTO_atomic_add (_2, 1, &scratch);
  D.3689 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _3 = *rn;
  ret = _3->data;
  _4 = &lh->num_retrieve;
  CRYPTO_atomic_add (_4, 1, &scratch);
  D.3689 = ret;

  <bb 5> :
  hash = {CLOBBER};
  scratch = {CLOBBER};
  return D.3689;

}



;; Function getrn (getrn, funcdef_no=23, decl_uid=3599, cgraph_uid=24, symbol_order=24)

Merging blocks 11 and 12
Merging blocks 11 and 13
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 6 8 7 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 10 }
;; 5 succs { 6 7 }
;; 6 succs { 9 }
;; 7 succs { 11 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 5 11 }
;; 11 succs { 1 }
struct OPENSSL_LH_NODE * * getrn (struct OPENSSL_LHASH * lh, const void * data, long unsigned int * rhash)
{
  int scratch;
  int (*OPENSSL_LH_COMPFUNC) (const void *, const void *) cf;
  long unsigned int nn;
  long unsigned int hash;
  struct OPENSSL_LH_NODE * n1;
  struct OPENSSL_LH_NODE * * ret;
  struct OPENSSL_LH_NODE * * D.3697;

  <bb 2> :
  _1 = lh->hash;
  hash = _1 (data);
  _2 = &lh->num_hash_calls;
  CRYPTO_atomic_add (_2, 1, &scratch);
  *rhash = hash;
  _3 = lh->pmax;
  _4 = (long unsigned int) _3;
  nn = hash % _4;
  _5 = lh->p;
  _6 = (long unsigned int) _5;
  if (nn < _6)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _7 = lh->num_alloc_nodes;
  _8 = (long unsigned int) _7;
  nn = hash % _8;

  <bb 4> :
  cf = lh->comp;
  _9 = lh->b;
  _10 = (int) nn;
  _11 = (long unsigned int) _10;
  _12 = _11 * 8;
  ret = _9 + _12;
  n1 = *ret;
  goto <bb 10>; [INV]

  <bb 5> :
  _13 = &lh->num_hash_comps;
  CRYPTO_atomic_add (_13, 1, &scratch);
  _14 = n1->hash;
  if (hash != _14)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  ret = &n1->next;
  // predicted unlikely by continue predictor.
  goto <bb 9>; [INV]

  <bb 7> :
  _15 = &lh->num_comp_calls;
  CRYPTO_atomic_add (_15, 1, &scratch);
  _16 = n1->data;
  _17 = cf (_16, data);
  if (_17 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  ret = &n1->next;

  <bb 9> :
  n1 = n1->next;

  <bb 10> :
  if (n1 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  D.3697 = ret;
  scratch = {CLOBBER};
  return D.3697;

}



;; Function _CONF_get_string (_CONF_get_string, funcdef_no=27, decl_uid=3639, cgraph_uid=28, symbol_order=28)

Merging blocks 13 and 14
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;; 2 succs { 3 4 }
;; 3 succs { 13 }
;; 4 succs { 5 12 }
;; 5 succs { 6 9 }
;; 6 succs { 7 8 }
;; 7 succs { 13 }
;; 8 succs { 13 }
;; 9 succs { 10 11 }
;; 10 succs { 13 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 1 }
char * _CONF_get_string (const struct CONF * conf, const char * section, const char * name)
{
  char * p;
  struct CONF_VALUE vv;
  struct CONF_VALUE * v;
  char * D.3702;

  <bb 2> :
  if (name == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3702 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 4> :
  if (conf != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 5> :
  if (section != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 6> :
  vv.name = name;
  vv.section = section;
  _1 = conf->data;
  v = lh_CONF_VALUE_retrieve (_1, &vv);
  if (v != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.3702 = v->value;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 8> :
  D.3702 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 9> :
  vv.section = "default";
  vv.name = name;
  _2 = conf->data;
  v = lh_CONF_VALUE_retrieve (_2, &vv);
  if (v != 0B)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  D.3702 = v->value;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 11> :
  D.3702 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 12> :
  D.3702 = getenv (name);
  // predicted unlikely by early return (on trees) predictor.

  <bb 13> :
  vv = {CLOBBER};
  return D.3702;

}



;; Function NCONF_get_string (NCONF_get_string, funcdef_no=28, decl_uid=3647, cgraph_uid=29, symbol_order=29)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
char * NCONF_get_string (const struct CONF * conf, const char * group, const char * name)
{
  char * s;
  char * D.3715;

  <bb 2> :
  s = _CONF_get_string (conf, group, name);
  if (s != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3715 = s;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  if (conf == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.3715 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  D.3715 = 0B;

  <bb 7> :
  return D.3715;

}



;; Function app_RAND_load_conf (app_RAND_load_conf, funcdef_no=29, decl_uid=3652, cgraph_uid=30, symbol_order=30)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
void app_RAND_load_conf (struct CONF * c, const char * section)
{
  const char * randfile;

  <bb 2> :
  randfile = NCONF_get_string (c, section, "RANDFILE");
  if (randfile == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 6>; [INV]

  <bb 4> :
  save_rand_file.0_1 = save_rand_file;
  if (save_rand_file.0_1 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  save_rand_file = randfile;

  <bb 6> :
  return;

}



;; Function app_RAND_write (app_RAND_write, funcdef_no=30, decl_uid=3656, cgraph_uid=31, symbol_order=31)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
void app_RAND_write ()
{
  <bb 2> :
  save_rand_file.1_1 = save_rand_file;
  if (save_rand_file.1_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 6>; [INV]

  <bb 4> :
  save_rand_file.2_2 = save_rand_file;
  _3 = RAND_write_file (save_rand_file.2_2);
  if (_3 == -1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  __builtin_puts (&"RAND_write_file error"[0]);

  <bb 6> :
  return;

}



;; Function _CONF_new_data (_CONF_new_data, funcdef_no=31, decl_uid=3661, cgraph_uid=32, symbol_order=32)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 8 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int _CONF_new_data (struct CONF * conf)
{
  int D.3731;

  <bb 2> :
  if (conf == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3731 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 4> :
  _1 = conf->data;
  if (_1 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  _2 = lh_CONF_VALUE_new ();
  conf->data = _2;
  _3 = conf->data;
  if (_3 == 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  D.3731 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 7> :
  D.3731 = 1;

  <bb 8> :
  return D.3731;

}



;; Function CONF_free (CONF_free, funcdef_no=32, decl_uid=3664, cgraph_uid=33, symbol_order=33)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
void CONF_free (struct CONF * conf)
{
  <bb 2> :
  if (conf == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _1 = conf->data;
  if (_1 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 6>; [INV]

  <bb 5> :
  _2 = conf->data;
  lh_CONF_VALUE_free (_2);
  free (conf);

  <bb 6> :
  return;

}



;; Function CONF_new (CONF_new, funcdef_no=33, decl_uid=3666, cgraph_uid=34, symbol_order=34)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
struct CONF * CONF_new ()
{
  struct CONF * ret;
  struct CONF * D.3741;

  <bb 2> :
  ret = malloc (16);
  D.3741 = ret;
  return D.3741;

}



;; Function foo (foo, funcdef_no=34, decl_uid=3669, cgraph_uid=35, symbol_order=35)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
void foo ()
{
  struct CONF * conf;

  <bb 2> :
  conf = 0B;
  conf = CONF_new ();
  if (conf == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by goto predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  conf->data = 0B;
  _1 = _CONF_new_data (conf);
  if (_1 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  // predicted unlikely by goto predictor.
  goto <bb 7>; [INV]

  <bb 6> :
  app_RAND_load_conf (conf, "section");

  <bb 7> :
end:
  CONF_free (conf);
  return;

}



;; Function main (main, funcdef_no=35, decl_uid=3673, cgraph_uid=36, symbol_order=36)

Removing basic block 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
int main ()
{
  int D.3747;

  <bb 2> :
  foo ();
  app_RAND_write ();
  D.3747 = 0;
  return D.3747;

}


