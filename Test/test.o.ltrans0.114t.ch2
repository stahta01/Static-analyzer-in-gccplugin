
;; Function foo (foo, funcdef_no=1, decl_uid=3985, cgraph_uid=0, symbol_order=94) (executed once)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

i_8 -> { i_2 }
.MEM_15 -> { .MEM_11 }
i_16 -> { i_2 }
.MEM_17 -> { .MEM_11 }
.MEM_18 -> { .MEM_11 }
Incremental SSA update started at block: 6
Number of blocks in CFG: 9
Number of blocks to update: 6 ( 67%)


Merging blocks 2 and 6
Merging blocks 3 and 4
Removing basic block 7
Removing basic block 8
foo (int z)
{
  int i;
  int * a;
  long unsigned int _1;
  int _10;

  <bb 2> [25.00%]:
  _1 = (long unsigned int) z_4(D);
  a_7 = malloc (_1);

  <bb 3> [75.00%]:
  # i_16 = PHI <i_9(3), 0(2)>
  _10 = __printf_chk (1, "qwdwqd%d\n", i_16);
  i_9 = i_16 + 1;
  if (i_9 <= 2)
    goto <bb 3>; [75.00%]
  else
    goto <bb 4>; [25.00%]

  <bb 4> [25.00%]:
  return a_7;

}



;; Function main (main, funcdef_no=0, decl_uid=3987, cgraph_uid=1, symbol_order=51) (executed once)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
main ()
{
  int * q;
  int * p;
  int * _1;

  <bb 2> [100.00%]:
  _1 = foo (12);
  p_7 = foo (10);
  free (_1);
  free (_1);
  return 0;

}


