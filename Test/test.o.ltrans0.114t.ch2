
;; Function main (main, funcdef_no=0, decl_uid=3985, cgraph_uid=0, symbol_order=53) (executed once)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 9 6 7 8
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 8 9 }
;; 9 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

i_37 -> { i_11 }
.MEM_38 -> { .MEM_28 }
i_39 -> { i_10 }
.MEM_40 -> { .MEM_27 }
i_41 -> { i_10 }
i_42 -> { i_11 }
.MEM_43 -> { .MEM_27 }
.MEM_44 -> { .MEM_27 }
.MEM_45 -> { .MEM_28 }
Incremental SSA update started at block: 13
Number of blocks in CFG: 16
Number of blocks to update: 12 ( 75%)


Merging blocks 2 and 13
Merging blocks 3 and 4
Merging blocks 6 and 7
Removing basic block 9
Removing basic block 11
Removing basic block 12
Removing basic block 14
Removing basic block 15
main ()
{
  int i;
  int i;
  struct st * p;
  int test;
  long unsigned int _1;
  long unsigned int _2;
  struct st * _3;
  void * _4;
  void * _5;
  long unsigned int _6;
  long unsigned int _7;
  struct st * _8;
  int * _9;
  int _12;

  <bb 2> [9.10%]:
  p_18 = malloc (10);

  <bb 3> [90.91%]:
  # i_41 = PHI <i_26(3), 0(2)>
  _1 = (long unsigned int) i_41;
  _2 = _1 * 16;
  _3 = p_18 + _2;
  _4 = malloc (1);
  _3->f = _4;
  i_26 = i_41 + 1;
  if (i_26 <= 9)
    goto <bb 3>; [90.91%]
  else
    goto <bb 4>; [9.09%]

  <bb 4> [9.09%]:
  _5 = malloc (1);
  MEM[(struct st *)p_18 + 32B].f = _5;
  if (test_21(D) != 0)
    goto <bb 7>; [31.00%]
  else
    goto <bb 5>; [69.00%]

  <bb 5> [6.28%]:
  # i_37 = PHI <0(4)>
  if (i_37 <= 9)
    goto <bb 6>; [90.91%]
  else
    goto <bb 7>; [9.09%]

  <bb 6> [62.73%]:
  # i_42 = PHI <i_23(6), i_37(5)>
  _6 = (long unsigned int) i_42;
  _7 = _6 * 16;
  _8 = p_18 + _7;
  _9 = _8->f;
  free (_9);
  i_23 = i_42 + 1;
  if (i_23 <= 9)
    goto <bb 6>; [90.91%]
  else
    goto <bb 7>; [9.09%]

  <bb 7> [9.09%]:
  # _12 = PHI <100(4), 0(6), 0(5)>
  return _12;

}


