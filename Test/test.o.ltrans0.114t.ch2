
;; Function winlink_stack_remove (winlink_stack_remove, funcdef_no=11, decl_uid=4468, cgraph_uid=30, symbol_order=77)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 4
;; 2 succs { 11 3 }
;; 3 succs { 10 }
;; 4 succs { 5 9 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 11 }
;; 9 succs { 10 }
;; 10 succs { 4 11 }
;; 11 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

wl2_21 -> { wl2_7 }
wl2_22 -> { wl2_7 }
Incremental SSA update started at block: 12
Number of blocks in CFG: 16
Number of blocks to update: 8 ( 50%)


Merging blocks 3 and 12
Merging blocks 9 and 10
Removing basic block 14
Removing basic block 15
winlink_stack_remove (struct winlink_stack * stack, struct winlink * wl)
{
  struct winlink * wl2;
  struct winlink * _1;
  struct winlink * _2;
  struct winlink * * _3;
  struct winlink * * _4;
  struct winlink * * _5;
  struct winlink * _6;

  <bb 2> [19.71%]:
  if (wl_10(D) == 0B)
    goto <bb 11>; [26.74%]
  else
    goto <bb 3>; [73.26%]

  <bb 3> [14.44%]:
  wl2_13 = stack_12(D)->tqh_first;
  if (wl2_13 != 0B)
    goto <bb 4>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 4> [13.32%]:
  if (wl_10(D) == wl2_13)
    goto <bb 6>; [7.50%]
  else
    goto <bb 10>; [92.50%]

  <bb 5> [79.18%]:
  if (wl_10(D) == wl2_14)
    goto <bb 6>; [7.50%]
  else
    goto <bb 10>; [92.50%]

  <bb 6> [6.94%]:
  _1 = wl_10(D)->sentry.tqe_next;
  if (_1 != 0B)
    goto <bb 7>; [70.00%]
  else
    goto <bb 8>; [30.00%]

  <bb 7> [4.86%]:
  _2 = wl_10(D)->sentry.tqe_next;
  _3 = wl_10(D)->sentry.tqe_prev;
  _2->sentry.tqe_prev = _3;
  goto <bb 9>; [100.00%]

  <bb 8> [2.08%]:
  _4 = wl_10(D)->sentry.tqe_prev;
  stack_12(D)->tqh_last = _4;

  <bb 9> [6.94%]:
  _5 = wl_10(D)->sentry.tqe_prev;
  _6 = wl_10(D)->sentry.tqe_next;
  *_5 = _6;
  goto <bb 11>; [100.00%]

  <bb 10> [85.60%]:
  # wl2_22 = PHI <wl2_14(5), wl2_13(4)>
  wl2_14 = wl2_22->sentry.tqe_next;
  if (wl2_14 != 0B)
    goto <bb 5>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 11> [19.71%]:
  return;

}



;; Function session_group_find (session_group_find, funcdef_no=6, decl_uid=4483, cgraph_uid=36, symbol_order=70)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 6 3 5 4
;;
;; Loop 2
;;  header 6, latch 5
;;  depth 2, outer 1
;;  nodes: 6 5 4
;; 2 succs { 8 }
;; 3 succs { 6 }
;; 4 succs { 9 5 }
;; 5 succs { 6 }
;; 6 succs { 4 7 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

sg_11 -> { sg_1 }
s_12 -> { s_2 }
sg_13 -> { sg_1 }
s_14 -> { s_2 }
Incremental SSA update started at block: 10
Number of blocks in CFG: 17
Number of blocks to update: 14 ( 82%)


Merging blocks 2 and 10
Merging blocks 3 and 13
Merging blocks 5 and 6
Merging blocks 7 and 8
Removing basic block 11
Removing basic block 12
Removing basic block 15
Removing basic block 16
session_group_find (struct session * target)
{
  struct session * s;
  struct session_group * sg;
  struct session_group * _3;

  <bb 2> [8.12%]:
  sg_5 = session_groups.tqh_first;
  if (sg_5 != 0B)
    goto <bb 3>; [92.50%]
  else
    goto <bb 8>; [7.50%]

  <bb 3> [14.44%]:
  # sg_13 = PHI <sg_7(7), sg_5(2)>
  s_6 = sg_13->sessions.tqh_first;
  if (s_6 != 0B)
    goto <bb 4>; [92.50%]
  else
    goto <bb 7>; [7.50%]

  <bb 4> [13.32%]:
  if (s_6 == target_8(D))
    goto <bb 8>; [7.50%]
  else
    goto <bb 6>; [92.50%]

  <bb 5> [79.18%]:
  if (target_8(D) == s_9)
    goto <bb 8>; [7.50%]
  else
    goto <bb 6>; [92.50%]

  <bb 6> [85.60%]:
  # s_14 = PHI <s_9(5), s_6(4)>
  s_9 = s_14->gentry.tqe_next;
  if (s_9 != 0B)
    goto <bb 5>; [92.50%]
  else
    goto <bb 7>; [7.50%]

  <bb 7> [7.50%]:
  sg_7 = sg_13->entry.tqe_next;
  if (sg_7 != 0B)
    goto <bb 3>; [92.50%]
  else
    goto <bb 8>; [7.50%]

  <bb 8> [8.11%]:
  # _3 = PHI <sg_13(5), 0B(7), 0B(2), sg_13(4)>
  return _3;

}



;; Function winlinks_RB_NEXT (winlinks_RB_NEXT, funcdef_no=0, decl_uid=4488, cgraph_uid=42, symbol_order=60)

Created preheader block for loop 1
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 10 7 8 9 14 11 12 13
;;
;; Loop 2
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4
;;
;; Loop 1
;;  header 14, latch 9
;;  depth 1, outer 0
;;  nodes: 14 9 11
;; 2 succs { 3 6 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 4 13 }
;; 6 succs { 7 10 }
;; 10 succs { 14 }
;; 7 succs { 8 10 }
;; 8 succs { 13 }
;; 9 succs { 14 }
;; 14 succs { 11 12 }
;; 11 succs { 9 12 }
;; 12 succs { 13 }
;; 13 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

elm_21 -> { elm_9 }
_22 -> { _2 }
elm_23 -> { elm_10 }
_24 -> { _6 }
_25 -> { _7 }
_26 -> { _8 }
elm_27 -> { elm_9 }
elm_28 -> { elm_10 }
elm_29 -> { elm_10 }
Incremental SSA update started at block: 2
Number of blocks in CFG: 22
Number of blocks to update: 14 ( 64%)


Merging blocks 3 and 15
Merging blocks 4 and 5
Merging blocks 9 and 14
Merging blocks 10 and 18
Removing basic block 16
Removing basic block 17
Removing basic block 20
Removing basic block 21
winlinks_RB_NEXT (struct winlink * elm)
{
  struct winlink * _1;
  struct winlink * _2;
  struct winlink * _3;
  struct winlink * _4;
  struct winlink * _5;
  struct winlink * _6;
  struct winlink * _7;
  struct winlink * _8;
  struct winlink * _22;
  struct winlink * _24;
  struct winlink * _25;
  struct winlink * _26;

  <bb 2> [21.43%]:
  _1 = elm_13(D)->entry.rbe_right;
  if (_1 != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 5>; [30.00%]

  <bb 3> [15.00%]:
  elm_17 = elm_13(D)->entry.rbe_right;
  _22 = elm_17->entry.rbe_left;
  if (_22 != 0B)
    goto <bb 4>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 4> [85.00%]:
  # elm_27 = PHI <elm_18(4), elm_17(3)>
  elm_18 = elm_27->entry.rbe_left;
  _2 = elm_18->entry.rbe_left;
  if (_2 != 0B)
    goto <bb 4>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 5> [6.43%]:
  _3 = elm_13(D)->entry.rbe_parent;
  if (_3 != 0B)
    goto <bb 8>; [70.00%]
  else
    goto <bb 6>; [30.00%]

  <bb 6> [5.25%]:
  # elm_19 = PHI <elm_13(D)(5), elm_13(D)(8)>
  _24 = elm_19->entry.rbe_parent;
  if (_24 != 0B)
    goto <bb 7>; [92.50%]
  else
    goto <bb 12>; [7.50%]

  <bb 7> [4.85%]:
  _25 = elm_19->entry.rbe_parent;
  _26 = _25->entry.rbe_right;
  if (elm_19 == _26)
    goto <bb 10>; [92.50%]
  else
    goto <bb 12>; [7.50%]

  <bb 8> [4.50%]:
  _4 = elm_13(D)->entry.rbe_parent;
  _5 = _4->entry.rbe_left;
  if (_5 == elm_13(D))
    goto <bb 9>; [26.74%]
  else
    goto <bb 6>; [73.26%]

  <bb 9> [1.20%]:
  elm_14 = elm_13(D)->entry.rbe_parent;
  goto <bb 13>; [100.00%]

  <bb 10> [30.97%]:
  # elm_28 = PHI <elm_15(11), elm_19(7)>
  elm_15 = elm_28->entry.rbe_parent;
  _6 = elm_15->entry.rbe_parent;
  if (_6 != 0B)
    goto <bb 11>; [92.50%]
  else
    goto <bb 12>; [7.50%]

  <bb 11> [28.63%]:
  _7 = elm_15->entry.rbe_parent;
  _8 = _7->entry.rbe_right;
  if (_8 == elm_15)
    goto <bb 10>; [92.50%]
  else
    goto <bb 12>; [7.50%]

  <bb 12> [5.23%]:
  # elm_29 = PHI <elm_15(10), elm_15(11), elm_19(6), elm_19(7)>
  elm_16 = elm_29->entry.rbe_parent;

  <bb 13> [21.43%]:
  # elm_11 = PHI <elm_18(4), elm_14(9), elm_16(12), elm_17(3)>
  return elm_11;

}



;; Function cmd_find_pane (cmd_find_pane, funcdef_no=5, decl_uid=4484, cgraph_uid=37, symbol_order=68) (executed once)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { 9 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
cmd_find_pane (int arg, struct session * * sp)
{
  struct session * s;
  unsigned int _1;
  struct session * * _2;
  struct winlink * _3;
  struct winlink * _4;
  int _12;
  struct winlink * _13;
  struct winlink * _14;

  <bb 2> [100.00%]:
  _1 = sessions.num;
  if (_1 == 0)
    goto <bb 3>; [4.64%]
  else
    goto <bb 4>; [95.36%]

  <bb 3> [4.64%]:
  _12 = __printf_chk (1, "can\'t establish current session\n");
  goto <bb 9>; [100.00%]

  <bb 4> [95.36%]:
  _2 = sessions.list;
  s_8 = MEM[(struct session * *)_2 + 8B];
  if (sp_9(D) != 0B)
    goto <bb 5>; [70.00%]
  else
    goto <bb 6>; [30.00%]

  <bb 5> [66.75%]:
  *sp_9(D) = s_8;

  <bb 6> [95.36%]:
  if (arg_11(D) != 0)
    goto <bb 7>; [63.36%]
  else
    goto <bb 8>; [36.64%]

  <bb 7> [60.42%]:
  _14 = s_8->curw;
  goto <bb 9>; [100.00%]

  <bb 8> [34.94%]:
  _3 = s_8->curw;
  _13 = winlinks_RB_NEXT (_3);

  <bb 9> [100.00%]:
  # _4 = PHI <0B(3), _14(7), _13(8)>
  return _4;

}



;; Function winlink_find_by_index (winlink_find_by_index, funcdef_no=2, decl_uid=4485, cgraph_uid=38, symbol_order=64)

Disambiguating loop 1 with multiple latches
Merged latch edges of loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 13 14 12
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 8 6 5 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 14 }
;; 5 succs { 6 7 }
;; 6 succs { 13 }
;; 7 succs { 8 9 }
;; 8 succs { 13 }
;; 9 succs { 12 }
;; 13 succs { 14 }
;; 14 succs { 5 12 }
;; 12 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

tmp_17 -> { tmp_13 }
tmp_23 -> { tmp_13 }
Incremental SSA update started at block: 15
Number of blocks in CFG: 18
Number of blocks to update: 9 ( 50%)


Merging blocks 4 and 15
Removing basic block 9
Merging blocks 13 and 14
Removing basic block 16
Removing basic block 17
winlink_find_by_index (struct winlinks * wwl, int idx)
{
  int D.4548;
  struct winlink * tmp;
  int comp;
  struct winlink * D.4541;
  struct winlink wl;
  int _5;
  struct winlink * _18;
  int _20;
  int _21;
  int _22;

  <bb 2> [11.94%]:
  if (idx_1(D) < 0)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.00%]:
  _5 = __printf_chk (1, "bad index%s", "");
  exit (1);

  <bb 4> [11.94%]:
  wl.idx = idx_1(D);
  tmp_12 = wwl_4(D)->rbh_root;
  if (tmp_12 != 0B)
    goto <bb 5>; [92.50%]
  else
    goto <bb 10>; [7.50%]

  <bb 5> [92.50%]:
  # tmp_23 = PHI <tmp_19(9), tmp_12(4)>
  _20 = wl.idx;
  _21 = tmp_23->idx;
  _22 = _20 - _21;
  if (_22 < 0)
    goto <bb 6>; [36.00%]
  else
    goto <bb 7>; [64.00%]

  <bb 6> [33.30%]:
  tmp_15 = tmp_23->entry.rbe_left;
  goto <bb 9>; [100.00%]

  <bb 7> [59.20%]:
  if (_22 > 0)
    goto <bb 8>; [92.50%]
  else
    goto <bb 10>; [7.50%]

  <bb 8> [54.76%]:
  tmp_16 = tmp_23->entry.rbe_right;

  <bb 9> [88.10%]:
  # tmp_19 = PHI <tmp_16(8), tmp_15(6)>
  if (tmp_19 != 0B)
    goto <bb 5>; [92.50%]
  else
    goto <bb 10>; [7.50%]

  <bb 10> [11.94%]:
  # _18 = PHI <tmp_23(7), 0B(9), 0B(4)>
  wl ={v} {CLOBBER};
  return _18;

}



;; Function session_select (session_select, funcdef_no=23, decl_uid=4456, cgraph_uid=17, symbol_order=88)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 10 3 }
;; 3 succs { 10 4 }
;; 4 succs { 9 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
session_select (struct session * s, int idx)
{
  struct winlink * wl;
  struct winlinks * _1;
  struct winlink * _2;
  struct winlink_stack * _3;
  struct winlink * _4;
  struct winlink_stack * _5;
  int _6;
  struct winlink * _19;
  struct winlink * _20;
  struct winlink * _21;
  struct winlink * * _22;
  struct winlink * * _23;
  struct winlink * * _24;

  <bb 2> [100.00%]:
  _1 = &s_8(D)->windows;
  wl_12 = winlink_find_by_index (_1, idx_10(D));
  if (wl_12 == 0B)
    goto <bb 10>; [0.87%]
  else
    goto <bb 3>; [99.13%]

  <bb 3> [99.13%]:
  _2 = s_8(D)->curw;
  if (_2 == wl_12)
    goto <bb 10>; [42.57%]
  else
    goto <bb 4>; [57.43%]

  <bb 4> [56.93%]:
  _3 = &s_8(D)->lastw;
  winlink_stack_remove (_3, wl_12);
  _4 = s_8(D)->curw;
  _5 = &s_8(D)->lastw;
  if (_4 == 0B)
    goto <bb 9>; [42.57%]
  else
    goto <bb 5>; [57.43%]

  <bb 5> [32.70%]:
  winlink_stack_remove (_5, _4);
  _19 = MEM[(struct winlink_stack *)s_8(D) + 24B].tqh_first;
  _4->sentry.tqe_next = _19;
  _20 = _4->sentry.tqe_next;
  if (_20 != 0B)
    goto <bb 6>; [70.00%]
  else
    goto <bb 7>; [30.00%]

  <bb 6> [22.89%]:
  _21 = MEM[(struct winlink_stack *)s_8(D) + 24B].tqh_first;
  _22 = &_4->sentry.tqe_next;
  _21->sentry.tqe_prev = _22;
  goto <bb 8>; [100.00%]

  <bb 7> [9.81%]:
  _23 = &_4->sentry.tqe_next;
  MEM[(struct winlink_stack *)s_8(D) + 24B].tqh_last = _23;

  <bb 8> [32.70%]:
  MEM[(struct winlink_stack *)s_8(D) + 24B].tqh_first = _4;
  _24 = &MEM[(struct winlink_stack *)s_8(D) + 24B].tqh_first;
  _4->sentry.tqe_prev = _24;

  <bb 9> [56.93%]:
  s_8(D)->curw = wl_12;

  <bb 10> [100.00%]:
  # _6 = PHI <-1(2), 1(3), 0(9)>
  return _6;

}



;; Function winlink_remove (winlink_remove, funcdef_no=12, decl_uid=4463, cgraph_uid=25, symbol_order=80)

Disambiguating loop 4 with multiple latches
Merged latch edges of loop 4
Disambiguating loop 3 with multiple latches
Merged latch edges of loop 3
Created preheader block for loop 5
Created preheader block for loop 3
Created preheader block for loop 1
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 140 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 138 25 139 26 27 28 29 30 31 32 33 137 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 108 135 109 110 111 112 113 114 115 116 117 136 118 119 120 121 122 123 124 125 126 128 134 129 130 131 132 133
;;
;; Loop 4
;;  header 134, latch 128
;;  depth 1, outer 0
;;  nodes: 134 128 126 125 124 129
;;
;; Loop 5
;;  header 120, latch 119
;;  depth 1, outer 0
;;  nodes: 120 119 118
;;
;; Loop 3
;;  header 135, latch 108
;;  depth 1, outer 0
;;  nodes: 135 108 84 48 46 47 44 45 35 43 40 41 42 38 36 37 39 34 110 109 82 83 80 81 71 79 76 77 78 74 72 73 75
;;
;; Loop 1
;;  header 25, latch 139
;;  depth 1, outer 0
;;  nodes: 25 139
;;
;; Loop 2
;;  header 7, latch 140
;;  depth 1, outer 0
;;  nodes: 7 140
;; 2 succs { 3 4 }
;; 3 succs { 26 }
;; 4 succs { 5 6 }
;; 5 succs { 26 }
;; 6 succs { 7 }
;; 7 succs { 140 8 }
;; 140 succs { 7 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 14 }
;; 11 succs { 12 13 }
;; 12 succs { 15 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 21 }
;; 18 succs { 19 20 }
;; 19 succs { 22 }
;; 20 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 138 33 }
;; 138 succs { 25 }
;; 25 succs { 139 33 }
;; 139 succs { 25 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 32 }
;; 29 succs { 30 31 }
;; 30 succs { 33 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 137 113 }
;; 137 succs { 135 }
;; 34 succs { 35 71 }
;; 35 succs { 36 44 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 42 }
;; 39 succs { 40 41 }
;; 40 succs { 43 }
;; 41 succs { 43 }
;; 42 succs { 43 }
;; 43 succs { 44 }
;; 44 succs { 46 45 }
;; 45 succs { 46 49 }
;; 46 succs { 48 47 }
;; 47 succs { 48 49 }
;; 48 succs { 108 }
;; 49 succs { 51 50 }
;; 50 succs { 51 61 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 54 55 }
;; 54 succs { 55 }
;; 55 succs { 56 59 }
;; 56 succs { 57 58 }
;; 57 succs { 60 }
;; 58 succs { 60 }
;; 59 succs { 60 }
;; 60 succs { 61 }
;; 61 succs { 62 63 }
;; 62 succs { 63 }
;; 63 succs { 64 65 }
;; 64 succs { 65 }
;; 65 succs { 66 69 }
;; 66 succs { 67 68 }
;; 67 succs { 70 }
;; 68 succs { 70 }
;; 69 succs { 70 }
;; 70 succs { 111 }
;; 71 succs { 72 80 }
;; 72 succs { 73 74 }
;; 73 succs { 74 }
;; 74 succs { 75 78 }
;; 75 succs { 76 77 }
;; 76 succs { 79 }
;; 77 succs { 79 }
;; 78 succs { 79 }
;; 79 succs { 80 }
;; 80 succs { 82 81 }
;; 81 succs { 82 85 }
;; 82 succs { 84 83 }
;; 83 succs { 84 85 }
;; 84 succs { 108 }
;; 85 succs { 87 86 }
;; 86 succs { 87 97 }
;; 87 succs { 88 89 }
;; 88 succs { 89 }
;; 89 succs { 90 91 }
;; 90 succs { 91 }
;; 91 succs { 92 95 }
;; 92 succs { 93 94 }
;; 93 succs { 96 }
;; 94 succs { 96 }
;; 95 succs { 96 }
;; 96 succs { 97 }
;; 97 succs { 98 99 }
;; 98 succs { 99 }
;; 99 succs { 100 101 }
;; 100 succs { 101 }
;; 101 succs { 102 105 }
;; 102 succs { 103 104 }
;; 103 succs { 106 }
;; 104 succs { 106 }
;; 105 succs { 106 }
;; 106 succs { 111 }
;; 108 succs { 135 }
;; 135 succs { 110 109 }
;; 109 succs { 110 111 }
;; 110 succs { 34 111 }
;; 111 succs { 112 113 }
;; 112 succs { 113 }
;; 113 succs { 114 115 }
;; 114 succs { 115 }
;; 115 succs { 116 117 }
;; 116 succs { }
;; 117 succs { 136 133 }
;; 136 succs { 120 }
;; 118 succs { 121 119 }
;; 119 succs { 120 }
;; 120 succs { 118 121 }
;; 121 succs { 122 123 }
;; 122 succs { }
;; 123 succs { 134 }
;; 124 succs { 125 126 }
;; 125 succs { 128 }
;; 126 succs { 128 }
;; 128 succs { 134 }
;; 134 succs { 129 130 }
;; 129 succs { 124 130 }
;; 130 succs { 131 132 }
;; 131 succs { 132 }
;; 132 succs { 133 }
;; 133 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_42 -> { _203 }
.MEM_176 -> { .MEM_240 }
i_178 -> { i_338 }
_181 -> { _202 }
_200 -> { _208 }
_205 -> { _199 }
i_207 -> { i_338 }
_323 -> { _204 }
.MEM_326 -> { .MEM_240 }
i_335 -> { i_338 }
.MEM_339 -> { .MEM_240 }
_340 -> { _201 }
Incremental SSA update started at block: 141
Number of blocks in CFG: 145
Number of blocks to update: 10 (  7%)


Merging blocks 119 and 120
Removing basic block 136
Removing basic block 137
Removing basic block 138
Removing basic block 139
Removing basic block 140
Removing basic block 143
Removing basic block 144
winlink_remove (struct winlinks * wwl, struct winlink * wl)
{
  int D.4654;
  u_int i;
  struct winlink * tmp;
  struct winlink * oleft;
  struct winlink * oright;
  struct winlink * parent;
  struct winlink * elm;
  struct winlink * child;
  struct winlink * parent;
  int color;
  struct winlink * left;
  struct winlink * D.4627;
  struct winlink * elm;
  struct window * w;
  char * _1;
  char * _2;
  unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _19;
  struct winlink * _30;
  struct winlink * _32;
  struct winlink * _40;
  struct winlink * _41;
  struct window * * _42;
  struct winlink * _43;
  struct winlink * _44;
  struct winlink * _45;
  struct winlink * _46;
  struct winlink * _47;
  struct winlink * _48;
  struct winlink * _49;
  struct winlink * _50;
  struct winlink * _57;
  struct winlink * _62;
  int _65;
  struct winlink * _67;
  struct winlink * _68;
  struct winlink * _69;
  struct winlink * _70;
  struct winlink * _71;
  struct winlink * _72;
  struct winlink * _73;
  struct winlink * _74;
  struct winlink * _75;
  struct winlink * _76;
  struct winlink * _79;
  struct winlink * _80;
  int _81;
  struct winlink * _82;
  struct winlink * _83;
  int _84;
  struct winlink * _86;
  struct winlink * _87;
  int _88;
  struct winlink * _91;
  struct winlink * _92;
  struct winlink * _93;
  struct winlink * _94;
  struct winlink * _95;
  struct winlink * _96;
  struct winlink * _97;
  struct winlink * _98;
  struct winlink * _99;
  struct winlink * _100;
  int _102;
  struct winlink * _104;
  struct winlink * _105;
  struct winlink * _107;
  struct winlink * _108;
  struct winlink * _109;
  struct winlink * _110;
  struct winlink * _111;
  struct winlink * _112;
  struct winlink * _113;
  struct winlink * _114;
  struct winlink * _115;
  struct winlink * _116;
  int _119;
  struct winlink * _121;
  struct winlink * _122;
  struct winlink * _123;
  struct winlink * _124;
  struct winlink * _125;
  struct winlink * _126;
  struct winlink * _127;
  struct winlink * _128;
  struct winlink * _129;
  struct winlink * _130;
  struct winlink * _133;
  struct winlink * _134;
  int _135;
  struct winlink * _136;
  struct winlink * _137;
  int _138;
  struct winlink * _141;
  struct winlink * _142;
  int _143;
  struct winlink * _146;
  struct winlink * _147;
  struct winlink * _148;
  struct winlink * _149;
  struct winlink * _150;
  struct winlink * _151;
  struct winlink * _152;
  struct winlink * _153;
  struct winlink * _154;
  struct winlink * _155;
  int _157;
  struct winlink * _159;
  struct winlink * _160;
  struct winlink * _162;
  struct winlink * _163;
  struct winlink * _164;
  struct winlink * _165;
  struct winlink * _166;
  struct winlink * _167;
  struct winlink * _168;
  struct winlink * _169;
  struct winlink * _170;
  struct winlink * _171;
  int _173;
  struct winlink * _174;
  int _179;
  struct window * * _180;
  long unsigned int _181;
  long unsigned int _182;
  long unsigned int _183;
  struct window * * _184;
  unsigned int _185;
  unsigned int _186;
  unsigned int _187;
  struct window * * _188;
  unsigned int _189;
  struct window * * _190;
  unsigned int _191;
  unsigned int _192;
  long unsigned int _193;
  long unsigned int _194;
  struct window * * _195;
  struct window * _196;
  char * _197;
  char * _198;
  struct window * * _199;
  unsigned int _200;
  long unsigned int _201;
  long unsigned int _202;
  struct window * * _203;
  struct window * _204;
  struct window * * _205;
  unsigned int _206;
  unsigned int _208;
  int _209;
  struct window * _323;
  long unsigned int _340;

  <bb 2> [20.55%]:
  w_11 = wl_10(D)->window;
  _30 = wl_10(D)->entry.rbe_left;
  if (_30 == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [6.17%]:
  child_31 = wl_10(D)->entry.rbe_right;
  goto <bb 26>; [100.00%]

  <bb 4> [14.39%]:
  _32 = wl_10(D)->entry.rbe_right;
  if (_32 == 0B)
    goto <bb 5>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 5> [4.32%]:
  child_33 = wl_10(D)->entry.rbe_left;
  goto <bb 26>; [100.00%]

  <bb 6> [10.07%]:
  elm_34 = wl_10(D)->entry.rbe_right;

  <bb 7> [67.13%]:
  # elm_35 = PHI <elm_34(6), left_36(7)>
  left_36 = elm_35->entry.rbe_left;
  if (left_36 != 0B)
    goto <bb 7>; [85.00%]
  else
    goto <bb 8>; [15.00%]

  <bb 8> [10.07%]:
  child_37 = elm_35->entry.rbe_right;
  parent_38 = elm_35->entry.rbe_parent;
  color_39 = elm_35->entry.rbe_color;
  if (child_37 != 0B)
    goto <bb 9>; [70.00%]
  else
    goto <bb 10>; [30.00%]

  <bb 9> [7.05%]:
  child_37->entry.rbe_parent = parent_38;

  <bb 10> [10.07%]:
  if (parent_38 != 0B)
    goto <bb 11>; [70.00%]
  else
    goto <bb 14>; [30.00%]

  <bb 11> [7.05%]:
  _40 = parent_38->entry.rbe_left;
  if (elm_35 == _40)
    goto <bb 12>; [30.00%]
  else
    goto <bb 13>; [70.00%]

  <bb 12> [2.11%]:
  parent_38->entry.rbe_left = child_37;
  goto <bb 15>; [100.00%]

  <bb 13> [4.93%]:
  parent_38->entry.rbe_right = child_37;
  goto <bb 15>; [100.00%]

  <bb 14> [3.02%]:
  wwl_12(D)->rbh_root = child_37;

  <bb 15> [10.07%]:
  _41 = elm_35->entry.rbe_parent;
  if (wl_10(D) == _41)
    goto <bb 16>; [30.00%]
  else
    goto <bb 17>; [70.00%]

  <bb 16> [3.02%]:

  <bb 17> [10.07%]:
  # parent_51 = PHI <parent_38(15), elm_35(16)>
  elm_35->entry = wl_10(D)->entry;
  _43 = wl_10(D)->entry.rbe_parent;
  if (_43 != 0B)
    goto <bb 18>; [70.00%]
  else
    goto <bb 21>; [30.00%]

  <bb 18> [7.05%]:
  _44 = wl_10(D)->entry.rbe_parent;
  _45 = _44->entry.rbe_left;
  if (wl_10(D) == _45)
    goto <bb 19>; [30.00%]
  else
    goto <bb 20>; [70.00%]

  <bb 19> [2.11%]:
  _46 = wl_10(D)->entry.rbe_parent;
  _46->entry.rbe_left = elm_35;
  goto <bb 22>; [100.00%]

  <bb 20> [4.93%]:
  _47 = wl_10(D)->entry.rbe_parent;
  _47->entry.rbe_right = elm_35;
  goto <bb 22>; [100.00%]

  <bb 21> [3.02%]:
  wwl_12(D)->rbh_root = elm_35;

  <bb 22> [10.07%]:
  _48 = wl_10(D)->entry.rbe_left;
  _48->entry.rbe_parent = elm_35;
  _49 = wl_10(D)->entry.rbe_right;
  if (_49 != 0B)
    goto <bb 23>; [70.00%]
  else
    goto <bb 24>; [30.00%]

  <bb 23> [7.05%]:
  _50 = wl_10(D)->entry.rbe_right;
  _50->entry.rbe_parent = elm_35;

  <bb 24> [10.07%]:
  if (parent_51 != 0B)
    goto <bb 25>; [70.00%]
  else
    goto <bb 33> (color); [30.00%]

  <bb 25> [46.99%]:
  # left_52 = PHI <parent_51(24), left_53(25)>
  left_53 = left_52->entry.rbe_parent;
  if (left_53 != 0B)
    goto <bb 25>; [85.00%]
  else
    goto <bb 33> (color); [15.00%]

  <bb 26> [10.48%]:
  # child_56 = PHI <child_31(3), child_33(5)>
  parent_54 = wl_10(D)->entry.rbe_parent;
  color_55 = wl_10(D)->entry.rbe_color;
  if (child_56 != 0B)
    goto <bb 27>; [70.00%]
  else
    goto <bb 28>; [30.00%]

  <bb 27> [7.34%]:
  child_56->entry.rbe_parent = parent_54;

  <bb 28> [10.48%]:
  if (parent_54 != 0B)
    goto <bb 29>; [70.00%]
  else
    goto <bb 32>; [30.00%]

  <bb 29> [7.34%]:
  _57 = parent_54->entry.rbe_left;
  if (wl_10(D) == _57)
    goto <bb 30>; [30.00%]
  else
    goto <bb 31>; [70.00%]

  <bb 30> [2.20%]:
  parent_54->entry.rbe_left = child_56;
  goto <bb 33> (color); [100.00%]

  <bb 31> [5.14%]:
  parent_54->entry.rbe_right = child_56;
  goto <bb 33> (color); [100.00%]

  <bb 32> [3.14%]:
  wwl_12(D)->rbh_root = child_56;

  # child_60 = PHI <child_37(24), child_37(25), child_56(30), child_56(31), child_56(32)>
  # parent_59 = PHI <parent_51(24), parent_51(25), parent_54(30), parent_54(31), parent_54(32)>
  # color_58 = PHI <color_39(24), color_39(25), color_55(30), color_55(31), color_55(32)>
color [20.55%]:
  if (color_58 == 0)
    goto <bb 108>; [36.64%]
  else
    goto <bb 113>; [63.36%]

  <bb 34> [95.79%]:
  _62 = parent_61->entry.rbe_left;
  if (_62 == elm_63)
    goto <bb 35>; [30.00%]
  else
    goto <bb 71>; [70.00%]

  <bb 35> [28.74%]:
  tmp_64 = parent_61->entry.rbe_right;
  _65 = tmp_64->entry.rbe_color;
  if (_65 == 1)
    goto <bb 36>; [34.00%]
  else
    goto <bb 44>; [66.00%]

  <bb 36> [9.77%]:
  tmp_64->entry.rbe_color = 0;
  parent_61->entry.rbe_color = 1;
  tmp_66 = parent_61->entry.rbe_right;
  _67 = tmp_66->entry.rbe_left;
  parent_61->entry.rbe_right = _67;
  _68 = parent_61->entry.rbe_right;
  if (_68 != 0B)
    goto <bb 37>; [70.00%]
  else
    goto <bb 38>; [30.00%]

  <bb 37> [6.84%]:
  _69 = tmp_66->entry.rbe_left;
  _69->entry.rbe_parent = parent_61;

  <bb 38> [9.77%]:
  _70 = parent_61->entry.rbe_parent;
  tmp_66->entry.rbe_parent = _70;
  _71 = tmp_66->entry.rbe_parent;
  if (_71 != 0B)
    goto <bb 39>; [70.00%]
  else
    goto <bb 42>; [30.00%]

  <bb 39> [6.84%]:
  _72 = parent_61->entry.rbe_parent;
  _73 = _72->entry.rbe_left;
  if (parent_61 == _73)
    goto <bb 40>; [30.00%]
  else
    goto <bb 41>; [70.00%]

  <bb 40> [2.05%]:
  _74 = parent_61->entry.rbe_parent;
  _74->entry.rbe_left = tmp_66;
  goto <bb 43>; [100.00%]

  <bb 41> [4.79%]:
  _75 = parent_61->entry.rbe_parent;
  _75->entry.rbe_right = tmp_66;
  goto <bb 43>; [100.00%]

  <bb 42> [2.93%]:
  wwl_12(D)->rbh_root = tmp_66;

  <bb 43> [9.77%]:
  tmp_66->entry.rbe_left = parent_61;
  parent_61->entry.rbe_parent = tmp_66;
  _76 = tmp_66->entry.rbe_parent;
  tmp_77 = parent_61->entry.rbe_right;

  <bb 44> [28.74%]:
  # tmp_78 = PHI <tmp_64(35), tmp_77(43)>
  _79 = tmp_78->entry.rbe_left;
  if (_79 == 0B)
    goto <bb 46>; [30.00%]
  else
    goto <bb 45>; [70.00%]

  <bb 45> [20.12%]:
  _80 = tmp_78->entry.rbe_left;
  _81 = _80->entry.rbe_color;
  if (_81 == 0)
    goto <bb 46>; [97.50%]
  else
    goto <bb 49>; [2.50%]

  <bb 46> [28.24%]:
  _82 = tmp_78->entry.rbe_right;
  if (_82 == 0B)
    goto <bb 48>; [30.00%]
  else
    goto <bb 47>; [70.00%]

  <bb 47> [19.76%]:
  _83 = tmp_78->entry.rbe_right;
  _84 = _83->entry.rbe_color;
  if (_84 == 0)
    goto <bb 48>; [97.50%]
  else
    goto <bb 49>; [2.50%]

  <bb 48> [27.74%]:
  tmp_78->entry.rbe_color = 1;
  parent_85 = parent_61->entry.rbe_parent;
  goto <bb 107>; [100.00%]

  <bb 49> [1.00%]:
  _86 = tmp_78->entry.rbe_right;
  if (_86 == 0B)
    goto <bb 51>; [30.00%]
  else
    goto <bb 50>; [70.00%]

  <bb 50> [0.70%]:
  _87 = tmp_78->entry.rbe_right;
  _88 = _87->entry.rbe_color;
  if (_88 == 0)
    goto <bb 51>; [50.00%]
  else
    goto <bb 61>; [50.00%]

  <bb 51> [0.65%]:
  oleft_89 = tmp_78->entry.rbe_left;
  if (oleft_89 != 0B)
    goto <bb 52>; [70.00%]
  else
    goto <bb 53>; [30.00%]

  <bb 52> [0.45%]:
  oleft_89->entry.rbe_color = 0;

  <bb 53> [0.65%]:
  tmp_78->entry.rbe_color = 1;
  oleft_90 = tmp_78->entry.rbe_left;
  _91 = oleft_90->entry.rbe_right;
  tmp_78->entry.rbe_left = _91;
  _92 = tmp_78->entry.rbe_left;
  if (_92 != 0B)
    goto <bb 54>; [70.00%]
  else
    goto <bb 55>; [30.00%]

  <bb 54> [0.45%]:
  _93 = oleft_90->entry.rbe_right;
  _93->entry.rbe_parent = tmp_78;

  <bb 55> [0.65%]:
  _94 = tmp_78->entry.rbe_parent;
  oleft_90->entry.rbe_parent = _94;
  _95 = oleft_90->entry.rbe_parent;
  if (_95 != 0B)
    goto <bb 56>; [70.00%]
  else
    goto <bb 59>; [30.00%]

  <bb 56> [0.45%]:
  _96 = tmp_78->entry.rbe_parent;
  _97 = _96->entry.rbe_left;
  if (tmp_78 == _97)
    goto <bb 57>; [30.00%]
  else
    goto <bb 58>; [70.00%]

  <bb 57> [0.14%]:
  _98 = tmp_78->entry.rbe_parent;
  _98->entry.rbe_left = oleft_90;
  goto <bb 60>; [100.00%]

  <bb 58> [0.32%]:
  _99 = tmp_78->entry.rbe_parent;
  _99->entry.rbe_right = oleft_90;
  goto <bb 60>; [100.00%]

  <bb 59> [0.19%]:
  wwl_12(D)->rbh_root = oleft_90;

  <bb 60> [0.65%]:
  oleft_90->entry.rbe_right = tmp_78;
  tmp_78->entry.rbe_parent = oleft_90;
  _100 = oleft_90->entry.rbe_parent;
  tmp_101 = parent_61->entry.rbe_right;

  <bb 61> [1.00%]:
  # tmp_103 = PHI <tmp_78(50), tmp_101(60)>
  _102 = parent_61->entry.rbe_color;
  tmp_103->entry.rbe_color = _102;
  parent_61->entry.rbe_color = 0;
  _104 = tmp_103->entry.rbe_right;
  if (_104 != 0B)
    goto <bb 62>; [70.00%]
  else
    goto <bb 63>; [30.00%]

  <bb 62> [0.70%]:
  _105 = tmp_103->entry.rbe_right;
  _105->entry.rbe_color = 0;

  <bb 63> [1.00%]:
  tmp_106 = parent_61->entry.rbe_right;
  _107 = tmp_106->entry.rbe_left;
  parent_61->entry.rbe_right = _107;
  _108 = parent_61->entry.rbe_right;
  if (_108 != 0B)
    goto <bb 64>; [70.00%]
  else
    goto <bb 65>; [30.00%]

  <bb 64> [0.70%]:
  _109 = tmp_106->entry.rbe_left;
  _109->entry.rbe_parent = parent_61;

  <bb 65> [1.00%]:
  _110 = parent_61->entry.rbe_parent;
  tmp_106->entry.rbe_parent = _110;
  _111 = tmp_106->entry.rbe_parent;
  if (_111 != 0B)
    goto <bb 66>; [70.00%]
  else
    goto <bb 69>; [30.00%]

  <bb 66> [0.70%]:
  _112 = parent_61->entry.rbe_parent;
  _113 = _112->entry.rbe_left;
  if (parent_61 == _113)
    goto <bb 67>; [30.00%]
  else
    goto <bb 68>; [70.00%]

  <bb 67> [0.21%]:
  _114 = parent_61->entry.rbe_parent;
  _114->entry.rbe_left = tmp_106;
  goto <bb 70>; [100.00%]

  <bb 68> [0.49%]:
  _115 = parent_61->entry.rbe_parent;
  _115->entry.rbe_right = tmp_106;
  goto <bb 70>; [100.00%]

  <bb 69> [0.30%]:
  wwl_12(D)->rbh_root = tmp_106;

  <bb 70> [1.00%]:
  tmp_106->entry.rbe_left = parent_61;
  parent_61->entry.rbe_parent = tmp_106;
  _116 = tmp_106->entry.rbe_parent;
  elm_117 = wwl_12(D)->rbh_root;
  goto <bb 111>; [100.00%]

  <bb 71> [67.06%]:
  tmp_118 = parent_61->entry.rbe_left;
  _119 = tmp_118->entry.rbe_color;
  if (_119 == 1)
    goto <bb 72>; [34.00%]
  else
    goto <bb 80>; [66.00%]

  <bb 72> [22.80%]:
  tmp_118->entry.rbe_color = 0;
  parent_61->entry.rbe_color = 1;
  tmp_120 = parent_61->entry.rbe_left;
  _121 = tmp_120->entry.rbe_right;
  parent_61->entry.rbe_left = _121;
  _122 = parent_61->entry.rbe_left;
  if (_122 != 0B)
    goto <bb 73>; [70.00%]
  else
    goto <bb 74>; [30.00%]

  <bb 73> [15.96%]:
  _123 = tmp_120->entry.rbe_right;
  _123->entry.rbe_parent = parent_61;

  <bb 74> [22.80%]:
  _124 = parent_61->entry.rbe_parent;
  tmp_120->entry.rbe_parent = _124;
  _125 = tmp_120->entry.rbe_parent;
  if (_125 != 0B)
    goto <bb 75>; [70.00%]
  else
    goto <bb 78>; [30.00%]

  <bb 75> [15.96%]:
  _126 = parent_61->entry.rbe_parent;
  _127 = _126->entry.rbe_left;
  if (parent_61 == _127)
    goto <bb 76>; [30.00%]
  else
    goto <bb 77>; [70.00%]

  <bb 76> [4.79%]:
  _128 = parent_61->entry.rbe_parent;
  _128->entry.rbe_left = tmp_120;
  goto <bb 79>; [100.00%]

  <bb 77> [11.17%]:
  _129 = parent_61->entry.rbe_parent;
  _129->entry.rbe_right = tmp_120;
  goto <bb 79>; [100.00%]

  <bb 78> [6.84%]:
  wwl_12(D)->rbh_root = tmp_120;

  <bb 79> [22.80%]:
  tmp_120->entry.rbe_right = parent_61;
  parent_61->entry.rbe_parent = tmp_120;
  _130 = tmp_120->entry.rbe_parent;
  tmp_131 = parent_61->entry.rbe_left;

  <bb 80> [67.06%]:
  # tmp_132 = PHI <tmp_118(71), tmp_131(79)>
  _133 = tmp_132->entry.rbe_left;
  if (_133 == 0B)
    goto <bb 82>; [30.00%]
  else
    goto <bb 81>; [70.00%]

  <bb 81> [46.94%]:
  _134 = tmp_132->entry.rbe_left;
  _135 = _134->entry.rbe_color;
  if (_135 == 0)
    goto <bb 82>; [97.50%]
  else
    goto <bb 85>; [2.50%]

  <bb 82> [65.88%]:
  _136 = tmp_132->entry.rbe_right;
  if (_136 == 0B)
    goto <bb 84>; [30.00%]
  else
    goto <bb 83>; [70.00%]

  <bb 83> [46.12%]:
  _137 = tmp_132->entry.rbe_right;
  _138 = _137->entry.rbe_color;
  if (_138 == 0)
    goto <bb 84>; [97.50%]
  else
    goto <bb 85>; [2.50%]

  <bb 84> [64.73%]:
  tmp_132->entry.rbe_color = 1;
  parent_140 = parent_61->entry.rbe_parent;
  goto <bb 107>; [100.00%]

  <bb 85> [2.33%]:
  _141 = tmp_132->entry.rbe_left;
  if (_141 == 0B)
    goto <bb 87>; [30.00%]
  else
    goto <bb 86>; [70.00%]

  <bb 86> [1.63%]:
  _142 = tmp_132->entry.rbe_left;
  _143 = _142->entry.rbe_color;
  if (_143 == 0)
    goto <bb 87>; [50.00%]
  else
    goto <bb 97>; [50.00%]

  <bb 87> [1.51%]:
  oright_144 = tmp_132->entry.rbe_right;
  if (oright_144 != 0B)
    goto <bb 88>; [70.00%]
  else
    goto <bb 89>; [30.00%]

  <bb 88> [1.06%]:
  oright_144->entry.rbe_color = 0;

  <bb 89> [1.51%]:
  tmp_132->entry.rbe_color = 1;
  oright_145 = tmp_132->entry.rbe_right;
  _146 = oright_145->entry.rbe_left;
  tmp_132->entry.rbe_right = _146;
  _147 = tmp_132->entry.rbe_right;
  if (_147 != 0B)
    goto <bb 90>; [70.00%]
  else
    goto <bb 91>; [30.00%]

  <bb 90> [1.06%]:
  _148 = oright_145->entry.rbe_left;
  _148->entry.rbe_parent = tmp_132;

  <bb 91> [1.51%]:
  _149 = tmp_132->entry.rbe_parent;
  oright_145->entry.rbe_parent = _149;
  _150 = oright_145->entry.rbe_parent;
  if (_150 != 0B)
    goto <bb 92>; [70.00%]
  else
    goto <bb 95>; [30.00%]

  <bb 92> [1.06%]:
  _151 = tmp_132->entry.rbe_parent;
  _152 = _151->entry.rbe_left;
  if (tmp_132 == _152)
    goto <bb 93>; [30.00%]
  else
    goto <bb 94>; [70.00%]

  <bb 93> [0.32%]:
  _153 = tmp_132->entry.rbe_parent;
  _153->entry.rbe_left = oright_145;
  goto <bb 96>; [100.00%]

  <bb 94> [0.74%]:
  _154 = tmp_132->entry.rbe_parent;
  _154->entry.rbe_right = oright_145;
  goto <bb 96>; [100.00%]

  <bb 95> [0.45%]:
  wwl_12(D)->rbh_root = oright_145;

  <bb 96> [1.51%]:
  oright_145->entry.rbe_left = tmp_132;
  tmp_132->entry.rbe_parent = oright_145;
  _155 = oright_145->entry.rbe_parent;
  tmp_156 = parent_61->entry.rbe_left;

  <bb 97> [2.33%]:
  # tmp_158 = PHI <tmp_132(86), tmp_156(96)>
  _157 = parent_61->entry.rbe_color;
  tmp_158->entry.rbe_color = _157;
  parent_61->entry.rbe_color = 0;
  _159 = tmp_158->entry.rbe_left;
  if (_159 != 0B)
    goto <bb 98>; [70.00%]
  else
    goto <bb 99>; [30.00%]

  <bb 98> [1.63%]:
  _160 = tmp_158->entry.rbe_left;
  _160->entry.rbe_color = 0;

  <bb 99> [2.33%]:
  tmp_161 = parent_61->entry.rbe_left;
  _162 = tmp_161->entry.rbe_right;
  parent_61->entry.rbe_left = _162;
  _163 = parent_61->entry.rbe_left;
  if (_163 != 0B)
    goto <bb 100>; [70.00%]
  else
    goto <bb 101>; [30.00%]

  <bb 100> [1.63%]:
  _164 = tmp_161->entry.rbe_right;
  _164->entry.rbe_parent = parent_61;

  <bb 101> [2.33%]:
  _165 = parent_61->entry.rbe_parent;
  tmp_161->entry.rbe_parent = _165;
  _166 = tmp_161->entry.rbe_parent;
  if (_166 != 0B)
    goto <bb 102>; [70.00%]
  else
    goto <bb 105>; [30.00%]

  <bb 102> [1.63%]:
  _167 = parent_61->entry.rbe_parent;
  _168 = _167->entry.rbe_left;
  if (parent_61 == _168)
    goto <bb 103>; [30.00%]
  else
    goto <bb 104>; [70.00%]

  <bb 103> [0.49%]:
  _169 = parent_61->entry.rbe_parent;
  _169->entry.rbe_left = tmp_161;
  goto <bb 106>; [100.00%]

  <bb 104> [1.14%]:
  _170 = parent_61->entry.rbe_parent;
  _170->entry.rbe_right = tmp_161;
  goto <bb 106>; [100.00%]

  <bb 105> [0.70%]:
  wwl_12(D)->rbh_root = tmp_161;

  <bb 106> [2.33%]:
  tmp_161->entry.rbe_right = parent_61;
  parent_61->entry.rbe_parent = tmp_161;
  _171 = tmp_161->entry.rbe_parent;
  elm_172 = wwl_12(D)->rbh_root;
  goto <bb 111>; [100.00%]

  <bb 107> [92.47%]:
  # parent_177 = PHI <parent_140(84), parent_85(48)>
  # elm_236 = PHI <parent_61(84), parent_61(48)>

  <bb 108> [100.00%]:
  # parent_61 = PHI <parent_177(107), parent_59(33)>
  # elm_63 = PHI <elm_236(107), child_60(33)>
  if (elm_63 == 0B)
    goto <bb 110>; [30.00%]
  else
    goto <bb 109>; [70.00%]

  <bb 109> [70.00%]:
  _173 = elm_63->entry.rbe_color;
  if (_173 == 0)
    goto <bb 110>; [97.50%]
  else
    goto <bb 111>; [2.50%]

  <bb 110> [98.25%]:
  _174 = wwl_12(D)->rbh_root;
  if (elm_63 != _174)
    goto <bb 34>; [97.50%]
  else
    goto <bb 111>; [2.50%]

  <bb 111> [7.53%]:
  # elm_175 = PHI <elm_117(70), elm_172(106), elm_63(109), elm_63(110)>
  if (elm_175 != 0B)
    goto <bb 112>; [73.26%]
  else
    goto <bb 113>; [26.74%]

  <bb 112> [5.52%]:
  elm_175->entry.rbe_color = 0;

  <bb 113> [20.55%]:
  _1 = wl_10(D)->status_text;
  if (_1 != 0B)
    goto <bb 114>; [53.47%]
  else
    goto <bb 115>; [46.53%]

  <bb 114> [10.99%]:
  _2 = wl_10(D)->status_text;
  free (_2);

  <bb 115> [20.55%]:
  free (wl_10(D));
  _3 = w_11->references;
  if (_3 == 0)
    goto <bb 116>; [0.04%]
  else
    goto <bb 117>; [99.96%]

  <bb 116> [0.01%]:
  _19 = __printf_chk (1, "bad reference count%s\n", "");
  exit (1);

  <bb 117> [20.54%]:
  _4 = w_11->references;
  _5 = _4 + 4294967295;
  w_11->references = _5;
  _6 = w_11->references;
  if (_6 == 0)
    goto <bb 118>; [36.64%]
  else
    goto <bb 134>; [63.36%]

  <bb 118> [7.51%]:
  # i_207 = PHI <0(117)>
  _200 = windows.num;
  if (_200 > i_207)
    goto <bb 119>; [92.50%]
  else
    goto <bb 122>; [7.50%]

  <bb 119> [6.94%]:
  _205 = windows.list;
  _340 = (long unsigned int) i_207;
  _181 = _340 * 8;
  _42 = _205 + _181;
  _323 = *_42;
  if (w_11 == _323)
    goto <bb 122>; [7.50%]
  else
    goto <bb 121>; [92.50%]

  <bb 120> [41.28%]:
  _199 = windows.list;
  _201 = (long unsigned int) _206;
  _202 = _201 * 8;
  _203 = _199 + _202;
  _204 = *_203;
  if (w_11 == _204)
    goto <bb 122>; [7.50%]
  else
    goto <bb 121>; [92.50%]

  <bb 121> [44.62%]:
  # i_178 = PHI <_206(120), i_207(119)>
  _206 = i_178 + 1;
  _208 = windows.num;
  if (_206 < _208)
    goto <bb 120>; [92.50%]
  else
    goto <bb 122>; [7.50%]

  <bb 122> [7.53%]:
  # _209 = PHI <0(120), -1(121), -1(118), 0(119)>
  # i_335 = PHI <_206(120), _206(121), i_207(118), i_207(119)>
  if (_209 != 0)
    goto <bb 123>; [0.04%]
  else
    goto <bb 124>; [99.96%]

  <bb 123> [0.00%]:
  _179 = __printf_chk (1, "index not found%s\n", "");
  exit (1);

  <bb 124> [7.52%]:
  _180 = windows.list;
  _182 = (long unsigned int) i_335;
  _183 = _182 * 8;
  _184 = _180 + _183;
  *_184 = 0B;
  goto <bb 129>; [100.00%]

  <bb 125> [44.59%]:
  _185 = windows.num;
  if (_185 > 1)
    goto <bb 126>; [78.31%]
  else
    goto <bb 127>; [21.69%]

  <bb 126> [34.92%]:
  _186 = windows.num;
  _187 = _186 + 4294967295;
  windows.num = _187;
  goto <bb 128>; [100.00%]

  <bb 127> [9.67%]:
  _188 = windows.list;
  free (_188);
  windows.num = 0;
  windows.list = 0B;
  windows.space = 0;

  <bb 128> [44.59%]:

  <bb 129> [52.11%]:
  _189 = windows.num;
  if (_189 != 0)
    goto <bb 130>; [92.50%]
  else
    goto <bb 131>; [7.50%]

  <bb 130> [48.20%]:
  _190 = windows.list;
  _191 = windows.num;
  _192 = _191 + 4294967295;
  _193 = (long unsigned int) _192;
  _194 = _193 * 8;
  _195 = _190 + _194;
  _196 = *_195;
  if (_196 == 0B)
    goto <bb 125>; [92.50%]
  else
    goto <bb 131>; [7.50%]

  <bb 131> [7.52%]:
  _197 = w_11->name;
  if (_197 != 0B)
    goto <bb 132>; [57.44%]
  else
    goto <bb 133>; [42.56%]

  <bb 132> [4.32%]:
  _198 = w_11->name;
  free (_198);

  <bb 133> [7.52%]:
  free (w_11);

  <bb 134> [20.54%]:
  return;

}



;; Function session_destroy (session_destroy, funcdef_no=20, decl_uid=4458, cgraph_uid=19, symbol_order=84)

Disambiguating loop 1 with multiple latches
Merged latch edges of loop 1
Created preheader block for loop 3
Created preheader block for loop 2
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 13 35 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 31 30 37 36 32 33 34
;;
;; Loop 3
;;  header 33, latch 32
;;  depth 1, outer 0
;;  nodes: 33 32
;;
;; Loop 2
;;  header 37, latch 30
;;  depth 1, outer 0
;;  nodes: 37 30
;;
;; Loop 1
;;  header 35, latch 13
;;  depth 1, outer 0
;;  nodes: 35 13 11 10 9 14
;;
;; Loop 4
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4 3
;; 2 succs { 5 }
;; 3 succs { 6 4 }
;; 4 succs { 5 }
;; 5 succs { 3 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 35 }
;; 9 succs { 10 11 }
;; 10 succs { 13 }
;; 11 succs { 13 }
;; 13 succs { 35 }
;; 35 succs { 14 15 }
;; 14 succs { 9 15 }
;; 15 succs { 31 16 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 24 }
;; 20 succs { 21 22 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 25 31 }
;; 25 succs { 26 27 }
;; 26 succs { 28 }
;; 27 succs { 28 }
;; 28 succs { 31 }
;; 31 succs { 37 }
;; 30 succs { 37 }
;; 37 succs { 30 36 }
;; 36 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 32 34 }
;; 34 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_2 -> { _69 }
.MEM_4 -> { .MEM_108 }
_54 -> { _74 }
_61 -> { _73 }
_70 -> { _25 }
.MEM_75 -> { .MEM_49 }
.MEM_77 -> { .MEM_50 }
_113 -> { _72 }
_114 -> { _71 }
_115 -> { _78 }
i_127 -> { i_126 }
_128 -> { _22 }
.MEM_130 -> { .MEM_49 }
.MEM_131 -> { .MEM_49 }
.MEM_132 -> { .MEM_50 }
.MEM_133 -> { .MEM_50 }
.MEM_134 -> { .MEM_108 }
.MEM_135 -> { .MEM_108 }
i_136 -> { i_126 }
i_137 -> { i_126 }
Incremental SSA update started at block: 44
Number of blocks in CFG: 48
Number of blocks to update: 22 ( 46%)


Merging blocks 2 and 44
Merging blocks 4 and 5
Merging blocks 30 and 37
Merging blocks 31 and 41
Merging blocks 32 and 33
Merging blocks 36 and 38
Removing basic block 39
Removing basic block 40
Removing basic block 42
Removing basic block 43
Removing basic block 46
Removing basic block 47
session_destroy (struct session * s)
{
  struct session_group * sg;
  int D.4691;
  u_int i;
  char * _1;
  struct session * * _2;
  struct session * * _3;
  long unsigned int _5;
  long unsigned int _6;
  struct session * * _7;
  unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  struct session * * _11;
  unsigned int _12;
  struct session * * _13;
  unsigned int _14;
  unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  struct session * * _18;
  struct session * _19;
  struct winlink * _20;
  struct winlink_stack * _21;
  struct winlink * _22;
  struct winlink * _23;
  struct winlinks * _24;
  struct winlink * _25;
  char * _26;
  int _46;
  int _47;
  struct session * _54;
  struct session * * _61;
  struct session * * _69;
  struct winlink * _70;
  long unsigned int _71;
  long unsigned int _72;
  struct session * * _73;
  struct session * _74;
  unsigned int _76;
  unsigned int _78;
  int _79;
  struct session * _81;
  struct session * _82;
  struct session * * _83;
  struct session * * _84;
  struct session * * _85;
  struct session * _86;
  struct session * _87;
  struct session * _88;
  struct session * _89;
  struct session * _90;
  struct session * _91;
  struct session * _92;
  struct session * _93;
  struct session * * _94;
  struct session * _95;
  struct session * * _96;
  struct session * _97;
  struct session * _98;
  struct session * * _99;
  struct session * _100;
  struct session * _101;
  struct session_group * _102;
  struct session_group * _103;
  struct session_group * * _104;
  struct session_group * * _105;
  struct session_group * * _106;
  struct session_group * _107;
  long unsigned int _113;
  long unsigned int _114;
  unsigned int _115;
  struct winlink * _128;

  <bb 2> [14.44%]:
  _1 = s_31(D)->name;
  _46 = __printf_chk (1, "session %s destroyed\n", _1);
  _115 = sessions.num;
  if (_115 != 0)
    goto <bb 3>; [92.50%]
  else
    goto <bb 6>; [7.50%]

  <bb 3> [13.32%]:
  _2 = sessions.list;
  _114 = 0;
  _113 = _114 * 8;
  _61 = _2 + _113;
  _54 = *_61;
  if (s_31(D) == _54)
    goto <bb 6>; [7.50%]
  else
    goto <bb 5>; [92.50%]

  <bb 4> [79.18%]:
  _69 = sessions.list;
  _71 = (long unsigned int) _76;
  _72 = _71 * 8;
  _73 = _69 + _72;
  _74 = *_73;
  if (s_31(D) == _74)
    goto <bb 6>; [7.50%]
  else
    goto <bb 5>; [92.50%]

  <bb 5> [85.60%]:
  # i_136 = PHI <_76(4), 0(3)>
  _76 = i_136 + 1;
  _78 = sessions.num;
  if (_76 < _78)
    goto <bb 4>; [92.50%]
  else
    goto <bb 6>; [7.50%]

  <bb 6> [14.44%]:
  # _79 = PHI <0(4), -1(5), -1(2), 0(3)>
  # i_137 = PHI <_76(4), _76(5), 0(2), 0(3)>
  if (_79 != 0)
    goto <bb 7>; [0.04%]
  else
    goto <bb 8>; [99.96%]

  <bb 7> [0.01%]:
  _47 = __printf_chk (1, "session not found%s\n", "");
  exit (1);

  <bb 8> [14.43%]:
  _3 = sessions.list;
  _5 = (long unsigned int) i_137;
  _6 = _5 * 8;
  _7 = _3 + _6;
  *_7 = 0B;
  goto <bb 13>; [100.00%]

  <bb 9> [85.53%]:
  _8 = sessions.num;
  if (_8 > 1)
    goto <bb 10>; [78.31%]
  else
    goto <bb 11>; [21.69%]

  <bb 10> [66.98%]:
  _9 = sessions.num;
  _10 = _9 + 4294967295;
  sessions.num = _10;
  goto <bb 12>; [100.00%]

  <bb 11> [18.55%]:
  _11 = sessions.list;
  free (_11);
  sessions.num = 0;
  sessions.list = 0B;
  sessions.space = 0;

  <bb 12> [85.53%]:

  <bb 13> [99.96%]:
  _12 = sessions.num;
  if (_12 != 0)
    goto <bb 14>; [92.50%]
  else
    goto <bb 15>; [7.50%]

  <bb 14> [92.46%]:
  _13 = sessions.list;
  _14 = sessions.num;
  _15 = _14 + 4294967295;
  _16 = (long unsigned int) _15;
  _17 = _16 * 8;
  _18 = _13 + _17;
  _19 = *_18;
  if (_19 == 0B)
    goto <bb 9>; [92.50%]
  else
    goto <bb 15>; [7.50%]

  <bb 15> [14.43%]:
  sg_80 = session_group_find (s_31(D));
  if (sg_80 == 0B)
    goto <bb 29>; [26.74%]
  else
    goto <bb 16>; [73.26%]

  <bb 16> [10.57%]:
  _81 = s_31(D)->gentry.tqe_next;
  if (_81 != 0B)
    goto <bb 17>; [70.00%]
  else
    goto <bb 18>; [30.00%]

  <bb 17> [7.40%]:
  _82 = s_31(D)->gentry.tqe_next;
  _83 = s_31(D)->gentry.tqe_prev;
  _82->gentry.tqe_prev = _83;
  goto <bb 19>; [100.00%]

  <bb 18> [3.17%]:
  _84 = s_31(D)->gentry.tqe_prev;
  sg_80->sessions.tqh_last = _84;

  <bb 19> [10.57%]:
  _85 = s_31(D)->gentry.tqe_prev;
  _86 = s_31(D)->gentry.tqe_next;
  *_85 = _86;
  _87 = sg_80->sessions.tqh_first;
  _88 = _87->gentry.tqe_next;
  if (_88 == 0B)
    goto <bb 20>; [30.00%]
  else
    goto <bb 24>; [70.00%]

  <bb 20> [3.17%]:
  _89 = sg_80->sessions.tqh_first;
  _90 = _89->gentry.tqe_next;
  if (_90 != 0B)
    goto <bb 21>; [70.00%]
  else
    goto <bb 22>; [30.00%]

  <bb 21> [2.22%]:
  _91 = sg_80->sessions.tqh_first;
  _92 = sg_80->sessions.tqh_first;
  _93 = _92->gentry.tqe_next;
  _94 = _91->gentry.tqe_prev;
  _93->gentry.tqe_prev = _94;
  goto <bb 23>; [100.00%]

  <bb 22> [0.95%]:
  _95 = sg_80->sessions.tqh_first;
  _96 = _95->gentry.tqe_prev;
  sg_80->sessions.tqh_last = _96;

  <bb 23> [3.17%]:
  _97 = sg_80->sessions.tqh_first;
  _98 = sg_80->sessions.tqh_first;
  _99 = _98->gentry.tqe_prev;
  _100 = _97->gentry.tqe_next;
  *_99 = _100;

  <bb 24> [10.57%]:
  _101 = sg_80->sessions.tqh_first;
  if (_101 == 0B)
    goto <bb 25>; [33.47%]
  else
    goto <bb 29>; [66.53%]

  <bb 25> [3.54%]:
  _102 = sg_80->entry.tqe_next;
  if (_102 != 0B)
    goto <bb 26>; [70.00%]
  else
    goto <bb 27>; [30.00%]

  <bb 26> [2.48%]:
  _103 = sg_80->entry.tqe_next;
  _104 = sg_80->entry.tqe_prev;
  _103->entry.tqe_prev = _104;
  goto <bb 28>; [100.00%]

  <bb 27> [1.06%]:
  _105 = sg_80->entry.tqe_prev;
  session_groups.tqh_last = _105;

  <bb 28> [3.54%]:
  _106 = sg_80->entry.tqe_prev;
  _107 = sg_80->entry.tqe_next;
  *_106 = _107;
  free (sg_80);

  <bb 29> [14.43%]:
  _128 = s_31(D)->lastw.tqh_first;
  if (_128 != 0B)
    goto <bb 30>; [85.00%]
  else
    goto <bb 31>; [15.00%]

  <bb 30> [81.78%]:
  _20 = s_31(D)->lastw.tqh_first;
  _21 = &s_31(D)->lastw;
  winlink_stack_remove (_21, _20);
  _22 = s_31(D)->lastw.tqh_first;
  if (_22 != 0B)
    goto <bb 30>; [85.00%]
  else
    goto <bb 31>; [15.00%]

  <bb 31> [14.43%]:
  _70 = s_31(D)->windows.rbh_root;
  if (_70 != 0B)
    goto <bb 32>; [85.00%]
  else
    goto <bb 33>; [15.00%]

  <bb 32> [81.78%]:
  _23 = s_31(D)->windows.rbh_root;
  _24 = &s_31(D)->windows;
  winlink_remove (_24, _23);
  _25 = s_31(D)->windows.rbh_root;
  if (_25 != 0B)
    goto <bb 32>; [85.00%]
  else
    goto <bb 33>; [15.00%]

  <bb 33> [14.43%]:
  _26 = s_31(D)->name;
  free (_26);
  free (s_31(D));
  return;

}



;; Function winlink_add (winlink_add, funcdef_no=7, decl_uid=4469, cgraph_uid=31, symbol_order=72)

Disambiguating loop 3 with multiple latches
Merged latch edges of loop 3
Disambiguating loop 2 with multiple latches
Merged latch edges of loop 2
Created preheader block for loop 3
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 73 8 9 10 11 12 13 14 16 71 17 18 19 20 70 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 65 72 66 67 68 69
;;
;; Loop 3
;;  header 72, latch 65
;;  depth 1, outer 0
;;  nodes: 72 65 63 43 46 26 25 24 23 66 45 44 40 41 42 38 36 37 27 35 32 33 34 30 28 29 31 39 60 61 62 58 56 57 47 55 52 53 54 50 48 49 51 59
;;
;; Loop 2
;;  header 71, latch 16
;;  depth 1, outer 0
;;  nodes: 71 16 14 12 11 13
;;
;; Loop 1
;;  header 4, latch 73
;;  depth 1, outer 0
;;  nodes: 4 73 7 5 6
;; 2 succs { 3 9 }
;; 3 succs { 4 }
;; 4 succs { 8 5 }
;; 5 succs { 7 6 }
;; 6 succs { 7 }
;; 7 succs { 73 8 }
;; 73 succs { 4 }
;; 8 succs { 69 10 }
;; 9 succs { 69 10 }
;; 10 succs { 71 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 68 }
;; 14 succs { 16 }
;; 16 succs { 71 }
;; 71 succs { 11 17 }
;; 17 succs { 18 22 }
;; 18 succs { 19 20 }
;; 19 succs { 70 }
;; 20 succs { 70 }
;; 70 succs { 72 }
;; 22 succs { 70 }
;; 23 succs { 24 44 }
;; 24 succs { 25 27 }
;; 25 succs { 26 27 }
;; 26 succs { 65 }
;; 27 succs { 28 36 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 34 }
;; 31 succs { 32 33 }
;; 32 succs { 35 }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 36 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 42 }
;; 39 succs { 40 41 }
;; 40 succs { 43 }
;; 41 succs { 43 }
;; 42 succs { 43 }
;; 43 succs { 65 }
;; 44 succs { 45 47 }
;; 45 succs { 46 47 }
;; 46 succs { 65 }
;; 47 succs { 48 56 }
;; 48 succs { 49 50 }
;; 49 succs { 50 }
;; 50 succs { 51 54 }
;; 51 succs { 52 53 }
;; 52 succs { 55 }
;; 53 succs { 55 }
;; 54 succs { 55 }
;; 55 succs { 56 }
;; 56 succs { 57 58 }
;; 57 succs { 58 }
;; 58 succs { 59 62 }
;; 59 succs { 60 61 }
;; 60 succs { 63 }
;; 61 succs { 63 }
;; 62 succs { 63 }
;; 63 succs { 65 }
;; 65 succs { 72 }
;; 72 succs { 66 67 }
;; 66 succs { 23 67 }
;; 67 succs { 68 }
;; 68 succs { 69 }
;; 69 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

parent_14 -> { parent_45 }
tmp_22 -> { tmp_39 }
comp_27 -> { comp_47 }
tmp_44 -> { tmp_39 }
parent_116 -> { parent_45 }
comp_183 -> { comp_47 }
Incremental SSA update started at block: 74
Number of blocks in CFG: 77
Number of blocks to update: 15 ( 19%)


Merging blocks 10 and 74
Merging blocks 16 and 71
Removing basic block 73
Removing basic block 75
Removing basic block 76
winlink_add (struct winlinks * wwl, struct window * w, int idx)
{
  struct winlink * parent;
  struct winlink * gparent;
  struct winlink * tmp;
  struct winlink * elm;
  int D.4589;
  struct winlink * tmp;
  struct winlink * parent;
  int comp;
  struct winlink * D.4586;
  int i;
  int D.4573;
  struct winlink * wl;
  int _1;
  struct winlink * _2;
  unsigned int _3;
  unsigned int _4;
  struct winlink * _6;
  struct winlink * _34;
  int _37;
  struct winlink * _46;
  struct winlink * _48;
  int _52;
  int _53;
  int _54;
  struct winlink * _57;
  int _59;
  struct winlink * _60;
  struct winlink * _63;
  struct winlink * _64;
  struct winlink * _65;
  struct winlink * _66;
  struct winlink * _67;
  struct winlink * _68;
  struct winlink * _69;
  struct winlink * _70;
  struct winlink * _71;
  struct winlink * _72;
  struct winlink * _75;
  struct winlink * _76;
  struct winlink * _77;
  struct winlink * _78;
  struct winlink * _79;
  struct winlink * _80;
  struct winlink * _81;
  struct winlink * _82;
  struct winlink * _83;
  struct winlink * _84;
  int _86;
  struct winlink * _87;
  struct winlink * _89;
  struct winlink * _90;
  struct winlink * _91;
  struct winlink * _92;
  struct winlink * _93;
  struct winlink * _94;
  struct winlink * _95;
  struct winlink * _96;
  struct winlink * _97;
  struct winlink * _98;
  struct winlink * _102;
  struct winlink * _103;
  struct winlink * _104;
  struct winlink * _105;
  struct winlink * _106;
  struct winlink * _107;
  struct winlink * _108;
  struct winlink * _109;
  struct winlink * _110;
  struct winlink * _111;
  int _112;
  struct winlink * _113;

  <bb 2> [13.84%]:
  if (idx_9(D) < 0)
    goto <bb 3>; [36.00%]
  else
    goto <bb 9>; [64.00%]

  <bb 3> [4.98%]:
  _1 = ~idx_9(D);

  <bb 4> [34.52%]:
  # i_33 = PHI <_1(3), i_36(7)>
  _34 = winlink_find_by_index (wwl_11(D), i_33);
  if (_34 == 0B)
    goto <bb 8>; [7.50%]
  else
    goto <bb 5>; [92.50%]

  <bb 5> [31.93%]:
  if (i_33 == 10000)
    goto <bb 7>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 6> [21.07%]:
  i_35 = i_33 + 1;

  <bb 7> [31.93%]:
  # i_36 = PHI <0(5), i_35(6)>
  if (_1 != i_36)
    goto <bb 4>; [92.50%]
  else
    goto <bb 8>; [7.50%]

  <bb 8> [4.98%]:
  # _37 = PHI <i_33(4), -1(7)>
  if (_37 == -1)
    goto <bb 68>; [4.85%]
  else
    goto <bb 10>; [95.15%]

  <bb 9> [8.86%]:
  _2 = winlink_find_by_index (wwl_11(D), idx_9(D));
  if (_2 != 0B)
    goto <bb 68>; [18.75%]
  else
    goto <bb 10>; [81.25%]

  <bb 10> [11.94%]:
  # idx_5 = PHI <_37(8), idx_9(D)(9)>
  wl_16 = calloc (1, 136);
  wl_16->idx = idx_5;
  wl_16->window = w_18(D);
  tmp_38 = wwl_11(D)->rbh_root;
  if (tmp_38 != 0B)
    goto <bb 11>; [92.50%]
  else
    goto <bb 16>; [7.50%]

  <bb 11> [92.50%]:
  # tmp_22 = PHI <tmp_49(15), tmp_38(10)>
  _52 = wl_16->idx;
  _53 = tmp_22->idx;
  _54 = _52 - _53;
  if (_54 < 0)
    goto <bb 12>; [36.00%]
  else
    goto <bb 13>; [64.00%]

  <bb 12> [33.30%]:
  tmp_42 = tmp_22->entry.rbe_left;
  goto <bb 15>; [100.00%]

  <bb 13> [59.20%]:
  if (_54 > 0)
    goto <bb 14>; [92.50%]
  else
    goto <bb 67>; [7.50%]

  <bb 14> [54.76%]:
  tmp_43 = tmp_22->entry.rbe_right;

  <bb 15> [88.10%]:
  # tmp_49 = PHI <tmp_43(14), tmp_42(12)>
  # parent_50 = PHI <tmp_22(14), tmp_22(12)>
  # comp_31 = PHI <_54(14), _54(12)>
  if (tmp_49 != 0B)
    goto <bb 11>; [92.50%]
  else
    goto <bb 16>; [7.50%]

  <bb 16> [7.50%]:
  # parent_14 = PHI <parent_50(15), 0B(10)>
  # comp_183 = PHI <comp_31(15), 0(10)>
  wl_16->entry.rbe_parent = parent_14;
  wl_16->entry.rbe_right = 0B;
  _46 = wl_16->entry.rbe_right;
  wl_16->entry.rbe_left = _46;
  wl_16->entry.rbe_color = 1;
  if (parent_14 != 0B)
    goto <bb 17>; [70.00%]
  else
    goto <bb 21>; [30.00%]

  <bb 17> [5.25%]:
  if (comp_183 < 0)
    goto <bb 18>; [36.00%]
  else
    goto <bb 19>; [64.00%]

  <bb 18> [1.89%]:
  parent_14->entry.rbe_left = wl_16;
  goto <bb 20>; [100.00%]

  <bb 19> [3.36%]:
  parent_14->entry.rbe_right = wl_16;

  <bb 20> [7.50%]:
  # elm_99 = PHI <wl_16(19), wl_16(21), wl_16(18)>
  goto <bb 64>; [100.00%]

  <bb 21> [2.25%]:
  wwl_11(D)->rbh_root = wl_16;
  goto <bb 20>; [100.00%]

  <bb 22> [44.45%]:
  gparent_56 = parent_55->entry.rbe_parent;
  _57 = gparent_56->entry.rbe_left;
  if (parent_55 == _57)
    goto <bb 23>; [30.00%]
  else
    goto <bb 43>; [70.00%]

  <bb 23> [13.33%]:
  tmp_58 = gparent_56->entry.rbe_right;
  if (tmp_58 != 0B)
    goto <bb 24>; [70.00%]
  else
    goto <bb 26>; [30.00%]

  <bb 24> [9.33%]:
  _59 = tmp_58->entry.rbe_color;
  if (_59 == 1)
    goto <bb 25>; [20.24%]
  else
    goto <bb 26>; [79.76%]

  <bb 25> [1.89%]:
  tmp_58->entry.rbe_color = 0;
  parent_55->entry.rbe_color = 0;
  gparent_56->entry.rbe_color = 1;
  goto <bb 63>; [100.00%]

  <bb 26> [11.45%]:
  _60 = parent_55->entry.rbe_right;
  if (_60 == elm_61)
    goto <bb 27>; [30.00%]
  else
    goto <bb 35>; [70.00%]

  <bb 27> [3.43%]:
  tmp_62 = parent_55->entry.rbe_right;
  _63 = tmp_62->entry.rbe_left;
  parent_55->entry.rbe_right = _63;
  _64 = parent_55->entry.rbe_right;
  if (_64 != 0B)
    goto <bb 28>; [70.00%]
  else
    goto <bb 29>; [30.00%]

  <bb 28> [2.40%]:
  _65 = tmp_62->entry.rbe_left;
  _65->entry.rbe_parent = parent_55;

  <bb 29> [3.43%]:
  _66 = parent_55->entry.rbe_parent;
  tmp_62->entry.rbe_parent = _66;
  _67 = tmp_62->entry.rbe_parent;
  if (_67 != 0B)
    goto <bb 30>; [70.00%]
  else
    goto <bb 33>; [30.00%]

  <bb 30> [2.40%]:
  _68 = parent_55->entry.rbe_parent;
  _69 = _68->entry.rbe_left;
  if (parent_55 == _69)
    goto <bb 31>; [30.00%]
  else
    goto <bb 32>; [70.00%]

  <bb 31> [0.72%]:
  _70 = parent_55->entry.rbe_parent;
  _70->entry.rbe_left = tmp_62;
  goto <bb 34>; [100.00%]

  <bb 32> [1.68%]:
  _71 = parent_55->entry.rbe_parent;
  _71->entry.rbe_right = tmp_62;
  goto <bb 34>; [100.00%]

  <bb 33> [1.03%]:
  wwl_11(D)->rbh_root = tmp_62;

  <bb 34> [3.43%]:
  tmp_62->entry.rbe_left = parent_55;
  parent_55->entry.rbe_parent = tmp_62;
  _72 = tmp_62->entry.rbe_parent;

  <bb 35> [11.45%]:
  # elm_114 = PHI <elm_61(26), parent_55(34)>
  # parent_73 = PHI <parent_55(26), elm_61(34)>
  parent_73->entry.rbe_color = 0;
  gparent_56->entry.rbe_color = 1;
  tmp_74 = gparent_56->entry.rbe_left;
  _75 = tmp_74->entry.rbe_right;
  gparent_56->entry.rbe_left = _75;
  _76 = gparent_56->entry.rbe_left;
  if (_76 != 0B)
    goto <bb 36>; [70.00%]
  else
    goto <bb 37>; [30.00%]

  <bb 36> [8.01%]:
  _77 = tmp_74->entry.rbe_right;
  _77->entry.rbe_parent = gparent_56;

  <bb 37> [11.45%]:
  _78 = gparent_56->entry.rbe_parent;
  tmp_74->entry.rbe_parent = _78;
  _79 = tmp_74->entry.rbe_parent;
  if (_79 != 0B)
    goto <bb 38>; [70.00%]
  else
    goto <bb 41>; [30.00%]

  <bb 38> [8.01%]:
  _80 = gparent_56->entry.rbe_parent;
  _81 = _80->entry.rbe_left;
  if (gparent_56 == _81)
    goto <bb 39>; [30.00%]
  else
    goto <bb 40>; [70.00%]

  <bb 39> [2.40%]:
  _82 = gparent_56->entry.rbe_parent;
  _82->entry.rbe_left = tmp_74;
  goto <bb 42>; [100.00%]

  <bb 40> [5.61%]:
  _83 = gparent_56->entry.rbe_parent;
  _83->entry.rbe_right = tmp_74;
  goto <bb 42>; [100.00%]

  <bb 41> [3.43%]:
  wwl_11(D)->rbh_root = tmp_74;

  <bb 42> [11.45%]:
  tmp_74->entry.rbe_right = gparent_56;
  gparent_56->entry.rbe_parent = tmp_74;
  _84 = tmp_74->entry.rbe_parent;
  goto <bb 63>; [100.00%]

  <bb 43> [31.11%]:
  tmp_85 = gparent_56->entry.rbe_left;
  if (tmp_85 != 0B)
    goto <bb 44>; [70.00%]
  else
    goto <bb 46>; [30.00%]

  <bb 44> [21.78%]:
  _86 = tmp_85->entry.rbe_color;
  if (_86 == 1)
    goto <bb 45>; [20.24%]
  else
    goto <bb 46>; [79.76%]

  <bb 45> [4.41%]:
  tmp_85->entry.rbe_color = 0;
  parent_55->entry.rbe_color = 0;
  gparent_56->entry.rbe_color = 1;
  goto <bb 63>; [100.00%]

  <bb 46> [26.71%]:
  _87 = parent_55->entry.rbe_left;
  if (elm_61 == _87)
    goto <bb 47>; [30.00%]
  else
    goto <bb 55>; [70.00%]

  <bb 47> [8.01%]:
  tmp_88 = parent_55->entry.rbe_left;
  _89 = tmp_88->entry.rbe_right;
  parent_55->entry.rbe_left = _89;
  _90 = parent_55->entry.rbe_left;
  if (_90 != 0B)
    goto <bb 48>; [70.00%]
  else
    goto <bb 49>; [30.00%]

  <bb 48> [5.61%]:
  _91 = tmp_88->entry.rbe_right;
  _91->entry.rbe_parent = parent_55;

  <bb 49> [8.01%]:
  _92 = parent_55->entry.rbe_parent;
  tmp_88->entry.rbe_parent = _92;
  _93 = tmp_88->entry.rbe_parent;
  if (_93 != 0B)
    goto <bb 50>; [70.00%]
  else
    goto <bb 53>; [30.00%]

  <bb 50> [5.61%]:
  _94 = parent_55->entry.rbe_parent;
  _95 = _94->entry.rbe_left;
  if (parent_55 == _95)
    goto <bb 51>; [30.00%]
  else
    goto <bb 52>; [70.00%]

  <bb 51> [1.68%]:
  _96 = parent_55->entry.rbe_parent;
  _96->entry.rbe_left = tmp_88;
  goto <bb 54>; [100.00%]

  <bb 52> [3.93%]:
  _97 = parent_55->entry.rbe_parent;
  _97->entry.rbe_right = tmp_88;
  goto <bb 54>; [100.00%]

  <bb 53> [2.40%]:
  wwl_11(D)->rbh_root = tmp_88;

  <bb 54> [8.01%]:
  tmp_88->entry.rbe_right = parent_55;
  parent_55->entry.rbe_parent = tmp_88;
  _98 = tmp_88->entry.rbe_parent;

  <bb 55> [26.71%]:
  # elm_115 = PHI <elm_61(46), parent_55(54)>
  # parent_100 = PHI <parent_55(46), elm_61(54)>
  parent_100->entry.rbe_color = 0;
  gparent_56->entry.rbe_color = 1;
  tmp_101 = gparent_56->entry.rbe_right;
  _102 = tmp_101->entry.rbe_left;
  gparent_56->entry.rbe_right = _102;
  _103 = gparent_56->entry.rbe_right;
  if (_103 != 0B)
    goto <bb 56>; [70.00%]
  else
    goto <bb 57>; [30.00%]

  <bb 56> [18.69%]:
  _104 = tmp_101->entry.rbe_left;
  _104->entry.rbe_parent = gparent_56;

  <bb 57> [26.71%]:
  _105 = gparent_56->entry.rbe_parent;
  tmp_101->entry.rbe_parent = _105;
  _106 = tmp_101->entry.rbe_parent;
  if (_106 != 0B)
    goto <bb 58>; [70.00%]
  else
    goto <bb 61>; [30.00%]

  <bb 58> [18.69%]:
  _107 = gparent_56->entry.rbe_parent;
  _108 = _107->entry.rbe_left;
  if (gparent_56 == _108)
    goto <bb 59>; [30.00%]
  else
    goto <bb 60>; [70.00%]

  <bb 59> [5.61%]:
  _109 = gparent_56->entry.rbe_parent;
  _109->entry.rbe_left = tmp_101;
  goto <bb 62>; [100.00%]

  <bb 60> [13.09%]:
  _110 = gparent_56->entry.rbe_parent;
  _110->entry.rbe_right = tmp_101;
  goto <bb 62>; [100.00%]

  <bb 61> [8.01%]:
  wwl_11(D)->rbh_root = tmp_101;

  <bb 62> [26.71%]:
  tmp_101->entry.rbe_left = gparent_56;
  gparent_56->entry.rbe_parent = tmp_101;
  _111 = tmp_101->entry.rbe_parent;

  <bb 63> [44.46%]:
  # elm_128 = PHI <elm_115(62), elm_114(42), gparent_56(45), gparent_56(25)>

  <bb 64> [51.95%]:
  # elm_61 = PHI <elm_99(20), elm_128(63)>
  parent_55 = elm_61->entry.rbe_parent;
  if (parent_55 != 0B)
    goto <bb 65>; [92.50%]
  else
    goto <bb 66>; [7.50%]

  <bb 65> [48.05%]:
  _112 = parent_55->entry.rbe_color;
  if (_112 == 1)
    goto <bb 22>; [92.50%]
  else
    goto <bb 66>; [7.50%]

  <bb 66> [7.50%]:
  _113 = wwl_11(D)->rbh_root;
  _113->entry.rbe_color = 0;

  <bb 67> [11.94%]:
  # _48 = PHI <tmp_22(13), 0B(66)>
  _3 = w_18(D)->references;
  _4 = _3 + 1;
  w_18(D)->references = _4;

  <bb 68> [13.84%]:
  # _6 = PHI <0B(8), 0B(9), wl_16(67)>
  return _6;

}



;; Function session_group_synchronize1 (session_group_synchronize1, funcdef_no=17, decl_uid=4462, cgraph_uid=23, symbol_order=81)

Created preheader block for loop 1
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 19 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 3
;;  header 15, latch 14
;;  depth 1, outer 0
;;  nodes: 15 14
;;
;; Loop 2
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11 9 10
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 4
;;  header 5, latch 4
;;  depth 1, outer 0
;;  nodes: 5 4
;; 2 succs { 17 3 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 4 19 }
;; 19 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 12 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 9 13 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 14 16 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

wl_21 -> { wl_13 }
wl_26 -> { wl_14 }
.MEM_70 -> { .MEM_47 }
parent_72 -> { parent_73 }
.MEM_74 -> { .MEM_48 }
tmp_75 -> { tmp_69 }
.MEM_76 -> { .MEM_45 }
_77 -> { _12 }
wl_78 -> { wl_13 }
wl_79 -> { wl_14 }
.MEM_80 -> { .MEM_45 }
.MEM_81 -> { .MEM_45 }
.MEM_82 -> { .MEM_47 }
.MEM_83 -> { .MEM_47 }
.MEM_84 -> { .MEM_48 }
.MEM_85 -> { .MEM_48 }
tmp_86 -> { tmp_69 }
parent_87 -> { parent_73 }
Incremental SSA update started at block: 29
Number of blocks in CFG: 32
Number of blocks to update: 25 ( 78%)


Merging blocks 3 and 29
Merging blocks 4 and 5
Merging blocks 6 and 7
Merging blocks 8 and 23
Merging blocks 11 and 12
Merging blocks 13 and 20
Merging blocks 14 and 15
Merging blocks 19 and 26
Removing basic block 21
Removing basic block 22
Removing basic block 24
Removing basic block 25
Removing basic block 27
Removing basic block 28
Removing basic block 30
Removing basic block 31
session_group_synchronize1 (struct session * target, struct session * s)
{
  struct winlink * tmp;
  struct winlink * parent;
  struct winlink * D.4675;
  struct winlink * wl2;
  struct winlink * wl;
  struct winlink_stack old_lastw;
  struct winlinks * ww;
  struct winlinks old_windows;
  struct winlink * _1;
  int _2;
  struct window * _3;
  struct winlinks * _4;
  struct winlink * * _5;
  int _6;
  struct winlinks * _7;
  struct winlink * * _8;
  struct winlink * * _9;
  struct winlink * * _10;
  struct winlink * _11;
  struct winlink * _12;
  uint128_t _24;
  long unsigned int _27;
  struct winlink * _77;

  <bb 2> [28.05%]:
  _1 = MEM[(struct winlinks *)target_20(D) + 40B].rbh_root;
  if (_1 == 0B)
    goto <bb 14>; [46.53%]
  else
    goto <bb 3>; [53.47%]

  <bb 3> [15.00%]:
  _27 = MEM[(char * {ref-all})s_23(D) + 40B];
  MEM[(char * {ref-all})&old_windows] = _27;
  s_23(D)->windows.rbh_root = 0B;
  tmp_68 = MEM[(struct winlinks *)target_20(D) + 40B].rbh_root;
  if (tmp_68 != 0B)
    goto <bb 4>; [85.00%]
  else
    goto <bb 5>; [15.00%]

  <bb 4> [85.00%]:
  # tmp_86 = PHI <tmp_71(4), tmp_68(3)>
  tmp_71 = tmp_86->entry.rbe_left;
  if (tmp_71 != 0B)
    goto <bb 4>; [85.00%]
  else
    goto <bb 5>; [15.00%]

  <bb 5> [15.00%]:
  # parent_87 = PHI <tmp_86(4), 0B(3)>
  if (parent_87 != 0B)
    goto <bb 6>; [85.00%]
  else
    goto <bb 7>; [15.00%]

  <bb 6> [85.00%]:
  # wl_78 = PHI <wl_44(6), parent_87(5)>
  _2 = wl_78->idx;
  _3 = wl_78->window;
  _4 = &s_23(D)->windows;
  winlink_add (_4, _3, _2);
  wl_44 = winlinks_RB_NEXT (wl_78);
  if (wl_44 != 0B)
    goto <bb 6>; [85.00%]
  else
    goto <bb 7>; [15.00%]

  <bb 7> [15.00%]:
  _24 = MEM[(char * {ref-all})s_23(D) + 24B];
  MEM[(char * {ref-all})&old_lastw] = _24;
  s_23(D)->lastw.tqh_first = 0B;
  _5 = &s_23(D)->lastw.tqh_first;
  s_23(D)->lastw.tqh_last = _5;
  wl_30 = old_lastw.tqh_first;
  if (wl_30 != 0B)
    goto <bb 8>; [85.00%]
  else
    goto <bb 11>; [15.00%]

  <bb 8> [85.00%]:
  # wl_79 = PHI <wl_42(10), wl_30(7)>
  _6 = wl_79->idx;
  _7 = &s_23(D)->windows;
  wl2_37 = winlink_find_by_index (_7, _6);
  if (wl2_37 != 0B)
    goto <bb 9>; [70.00%]
  else
    goto <bb 10>; [30.00%]

  <bb 9> [59.50%]:
  wl2_37->sentry.tqe_next = 0B;
  _8 = s_23(D)->lastw.tqh_last;
  wl2_37->sentry.tqe_prev = _8;
  _9 = s_23(D)->lastw.tqh_last;
  *_9 = wl2_37;
  _10 = &wl2_37->sentry.tqe_next;
  s_23(D)->lastw.tqh_last = _10;

  <bb 10> [85.00%]:
  wl_42 = wl_79->sentry.tqe_next;
  if (wl_42 != 0B)
    goto <bb 8>; [85.00%]
  else
    goto <bb 11>; [15.00%]

  <bb 11> [15.00%]:
  _11 = s_23(D)->lastw.tqh_first;
  s_23(D)->curw = _11;
  _77 = old_windows.rbh_root;
  if (_77 != 0B)
    goto <bb 12>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 12> [85.00%]:
  wl_34 = old_windows.rbh_root;
  winlink_remove (&old_windows, wl_34);
  _12 = old_windows.rbh_root;
  if (_12 != 0B)
    goto <bb 12>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 13> [15.00%]:
  old_windows ={v} {CLOBBER};
  old_lastw ={v} {CLOBBER};
  goto <bb 15>; [100.00%]

  <bb 14> [13.05%]:
  old_windows ={v} {CLOBBER};
  old_lastw ={v} {CLOBBER};

  <bb 15> [28.05%]:
  return;

}



;; Function session_group_synchronize_from (session_group_synchronize_from, funcdef_no=19, decl_uid=4461, cgraph_uid=22, symbol_order=83)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5
;; 2 succs { 8 3 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 4 8 }
;; 8 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

s_16 -> { s_1 }
.MEM_17 -> { .MEM_12 }
s_18 -> { s_1 }
.MEM_19 -> { .MEM_12 }
Incremental SSA update started at block: 2
Number of blocks in CFG: 12
Number of blocks to update: 8 ( 67%)


Merging blocks 3 and 9
Merging blocks 6 and 7
Removing basic block 10
Removing basic block 11
session_group_synchronize_from (struct session * target)
{
  struct session * s;
  struct session_group * sg;

  <bb 2> [20.48%]:
  sg_7 = session_group_find (target_6(D));
  if (sg_7 == 0B)
    goto <bb 7>; [26.74%]
  else
    goto <bb 3>; [73.26%]

  <bb 3> [15.00%]:
  s_8 = sg_7->sessions.tqh_first;
  if (s_8 != 0B)
    goto <bb 4>; [85.00%]
  else
    goto <bb 7>; [15.00%]

  <bb 4> [85.00%]:
  # s_18 = PHI <s_10(6), s_8(3)>
  if (s_18 != target_6(D))
    goto <bb 5>; [53.47%]
  else
    goto <bb 6>; [46.53%]

  <bb 5> [45.45%]:
  session_group_synchronize1 (target_6(D), s_18);

  <bb 6> [85.00%]:
  s_10 = s_18->gentry.tqe_next;
  if (s_10 != 0B)
    goto <bb 4>; [85.00%]
  else
    goto <bb 7>; [15.00%]

  <bb 7> [20.48%]:
  return;

}



;; Function xrealloc (xrealloc, funcdef_no=1, decl_uid=4487, cgraph_uid=41, symbol_order=63)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 1 }
xrealloc (void * oldptr, size_t nmemb, size_t size)
{
  void * newptr;
  size_t newsize;
  long unsigned int _1;
  int _13;
  int _14;
  int _15;

  <bb 2> [100.00%]:
  newsize_4 = nmemb_2(D) * size_3(D);
  if (newsize_4 == 0)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.04%]:
  _13 = __printf_chk (1, "zero size%s", "");
  exit (1);

  <bb 4> [99.96%]:
  _1 = 1073741824 / nmemb_2(D);
  if (_1 < size_3(D))
    goto <bb 5>; [0.04%]
  else
    goto <bb 6>; [99.96%]

  <bb 5> [0.04%]:
  _14 = __printf_chk (1, "nmemb * size > SIZE_MAX%s", "");
  exit (1);

  <bb 6> [99.92%]:
  newptr_8 = realloc (oldptr_6(D), newsize_4);
  if (newptr_8 == 0B)
    goto <bb 7>; [0.04%]
  else
    goto <bb 8>; [99.96%]

  <bb 7> [0.04%]:
  _15 = __printf_chk (1, "xrealloc failed%s", "");
  exit (1);

  <bb 8> [99.88%]:
  return newptr_8;

}



;; Function window_create1 (window_create1, funcdef_no=25, decl_uid=4455, cgraph_uid=16, symbol_order=90)

Created preheader block for loop 2
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 19 15 20 17 18
;;
;; Loop 2
;;  header 20, latch 15
;;  depth 1, outer 0
;;  nodes: 20 15
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 7 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 18 }
;; 8 succs { 9 10 }
;; 9 succs { }
;; 10 succs { 11 12 }
;; 11 succs { }
;; 12 succs { 13 19 }
;; 13 succs { 19 }
;; 19 succs { 20 }
;; 15 succs { 20 }
;; 20 succs { 15 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_66 -> { .MEM_73 }
_97 -> { _25 }
_98 -> { _26 }
_99 -> { _27 }
_100 -> { _28 }
_101 -> { _29 }
i_102 -> { i_37 }
_103 -> { _10 }
_104 -> { _1 }
_105 -> { _2 }
_106 -> { _3 }
_107 -> { _4 }
_108 -> { _5 }
i_109 -> { i_37 }
i_110 -> { i_37 }
i_111 -> { i_37 }
.MEM_112 -> { .MEM_73 }
.MEM_113 -> { .MEM_73 }
Incremental SSA update started at block: 24
Number of blocks in CFG: 28
Number of blocks to update: 15 ( 54%)


Merging blocks 2 and 24
Merging blocks 5 and 6
Merging blocks 15 and 20
Merging blocks 19 and 21
Removing basic block 22
Removing basic block 23
Removing basic block 26
Removing basic block 27
window_create1 (u_int sx, u_int sy)
{
  u_int i;
  struct window * w;
  struct window * * _1;
  long unsigned int _2;
  long unsigned int _3;
  struct window * * _4;
  struct window * _5;
  struct window * * _6;
  long unsigned int _7;
  long unsigned int _8;
  struct window * * _9;
  unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  struct window * * _18;
  void * _19;
  long unsigned int _20;
  struct window * * _21;
  void * _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  struct window * * _30;
  unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  struct window * * _34;
  unsigned int _35;
  unsigned int _36;
  int _68;
  int _69;
  long unsigned int _97;
  unsigned int _98;
  unsigned int _99;
  long unsigned int _100;
  long unsigned int _101;
  unsigned int _103;
  struct window * * _104;
  long unsigned int _105;
  long unsigned int _106;
  struct window * * _107;
  struct window * _108;

  <bb 2> [14.44%]:
  w_43 = malloc (88);
  w_43->name = 0B;
  w_43->flags = 0;
  w_43->active = 0B;
  w_43->lastlayout = -1;
  w_43->layout_root = 0B;
  w_43->sx = sx_49(D);
  w_43->sy = sy_51(D);
  _103 = windows.num;
  if (_103 != 0)
    goto <bb 3>; [92.50%]
  else
    goto <bb 7>; [7.50%]

  <bb 3> [13.32%]:
  _104 = windows.list;
  _105 = 0;
  _106 = _105 * 8;
  _107 = _104 + _106;
  _108 = *_107;
  if (_108 == 0B)
    goto <bb 5>; [7.50%]
  else
    goto <bb 6>; [92.50%]

  <bb 4> [79.18%]:
  _1 = windows.list;
  _2 = (long unsigned int) i_53;
  _3 = _2 * 8;
  _4 = _1 + _3;
  _5 = *_4;
  if (_5 == 0B)
    goto <bb 5>; [7.50%]
  else
    goto <bb 6>; [92.50%]

  <bb 5> [6.94%]:
  # i_109 = PHI <i_53(4), 0(3)>
  _6 = windows.list;
  _7 = (long unsigned int) i_109;
  _8 = _7 * 8;
  _9 = _6 + _8;
  *_9 = w_43;
  goto <bb 7>; [100.00%]

  <bb 6> [85.60%]:
  # i_110 = PHI <i_53(4), 0(3)>
  i_53 = i_110 + 1;
  _10 = windows.num;
  if (_10 > i_53)
    goto <bb 4>; [92.50%]
  else
    goto <bb 7>; [7.50%]

  <bb 7> [14.44%]:
  # i_111 = PHI <i_109(5), i_53(6), 0(2)>
  _11 = windows.num;
  if (_11 == i_111)
    goto <bb 8>; [37.68%]
  else
    goto <bb 17>; [62.32%]

  <bb 8> [5.44%]:
  _12 = windows.num;
  if (_12 > 1073741823)
    goto <bb 9>; [0.04%]
  else
    goto <bb 10>; [99.96%]

  <bb 9> [0.00%]:
  _68 = __printf_chk (1, "number too big%s", "");
  exit (1);

  <bb 10> [5.44%]:
  _13 = windows.num;
  _14 = _13 + 1;
  _15 = 1073741824 / _14;
  if (_15 <= 7)
    goto <bb 11>; [0.04%]
  else
    goto <bb 12>; [99.96%]

  <bb 11> [0.00%]:
  _69 = __printf_chk (1, "size too big%s", "");
  exit (1);

  <bb 12> [5.44%]:
  _16 = windows.space;
  if (_16 == 0)
    goto <bb 13>; [33.00%]
  else
    goto <bb 14>; [67.00%]

  <bb 13> [1.79%]:
  windows.space = 80;
  _17 = windows.space;
  _18 = windows.list;
  _19 = xrealloc (_18, 1, _17);
  windows.list = _19;

  <bb 14> [5.44%]:
  _97 = windows.space;
  _98 = windows.num;
  _99 = _98 + 1;
  _100 = (long unsigned int) _99;
  _101 = _100 * 8;
  if (_97 <= _101)
    goto <bb 15>; [85.00%]
  else
    goto <bb 16>; [15.00%]

  <bb 15> [30.80%]:
  _20 = windows.space;
  _21 = windows.list;
  _22 = xrealloc (_21, 2, _20);
  windows.list = _22;
  _23 = windows.space;
  _24 = _23 * 2;
  windows.space = _24;
  _25 = windows.space;
  _26 = windows.num;
  _27 = _26 + 1;
  _28 = (long unsigned int) _27;
  _29 = _28 * 8;
  if (_25 <= _29)
    goto <bb 15>; [85.00%]
  else
    goto <bb 16>; [15.00%]

  <bb 16> [5.44%]:
  _30 = windows.list;
  _31 = windows.num;
  _32 = (long unsigned int) _31;
  _33 = _32 * 8;
  _34 = _30 + _33;
  *_34 = w_43;
  _35 = windows.num;
  _36 = _35 + 1;
  windows.num = _36;

  <bb 17> [14.43%]:
  w_43->references = 0;
  return w_43;

}



;; Function main (main, funcdef_no=26, decl_uid=3986, cgraph_uid=0, symbol_order=94) (executed once)

Created preheader block for loop 7
Created preheader block for loop 8
Created preheader block for loop 11
Created preheader block for loop 9
Created preheader block for loop 4
;; 13 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 26 25 90 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 86 55 56 57 58 59 89 60 61 62 63 64 65 66 91 67 68 69 70 71 87 72 73 74 88 75 76 77 78 79 80 81 82 83 84 85
;;
;; Loop 2
;;  header 84, latch 83
;;  depth 1, outer 0
;;  nodes: 84 83
;;
;; Loop 7
;;  header 80, latch 79
;;  depth 1, outer 0
;;  nodes: 80 79 63 71 78 67 56 66 64 65 75 77 88 76 74 72 73 91 87 69 70 68 60 62 89 61 59 57 58
;;
;; Loop 8
;;  header 72, latch 91
;;  depth 2, outer 7
;;  nodes: 72 91 66 64 65 78 75 77 88 76 74 73
;;
;; Loop 11
;;  header 77, latch 76
;;  depth 3, outer 8
;;  nodes: 77 76 75
;;
;; Loop 12
;;  header 74, latch 73
;;  depth 3, outer 8
;;  nodes: 74 73
;;
;; Loop 9
;;  header 62, latch 61
;;  depth 2, outer 7
;;  nodes: 62 61 60
;;
;; Loop 10
;;  header 59, latch 58
;;  depth 2, outer 7
;;  nodes: 59 58
;;
;; Loop 1
;;  header 51, latch 50
;;  depth 1, outer 0
;;  nodes: 51 50 41 49 48 44 42 43 47 45 46 39 40 36 38 30 37 35 31 34 32 33 28 17 27 90 26 25 23 22 20 18 14 16 12 15 13 10 11 7 9 5 8 6 4 3
;;
;; Loop 6
;;  header 47, latch 46
;;  depth 2, outer 1
;;  nodes: 47 46
;;
;; Loop 4
;;  header 90, latch 25
;;  depth 2, outer 1
;;  nodes: 90 25
;;
;; Loop 5
;;  header 16, latch 15
;;  depth 2, outer 1
;;  nodes: 16 15 13
;;
;; Loop 3
;;  header 9, latch 8
;;  depth 2, outer 1
;;  nodes: 9 8 6 7
;; 2 succs { 51 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 10 8 }
;; 8 succs { 9 }
;; 9 succs { 6 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 16 }
;; 13 succs { 14 15 }
;; 14 succs { 17 }
;; 15 succs { 16 }
;; 16 succs { 13 17 }
;; 17 succs { 18 28 }
;; 18 succs { 19 20 }
;; 19 succs { }
;; 20 succs { 21 22 }
;; 21 succs { }
;; 22 succs { 23 26 }
;; 23 succs { 26 }
;; 26 succs { 90 }
;; 25 succs { 90 }
;; 90 succs { 25 27 }
;; 27 succs { 28 }
;; 28 succs { 29 30 }
;; 29 succs { }
;; 30 succs { 31 38 }
;; 31 succs { 35 32 }
;; 32 succs { 33 34 }
;; 33 succs { 34 }
;; 34 succs { 35 }
;; 35 succs { 36 37 }
;; 36 succs { 39 }
;; 37 succs { 38 }
;; 38 succs { 39 }
;; 39 succs { 40 41 }
;; 40 succs { 41 }
;; 41 succs { 42 50 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 49 45 }
;; 45 succs { 47 }
;; 46 succs { 47 }
;; 47 succs { 48 46 }
;; 48 succs { 49 }
;; 49 succs { 50 }
;; 50 succs { 51 }
;; 51 succs { 3 52 }
;; 52 succs { 82 53 }
;; 53 succs { 82 54 }
;; 54 succs { 55 86 }
;; 86 succs { 80 }
;; 55 succs { 82 }
;; 56 succs { 79 57 }
;; 57 succs { 59 }
;; 58 succs { 59 }
;; 59 succs { 58 89 }
;; 89 succs { 62 }
;; 60 succs { 63 61 }
;; 61 succs { 62 }
;; 62 succs { 60 63 }
;; 63 succs { 79 87 }
;; 64 succs { 65 66 }
;; 65 succs { 66 }
;; 66 succs { 67 91 }
;; 91 succs { 72 }
;; 67 succs { 79 68 }
;; 68 succs { 69 70 }
;; 69 succs { 71 }
;; 70 succs { 71 }
;; 71 succs { 79 }
;; 87 succs { 72 }
;; 72 succs { 74 }
;; 73 succs { 74 }
;; 74 succs { 73 88 }
;; 88 succs { 77 }
;; 75 succs { 78 76 }
;; 76 succs { 77 }
;; 77 succs { 75 78 }
;; 78 succs { 64 79 }
;; 79 succs { 80 }
;; 80 succs { 56 81 }
;; 81 succs { 82 }
;; 82 succs { 84 }
;; 83 succs { 84 }
;; 84 succs { 83 85 }
;; 85 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

parent_17 -> { parent_245 }
parent_20 -> { parent_220 }
_51 -> { _269 }
tmp_61 -> { tmp_216 }
_85 -> { _118 }
_86 -> { _145 }
i_92 -> { i_100 }
_94 -> { _108 }
_96 -> { _119 }
_97 -> { _120 }
_157 -> { _143 }
wl_162 -> { wl_211 }
_167 -> { _246 }
.MEM_204 -> { .MEM_263 }
wl_205 -> { wl_236 }
idx_206 -> { idx_28 }
i_209 -> { i_29 }
tmp_217 -> { tmp_241 }
_219 -> { _117 }
_222 -> { _126 }
i_223 -> { i_116 }
_235 -> { _25 }
_242 -> { _237 }
_244 -> { _115 }
_247 -> { _147 }
_248 -> { _146 }
.MEM_270 -> { .MEM_75 }
i_271 -> { i_198 }
_276 -> { _208 }
.MEM_283 -> { .MEM_74 }
target_284 -> { target_174 }
_314 -> { _203 }
.MEM_315 -> { .MEM_250 }
_319 -> { _212 }
_323 -> { _144 }
idx_343 -> { idx_28 }
i_344 -> { i_29 }
.MEM_345 -> { .MEM_74 }
.MEM_346 -> { .MEM_74 }
.MEM_347 -> { .MEM_75 }
.MEM_348 -> { .MEM_75 }
i_349 -> { i_100 }
i_350 -> { i_116 }
i_351 -> { i_116 }
i_352 -> { i_116 }
target_353 -> { target_174 }
target_354 -> { target_174 }
i_355 -> { i_198 }
wl_356 -> { wl_211 }
tmp_357 -> { tmp_216 }
parent_358 -> { parent_220 }
wl_359 -> { wl_236 }
tmp_360 -> { tmp_241 }
parent_361 -> { parent_245 }
.MEM_362 -> { .MEM_250 }
.MEM_363 -> { .MEM_250 }
.MEM_364 -> { .MEM_263 }
.MEM_365 -> { .MEM_263 }
Incremental SSA update started at block: 112
Number of blocks in CFG: 128
Number of blocks to update: 86 ( 67%)


Merging blocks 2 and 112
Merging blocks 5 and 125
Merging blocks 8 and 9
Merging blocks 12 and 121
Merging blocks 15 and 16
Merging blocks 25 and 90
Merging blocks 26 and 118
Merging blocks 45 and 115
Merging blocks 46 and 47
Merging blocks 50 and 51
Merging blocks 57 and 109
Merging blocks 58 and 59
Merging blocks 61 and 62
Merging blocks 72 and 102
Merging blocks 73 and 74
Merging blocks 76 and 77
Merging blocks 79 and 80
Merging blocks 82 and 92
Merging blocks 83 and 84
Removing basic block 86
Removing basic block 87
Merging blocks 88 and 98
Merging blocks 89 and 105
Removing basic block 91
Removing basic block 93
Removing basic block 94
Removing basic block 96
Removing basic block 97
Removing basic block 100
Removing basic block 101
Removing basic block 103
Removing basic block 104
Removing basic block 107
Removing basic block 108
Removing basic block 110
Removing basic block 111
Removing basic block 113
Removing basic block 114
Removing basic block 116
Removing basic block 117
Removing basic block 119
Removing basic block 120
Removing basic block 123
Removing basic block 124
Removing basic block 126
Removing basic block 127
main (int argc, char * * argv)
{
  struct winlink * tmp;
  struct winlink * parent;
  struct winlink * D.4879;
  struct winlink * wl;
  struct winlink * D.4874;
  struct session_group * sg;
  int D.4859;
  struct winlink * tmp;
  struct winlink * parent;
  struct winlink * D.4852;
  struct winlink * wl;
  int D.4847;
  struct session * s;
  struct winlink * wl;
  u_int i;
  struct session * dst_s;
  struct winlink * src_wl;
  struct winlink * dst_wl;
  struct window * src_w;
  struct window * dst_w;
  int D.4828;
  struct session_group * sg;
  struct session_group * sg;
  struct session * target;
  struct winlink * wl;
  struct winlink * D.4799;
  struct window * w;
  struct winlink * D.4793;
  struct session * s;
  u_int i;
  struct session * D.4776;
  struct winlink * wl;
  struct winlink * D.4751;
  struct session * s;
  u_int i;
  struct session * D.4738;
  int i;
  int sy;
  int sx;
  int idx;
  char * name;
  char * cmd;
  char * target;
  struct window * w;
  struct session * groupwith;
  struct session * s;
  long unsigned int _1;
  long unsigned int _2;
  char * * _3;
  char * _4;
  char _5;
  long unsigned int _6;
  long unsigned int _7;
  sizetype _8;
  char * * _9;
  char * _10;
  long unsigned int _11;
  long unsigned int _12;
  char * * _13;
  char * _14;
  unsigned int _15;
  unsigned int _16;
  unsigned int _18;
  unsigned int _19;
  struct winlink * _21;
  int _22;
  struct session * * _23;
  struct session * _24;
  unsigned int _25;
  bool _51;
  long unsigned int _85;
  unsigned int _86;
  unsigned int _94;
  struct session * * _96;
  struct session * _97;
  struct session * * _99;
  long unsigned int _101;
  long unsigned int _102;
  struct session * * _103;
  char * _105;
  int _106;
  unsigned int _108;
  struct session * _109;
  struct winlinks * _110;
  int _112;
  struct winlink * * _114;
  struct session * * _115;
  long unsigned int _117;
  long unsigned int _118;
  struct session * * _119;
  struct session * _120;
  struct session * * _121;
  long unsigned int _122;
  long unsigned int _123;
  struct session * * _124;
  unsigned int _126;
  unsigned int _127;
  unsigned int _128;
  int _129;
  unsigned int _130;
  unsigned int _131;
  unsigned int _132;
  int _133;
  long unsigned int _134;
  long unsigned int _135;
  struct session * * _136;
  void * _137;
  long unsigned int _138;
  struct session * * _139;
  void * _140;
  long unsigned int _141;
  long unsigned int _142;
  long unsigned int _143;
  unsigned int _144;
  unsigned int _145;
  long unsigned int _146;
  long unsigned int _147;
  struct session * * _148;
  unsigned int _149;
  long unsigned int _150;
  long unsigned int _151;
  struct session * * _152;
  unsigned int _153;
  unsigned int _154;
  int _155;
  char * _156;
  long unsigned int _157;
  struct winlink * _158;
  int _159;
  char * _160;
  int _161;
  struct session * _163;
  unsigned int _164;
  unsigned int _165;
  bool _167;
  struct winlink * _168;
  struct winlinks * _169;
  int _171;
  struct session_group * * _178;
  struct session_group * * _179;
  struct session_group * * _180;
  struct session * * _181;
  struct session * * _182;
  struct session * * _183;
  struct session * * _184;
  struct session * * _186;
  struct session * * _187;
  struct session * * _188;
  int _193;
  int _194;
  struct session * _195;
  int _196;
  struct session * * _197;
  long unsigned int _199;
  long unsigned int _200;
  struct session * * _201;
  bool _203;
  unsigned int _208;
  bool _210;
  struct window * _212;
  int _214;
  long unsigned int _219;
  bool _221;
  unsigned int _222;
  struct winlink_stack * _224;
  struct winlinks * _225;
  struct winlink * _226;
  int _227;
  struct session_group * _229;
  struct session_group * _230;
  struct session_group * * _231;
  struct session_group * * _232;
  struct session_group * * _233;
  struct session_group * _234;
  unsigned int _235;
  struct window * _237;
  struct winlink * _239;
  struct window * _242;
  struct session * * _244;
  bool _246;
  long unsigned int _247;
  long unsigned int _248;
  bool _268;
  bool _269;
  unsigned int _276;
  bool _314;
  struct window * _319;
  unsigned int _323;

  <bb 2> [1.07%]:
  windows.num = 0;
  windows.list = 0B;
  windows.space = 0;
  sessions.num = 0;
  sessions.list = 0B;
  sessions.space = 0;
  session_groups.tqh_first = 0B;
  session_groups.tqh_last = &session_groups.tqh_first;
  if (argc_44(D) > 0)
    goto <bb 3>; [85.00%]
  else
    goto <bb 48>; [15.00%]

  <bb 3> [6.03%]:
  # idx_343 = PHI <idx_64(47), 0(2)>
  # i_344 = PHI <i_70(47), 0(2)>
  _1 = (long unsigned int) i_344;
  _2 = _1 * 8;
  _3 = argv_48(D) + _2;
  _4 = *_3;
  _5 = *_4;
  _221 = i_344 > 0;
  _268 = _5 == 116;
  _210 = _221 & _268;
  if (_210 != 0)
    goto <bb 4>; [33.22%]
  else
    goto <bb 5>; [66.78%]

  <bb 4> [2.00%]:
  _6 = (long unsigned int) i_344;
  _7 = _6 * 8;
  _8 = _7 + 18446744073709551608;
  _9 = argv_48(D) + _8;
  _10 = *_9;
  target_50 = strdup (_10);

  <bb 5> [6.05%]:
  # target_26 = PHI <target_50(4), 0B(3)>
  _94 = sessions.num;
  if (_94 != 0)
    goto <bb 6>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 6> [45.16%]:
  # i_349 = PHI <i_107(8), 0(5)>
  _99 = sessions.list;
  _101 = (long unsigned int) i_349;
  _102 = _101 * 8;
  _103 = _99 + _102;
  s_104 = *_103;
  if (s_104 != 0B)
    goto <bb 7>; [70.00%]
  else
    goto <bb 8>; [30.00%]

  <bb 7> [31.61%]:
  _105 = s_104->name;
  _106 = strcmp (_105, target_26);
  if (_106 == 0)
    goto <bb 9>; [7.50%]
  else
    goto <bb 8>; [92.50%]

  <bb 8> [42.79%]:
  i_107 = i_349 + 1;
  _108 = sessions.num;
  if (i_107 < _108)
    goto <bb 6>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 9> [6.03%]:
  # _109 = PHI <s_104(7), 0B(8), 0B(5)>
  if (target_26 == 0B)
    goto <bb 10>; [17.43%]
  else
    goto <bb 11>; [82.57%]

  <bb 10> [1.05%]:
  cmd_53 = strdup ("cmd");

  <bb 11> [6.03%]:
  # cmd_27 = PHI <0B(9), cmd_53(10)>
  free (target_26);
  _11 = (long unsigned int) i_344;
  _12 = _11 * 8;
  _13 = argv_48(D) + _12;
  _14 = *_13;
  name_56 = strdup (_14);
  _15 = (unsigned int) sy_57(D);
  _16 = (unsigned int) sx_58(D);
  idx_59 = idx_343 + 1;
  s_113 = malloc (112);
  s_113->references = 0;
  s_113->flags = 0;
  s_113->curw = 0B;
  s_113->lastw.tqh_first = 0B;
  _114 = &s_113->lastw.tqh_first;
  s_113->lastw.tqh_last = _114;
  s_113->windows.rbh_root = 0B;
  s_113->tio = 0B;
  s_113->sx = _16;
  s_113->sy = _15;
  _222 = sessions.num;
  if (_222 != 0)
    goto <bb 12>; [92.50%]
  else
    goto <bb 16>; [7.50%]

  <bb 12> [5.57%]:
  _244 = sessions.list;
  _219 = 0;
  _85 = _219 * 8;
  _96 = _244 + _85;
  _97 = *_96;
  if (_97 == 0B)
    goto <bb 14>; [7.50%]
  else
    goto <bb 15>; [92.50%]

  <bb 13> [33.08%]:
  _115 = sessions.list;
  _117 = (long unsigned int) i_125;
  _118 = _117 * 8;
  _119 = _115 + _118;
  _120 = *_119;
  if (_120 == 0B)
    goto <bb 14>; [7.50%]
  else
    goto <bb 15>; [92.50%]

  <bb 14> [2.90%]:
  # i_350 = PHI <i_125(13), 0(12)>
  _121 = sessions.list;
  _122 = (long unsigned int) i_350;
  _123 = _122 * 8;
  _124 = _121 + _123;
  *_124 = s_113;
  goto <bb 16>; [100.00%]

  <bb 15> [35.76%]:
  # i_351 = PHI <i_125(13), 0(12)>
  i_125 = i_351 + 1;
  _126 = sessions.num;
  if (i_125 < _126)
    goto <bb 13>; [92.50%]
  else
    goto <bb 16>; [7.50%]

  <bb 16> [6.03%]:
  # i_352 = PHI <i_350(14), i_125(15), 0(11)>
  _127 = sessions.num;
  if (i_352 == _127)
    goto <bb 17>; [34.00%]
  else
    goto <bb 26>; [66.00%]

  <bb 17> [2.05%]:
  _128 = sessions.num;
  if (_128 > 1073741823)
    goto <bb 18>; [0.04%]
  else
    goto <bb 19>; [99.96%]

  <bb 18> [0.00%]:
  _129 = __printf_chk (1, "number too big%s", "");
  exit (1);

  <bb 19> [2.05%]:
  _130 = sessions.num;
  _131 = _130 + 1;
  _132 = 1073741824 / _131;
  if (_132 <= 7)
    goto <bb 20>; [0.04%]
  else
    goto <bb 21>; [99.96%]

  <bb 20> [0.00%]:
  _133 = __printf_chk (1, "size too big%s", "");
  exit (1);

  <bb 21> [2.05%]:
  _134 = sessions.space;
  if (_134 == 0)
    goto <bb 22>; [33.00%]
  else
    goto <bb 23>; [67.00%]

  <bb 22> [0.68%]:
  sessions.space = 80;
  _135 = sessions.space;
  _136 = sessions.list;
  _137 = xrealloc (_136, 1, _135);
  sessions.list = _137;

  <bb 23> [2.05%]:
  _157 = sessions.space;
  _323 = sessions.num;
  _86 = _323 + 1;
  _248 = (long unsigned int) _86;
  _247 = _248 * 8;
  if (_157 <= _247)
    goto <bb 24>; [85.00%]
  else
    goto <bb 25>; [15.00%]

  <bb 24> [11.61%]:
  _138 = sessions.space;
  _139 = sessions.list;
  _140 = xrealloc (_139, 2, _138);
  sessions.list = _140;
  _141 = sessions.space;
  _142 = _141 * 2;
  sessions.space = _142;
  _143 = sessions.space;
  _144 = sessions.num;
  _145 = _144 + 1;
  _146 = (long unsigned int) _145;
  _147 = _146 * 8;
  if (_143 <= _147)
    goto <bb 24>; [85.00%]
  else
    goto <bb 25>; [15.00%]

  <bb 25> [2.05%]:
  _148 = sessions.list;
  _149 = sessions.num;
  _150 = (long unsigned int) _149;
  _151 = _150 * 8;
  _152 = _148 + _151;
  *_152 = s_113;
  _153 = sessions.num;
  _154 = _153 + 1;
  sessions.num = _154;

  <bb 26> [6.03%]:
  if (name_56 == 0B)
    goto <bb 27>; [0.04%]
  else
    goto <bb 28>; [99.96%]

  <bb 27> [0.00%]:
  _155 = __printf_chk (1, "no name%s\n", "");
  exit (1);

  <bb 28> [6.03%]:
  _156 = strdup (name_56);
  s_113->name = _156;
  if (cmd_27 != 0B)
    goto <bb 29>; [70.00%]
  else
    goto <bb 36>; [30.00%]

  <bb 29> [4.22%]:
  _164 = s_113->sy;
  _165 = s_113->sx;
  w_166 = window_create1 (_165, _164);
  if (w_166 == 0B)
    goto <bb 33>; [7.92%]
  else
    goto <bb 30>; [92.08%]

  <bb 30> [3.89%]:
  _169 = &s_113->windows;
  wl_170 = winlink_add (_169, w_166, idx_343);
  if (wl_170 == 0B)
    goto <bb 31>; [19.86%]
  else
    goto <bb 32>; [80.14%]

  <bb 31> [0.77%]:
  _171 = __printf_chk (1, "index in use: %d\n", idx_343);

  <bb 32> [3.89%]:
  session_group_synchronize_from (s_113);

  <bb 33> [4.22%]:
  # _168 = PHI <0B(29), wl_170(32)>
  if (_168 == 0B)
    goto <bb 34>; [4.07%]
  else
    goto <bb 35>; [95.93%]

  <bb 34> [0.17%]:
  session_destroy (s_113);
  goto <bb 37>; [100.00%]

  <bb 35> [4.05%]:
  _158 = s_113->windows.rbh_root;
  _159 = _158->idx;
  session_select (s_113, _159);

  <bb 36> [5.86%]:
  _160 = s_113->name;
  _161 = __printf_chk (1, "session %s created\n", _160);

  <bb 37> [6.03%]:
  # _163 = PHI <0B(34), s_113(36)>
  _18 = (unsigned int) sy_57(D);
  _19 = (unsigned int) sx_58(D);
  w_63 = window_create1 (_19, _18);
  idx_64 = idx_343 + 2;
  _110 = &_163->windows;
  wl_111 = winlink_add (_110, w_63, idx_59);
  if (wl_111 == 0B)
    goto <bb 38>; [19.86%]
  else
    goto <bb 39>; [80.14%]

  <bb 38> [1.20%]:
  _112 = __printf_chk (1, "index in use: %d\n", idx_59);

  <bb 39> [6.03%]:
  session_group_synchronize_from (_163);
  free (cmd_27);
  if (_109 != 0B)
    goto <bb 40>; [53.47%]
  else
    goto <bb 47>; [46.53%]

  <bb 40> [3.22%]:
  sg_176 = session_group_find (_109);
  if (sg_176 == 0B)
    goto <bb 41>; [19.86%]
  else
    goto <bb 42>; [80.14%]

  <bb 41> [0.64%]:
  sg_177 = malloc (32);
  sg_177->entry.tqe_next = 0B;
  _178 = session_groups.tqh_last;
  sg_177->entry.tqe_prev = _178;
  _179 = session_groups.tqh_last;
  *_179 = sg_177;
  _180 = &sg_177->entry.tqe_next;
  session_groups.tqh_last = _180;
  sg_177->sessions.tqh_first = 0B;
  _181 = &sg_177->sessions.tqh_first;
  sg_177->sessions.tqh_last = _181;
  _109->gentry.tqe_next = 0B;
  _182 = sg_177->sessions.tqh_last;
  _109->gentry.tqe_prev = _182;
  _183 = sg_177->sessions.tqh_last;
  *_183 = _109;
  _184 = &_109->gentry.tqe_next;
  sg_177->sessions.tqh_last = _184;

  <bb 42> [3.22%]:
  # sg_185 = PHI <sg_176(40), sg_177(41)>
  _163->gentry.tqe_next = 0B;
  _186 = sg_185->sessions.tqh_last;
  _163->gentry.tqe_prev = _186;
  _187 = sg_185->sessions.tqh_last;
  *_187 = _163;
  _188 = &_163->gentry.tqe_next;
  sg_185->sessions.tqh_last = _188;
  sg_172 = session_group_find (_163);
  if (sg_172 == 0B)
    goto <bb 46>; [26.74%]
  else
    goto <bb 43>; [73.26%]

  <bb 43> [2.36%]:
  target_173 = sg_172->sessions.tqh_first;
  _51 = _163 != target_173;
  _314 = target_173 == 0B;
  _167 = _314 | _51;
  if (_167 != 0)
    goto <bb 45>; [14.44%]
  else
    goto <bb 44>; [85.56%]

  <bb 44> [14.00%]:
  # target_353 = PHI <target_175(44), target_173(43)>
  target_175 = target_353->gentry.tqe_next;
  _269 = _163 != target_175;
  _203 = target_175 == 0B;
  _246 = _203 | _269;
  if (_246 != 0)
    goto <bb 45>; [14.44%]
  else
    goto <bb 44>; [85.56%]

  <bb 45> [2.36%]:
  # target_354 = PHI <target_175(44), target_173(43)>
  session_group_synchronize1 (target_354, _163);

  <bb 46> [3.22%]:
  _21 = _163->windows.rbh_root;
  _22 = _21->idx;
  session_select (_163, _22);

  <bb 47> [6.03%]:
  i_70 = i_344 + 1;
  if (argc_44(D) > i_70)
    goto <bb 3>; [85.00%]
  else
    goto <bb 48>; [15.00%]

  <bb 48> [1.06%]:
  dst_wl_189 = cmd_find_pane (0, &dst_s);
  if (dst_wl_189 == 0B)
    goto <bb 78>; [1.74%]
  else
    goto <bb 49>; [98.26%]

  <bb 49> [1.05%]:
  dst_w_190 = dst_wl_189->window;
  src_wl_191 = cmd_find_pane (1, 0B);
  if (src_wl_191 == 0B)
    goto <bb 78>; [0.87%]
  else
    goto <bb 50>; [99.13%]

  <bb 50> [1.04%]:
  src_w_192 = src_wl_191->window;
  if (dst_w_190 == src_w_192)
    goto <bb 52>; [0.87%]
  else
    goto <bb 51>; [99.13%]

  <bb 51> [1.03%]:
  # i_271 = PHI <0(50)>
  _276 = sessions.num;
  if (i_271 < _276)
    goto <bb 53>; [85.00%]
  else
    goto <bb 77>; [15.00%]

  <bb 52> [0.01%]:
  _193 = __printf_chk (1, "can\'t join a pane to its own window\n");
  goto <bb 78>; [100.00%]

  <bb 53> [5.82%]:
  # i_355 = PHI <i_207(76), i_271(51)>
  _197 = sessions.list;
  _199 = (long unsigned int) i_355;
  _200 = _199 * 8;
  _201 = _197 + _200;
  s_202 = *_201;
  if (s_202 == 0B)
    goto <bb 76>; [30.00%]
  else
    goto <bb 54>; [70.00%]

  <bb 54> [4.08%]:
  tmp_215 = MEM[(struct winlinks *)s_202 + 40B].rbh_root;
  if (tmp_215 != 0B)
    goto <bb 55>; [85.00%]
  else
    goto <bb 56>; [15.00%]

  <bb 55> [23.11%]:
  # tmp_357 = PHI <tmp_218(55), tmp_215(54)>
  tmp_218 = tmp_357->entry.rbe_left;
  if (tmp_218 != 0B)
    goto <bb 55>; [85.00%]
  else
    goto <bb 56>; [15.00%]

  <bb 56> [4.08%]:
  # parent_358 = PHI <tmp_357(55), 0B(54)>
  if (parent_358 != 0B)
    goto <bb 57>; [92.50%]
  else
    goto <bb 60>; [7.50%]

  <bb 57> [3.76%]:
  _319 = parent_358->window;
  if (src_w_192 == _319)
    goto <bb 60>; [7.50%]
  else
    goto <bb 59>; [92.50%]

  <bb 58> [22.36%]:
  _212 = wl_213->window;
  if (src_w_192 == _212)
    goto <bb 60>; [7.50%]
  else
    goto <bb 59>; [92.50%]

  <bb 59> [24.17%]:
  # wl_356 = PHI <wl_213(58), parent_358(57)>
  wl_213 = winlinks_RB_NEXT (wl_356);
  if (wl_213 != 0B)
    goto <bb 58>; [92.50%]
  else
    goto <bb 60>; [7.50%]

  <bb 60> [4.08%]:
  # _214 = PHI <1(58), 0(59), 0(56), 1(57)>
  if (_214 == 0)
    goto <bb 76>; [48.88%]
  else
    goto <bb 69>; [51.12%]

  <bb 61> [13.35%]:
  _224 = &s_202->lastw;
  winlink_stack_remove (_224, _239);
  _225 = &s_202->windows;
  winlink_remove (_225, _239);
  session_group_synchronize_from (s_202);
  _226 = s_202->windows.rbh_root;
  if (_226 == 0B)
    goto <bb 62>; [19.86%]
  else
    goto <bb 63>; [80.14%]

  <bb 62> [2.65%]:
  session_destroy (s_202);

  <bb 63> [13.35%]:
  # _227 = PHI <0(61), 1(62)>
  if (_227 != 0)
    goto <bb 64>; [7.50%]
  else
    goto <bb 69>; [92.50%]

  <bb 64> [1.00%]:
  sg_228 = session_group_find (s_202);
  if (sg_228 == 0B)
    goto <bb 76>; [26.74%]
  else
    goto <bb 65>; [73.26%]

  <bb 65> [0.73%]:
  _229 = sg_228->entry.tqe_next;
  if (_229 != 0B)
    goto <bb 66>; [70.00%]
  else
    goto <bb 67>; [30.00%]

  <bb 66> [0.51%]:
  _230 = sg_228->entry.tqe_next;
  _231 = sg_228->entry.tqe_prev;
  _230->entry.tqe_prev = _231;
  goto <bb 68>; [100.00%]

  <bb 67> [0.22%]:
  _232 = sg_228->entry.tqe_prev;
  session_groups.tqh_last = _232;

  <bb 68> [0.73%]:
  _233 = sg_228->entry.tqe_prev;
  _234 = sg_228->entry.tqe_next;
  *_233 = _234;
  free (sg_228);
  goto <bb 76>; [100.00%]

  <bb 69> [14.44%]:
  tmp_240 = MEM[(struct winlinks *)s_202 + 40B].rbh_root;
  if (tmp_240 != 0B)
    goto <bb 70>; [85.00%]
  else
    goto <bb 71>; [15.00%]

  <bb 70> [81.81%]:
  # tmp_360 = PHI <tmp_243(70), tmp_240(69)>
  tmp_243 = tmp_360->entry.rbe_left;
  if (tmp_243 != 0B)
    goto <bb 70>; [85.00%]
  else
    goto <bb 71>; [15.00%]

  <bb 71> [14.44%]:
  # parent_361 = PHI <tmp_360(70), 0B(69)>
  if (parent_361 != 0B)
    goto <bb 72>; [92.50%]
  else
    goto <bb 75>; [7.50%]

  <bb 72> [13.32%]:
  _242 = parent_361->window;
  if (src_w_192 == _242)
    goto <bb 75>; [7.50%]
  else
    goto <bb 74>; [92.50%]

  <bb 73> [79.18%]:
  _237 = wl_238->window;
  if (src_w_192 == _237)
    goto <bb 75>; [7.50%]
  else
    goto <bb 74>; [92.50%]

  <bb 74> [85.60%]:
  # wl_359 = PHI <wl_238(73), parent_361(72)>
  wl_238 = winlinks_RB_NEXT (wl_359);
  if (wl_238 != 0B)
    goto <bb 73>; [92.50%]
  else
    goto <bb 75>; [7.50%]

  <bb 75> [14.44%]:
  # _239 = PHI <wl_238(73), 0B(74), 0B(71), parent_361(72)>
  if (_239 != 0B)
    goto <bb 61>; [92.50%]
  else
    goto <bb 76>; [7.50%]

  <bb 76> [5.82%]:
  i_207 = i_355 + 1;
  _208 = sessions.num;
  if (i_207 < _208)
    goto <bb 53>; [85.00%]
  else
    goto <bb 77>; [15.00%]

  <bb 77> [1.03%]:
  _194 = dst_wl_189->idx;
  _195 = dst_s;
  session_select (_195, _194);

  <bb 78> [1.06%]:
  # _196 = PHI <-1(48), -1(49), -1(52), 0(77)>
  dst_s ={v} {CLOBBER};
  _235 = sessions.num;
  if (_235 != 0)
    goto <bb 79>; [85.00%]
  else
    goto <bb 80>; [15.00%]

  <bb 79> [6.04%]:
  _23 = sessions.list;
  _24 = *_23;
  session_destroy (_24);
  _25 = sessions.num;
  if (_25 != 0)
    goto <bb 79>; [85.00%]
  else
    goto <bb 80>; [15.00%]

  <bb 80> [1.06%]:
  return 0;

}


