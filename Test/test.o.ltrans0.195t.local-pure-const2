
;; Function test22 (test22, funcdef_no=2, decl_uid=3987, cgraph_uid=2, symbol_order=61)



 local analysis of test22
   scanning: test22 (k_2(D));
    Recursive call can loop.
  scanning: free (k_2(D));
  scanning: return;
Function is locally looping.
Function can locally free.
__attribute__((noinline))
test22 (int * k)
{
  <bb 2> [100.00%]:
  test22 (k_2(D));
  free (k_2(D));
  return;

}



;; Function foo2 (foo2, funcdef_no=0, decl_uid=3989, cgraph_uid=4, symbol_order=54)



 local analysis of foo2
   scanning: _1 = (long unsigned int) z_7(D);
  scanning: a2_10 = malloc (_1);
  scanning: p3_12 = malloc (_1);
  scanning: p4_14 = malloc (_1);
  scanning: *a2_10 = 10;
    Indirect ref write is not const/pure
  scanning: if (tmp_16(D) > 10)
  scanning: pthread_mutex_unlock (&mLock);
  scanning: p3_22 = malloc (_1);
  scanning: free (p3_22);
  scanning: *p3_12 = 10;
    Indirect ref write is not const/pure
  scanning: free (p4_14);
  scanning: return _5;
Function is locally looping.
Function can locally free.
__attribute__((noinline))
foo2 (int z)
{
  int tmp;
  int * p4;
  int * p3;
  int * a2;
  long unsigned int _1;
  int * _5;

  <bb 2> [100.00%]:
  _1 = (long unsigned int) z_7(D);
  a2_10 = malloc (_1);
  p3_12 = malloc (_1);
  p4_14 = malloc (_1);
  *a2_10 = 10;
  if (tmp_16(D) > 10)
    goto <bb 3>; [46.00%]
  else
    goto <bb 4>; [54.00%]

  <bb 3> [46.00%]:
  pthread_mutex_unlock (&mLock);
  p3_22 = malloc (_1);
  free (p3_22);
  goto <bb 5>; [100.00%]

  <bb 4> [54.00%]:
  *p3_12 = 10;
  free (p4_14);

  <bb 5> [100.00%]:
  # _5 = PHI <p3_22(3), p4_14(4)>
  return _5;

}



;; Function foo (foo, funcdef_no=1, decl_uid=3988, cgraph_uid=3, symbol_order=56)



 local analysis of foo
   scanning: p2_3 = malloc (1);
  scanning: *p2_3 = 1;
    Indirect ref write is not const/pure
  scanning: _7 = foo2 (z_5(D));
  scanning: return _7;
Function is locally looping.
__attribute__((noinline))
foo (int z)
{
  int * p2;
  int * _7;

  <bb 2> [100.00%]:
  p2_3 = malloc (1);
  *p2_3 = 1;
  _7 = foo2 (z_5(D));
  return _7;

}



;; Function child (child, funcdef_no=3, decl_uid=3986, cgraph_uid=1, symbol_order=57)



 local analysis of child
   scanning: pthread_mutex_lock (&mLock2);
  scanning: pthread_mutex_lock (&mLock2);
  scanning: pthread_mutex_lock (&mLock);
  scanning: pthread_mutex_lock (&mLock);
  scanning: ppData_13 = malloc (10);
  scanning: _1 = malloc (20);
  scanning: pData = _1;
  scanning: a_17 = foo (1);
  scanning: data2 = 0;
  scanning: pData = &data2;
  scanning: data2 = 10;
  scanning: _3 = MEM[(int * *)&pData + 8B];
    Indirect ref read is not const
  scanning: *_3 = 10;
    Indirect ref write is not const/pure
  scanning: _4 = MEM[(int * *)&pData + 16B];
    Indirect ref read is not const
  scanning: *_4 = 10;
    Indirect ref write is not const/pure
  scanning: data2 = 12;
  scanning: free (&data2);
  scanning: pthread_mutex_unlock (&mLock);
  scanning: free (&pData);
  scanning: return;
Function is locally looping.
Function can locally free.
child (void * data)
{
  int data2;
  int * a;
  int * pData;
  int * * ppData;
  union pthread_mutex_t mLock2;
  void * _1;
  int * _3;
  int * _4;

  <bb 2> [100.00%]:
  pthread_mutex_lock (&mLock2);
  pthread_mutex_lock (&mLock2);
  pthread_mutex_lock (&mLock);
  pthread_mutex_lock (&mLock);
  ppData_13 = malloc (10);
  _1 = malloc (20);
  pData = _1;
  a_17 = foo (1);
  data2 = 0;
  pData = &data2;
  data2 = 10;
  _3 = MEM[(int * *)&pData + 8B];
  *_3 = 10;
  _4 = MEM[(int * *)&pData + 16B];
  *_4 = 10;
  data2 = 12;
  free (&data2);
  pthread_mutex_unlock (&mLock);
  free (&pData);
  mLock2 ={v} {CLOBBER};
  pData ={v} {CLOBBER};
  data2 ={v} {CLOBBER};
  return;

}



;; Function main (main, funcdef_no=4, decl_uid=3985, cgraph_uid=0, symbol_order=62) (executed once)



 local analysis of main
   scanning: p3_8 = foo (2);
  scanning: *p3_8 = 1;
    Indirect ref write is not const/pure
  scanning: free (p3_8);
  scanning: p_12 = foo2 (2);
  scanning: *p_12 = 2;
    Indirect ref write is not const/pure
  scanning: p2_15 = foo2 (2);
  scanning: *p2_15 = 4;
    Indirect ref write is not const/pure
  scanning: free (p_12);
  scanning: free (p2_15);
  scanning: q_20 = malloc (5);
  scanning: *q_20 = 10;
    Indirect ref write is not const/pure
  scanning: test22 (q_20);
  scanning: _1 = (long int) q_20;
  scanning: _2 = (int) _1;
  scanning: _3 = (long int) _2;
  scanning: _4 = (void *) _3;
  scanning: child (_4);
  scanning: pthread_mutex_destroy (&mLock);
  scanning: pthread_create (&t, 0B, child, &buff);
  scanning: _5 = t;
  scanning: pthread_join (_5, 0B);
  scanning: pthread_mutex_destroy (&mLock);
  scanning: return 0;
Function is locally looping.
Function can locally free.
main ()
{
  pthread_t t;
  int * q;
  char buff[50];
  int * p3;
  int * p2;
  int * p;
  long int _1;
  int _2;
  long int _3;
  void * _4;
  long unsigned int _5;

  <bb 2> [100.00%]:
  p3_8 = foo (2);
  *p3_8 = 1;
  free (p3_8);
  p_12 = foo2 (2);
  *p_12 = 2;
  p2_15 = foo2 (2);
  *p2_15 = 4;
  free (p_12);
  free (p2_15);
  q_20 = malloc (5);
  *q_20 = 10;
  test22 (q_20);
  _1 = (long int) q_20;
  _2 = (int) _1;
  _3 = (long int) _2;
  _4 = (void *) _3;
  child (_4);
  pthread_mutex_destroy (&mLock);
  pthread_create (&t, 0B, child, &buff);
  _5 = t;
  pthread_join (_5, 0B);
  pthread_mutex_destroy (&mLock);
  buff ={v} {CLOBBER};
  t ={v} {CLOBBER};
  return 0;

}


