
;; Function select (select, funcdef_no=22, decl_uid=2523, cgraph_uid=23, symbol_order=22)

Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int select (int a, struct fd_set * b, struct fd_set * c, struct fd_set * d, struct timeval * e)
{
  int D.3520;

  <bb 2> :
  if (b != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = (long int) a;
  b->__fds_bits[0] = _1;

  <bb 4> :
  if (c != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _2 = (long int) a;
  c->__fds_bits[0] = _2;

  <bb 6> :
  if (d != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _3 = (long int) a;
  d->__fds_bits[0] = _3;

  <bb 8> :
  D.3520 = 1;
  return D.3520;

}



;; Function ms_to_timeval (ms_to_timeval, funcdef_no=23, decl_uid=3484, cgraph_uid=24, symbol_order=23)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void ms_to_timeval (struct timeval * tv, int ms)
{
  <bb 2> :
  if (ms < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  ms = 0;

  <bb 4> :
  _1 = ms / 1000;
  _2 = (long int) _1;
  tv->tv_sec = _2;
  _3 = ms % 1000;
  _4 = _3 * 1000;
  _5 = (long int) _4;
  tv->tv_usec = _5;
  return;

}



;; Function ssh_packet_write_wait (ssh_packet_write_wait, funcdef_no=24, decl_uid=3487, cgraph_uid=25, symbol_order=24)

Removing basic block 6
Removing basic block 18
Merging blocks 25 and 26
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
;;
;; Loop 1
;;  header 21, latch 19
;;  depth 1, outer 0
;;  nodes: 21 19 17 10 12 16 15 13 11 8 9 6 7 14
;;
;; Loop 2
;;  header 8, multiple latches: 15 14
;;  depth 2, outer 1
;;  nodes: 8 15 14 13 11 12 10 9
;; 2 succs { 3 4 }
;; 3 succs { 23 }
;; 4 succs { 5 21 }
;; 5 succs { 23 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 17 11 }
;; 11 succs { 12 13 }
;; 12 succs { 17 13 }
;; 13 succs { 14 15 }
;; 14 succs { 8 }
;; 15 succs { 16 8 }
;; 16 succs { 17 }
;; 17 succs { 18 19 }
;; 18 succs { 23 }
;; 19 succs { 20 21 }
;; 20 succs { 23 }
;; 21 succs { 6 22 }
;; 22 succs { 23 }
;; 23 succs { 1 }
int ssh_packet_write_wait (struct ssh * ssh)
{
  struct session_state * state;
  struct timeval * timeoutp;
  struct timeval timeout;
  struct timeval start;
  int ms_remain;
  int r;
  int ret;
  struct fd_set * setp;
  int D.3535;
  int D.3529;
  int D.3526;

  <bb 2> :
  ms_remain = 0;
  timeoutp = 0B;
  state = ssh->state;
  _1 = state->connection_out;
  _2 = _1 + 64;
  _3 = _2 / 64;
  _4 = (long unsigned int) _3;
  _5 = _4 * 8;
  setp = malloc (_5);
  if (setp == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3526 = -2;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 4> :
  _6 = rand ();
  _7 = _6 % 2;
  _8 = _7 == 1;
  r = (int) _8;
  if (r != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 5> :
  D.3526 = r;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 6> :
  _9 = state->connection_out;
  _10 = _9 + 64;
  _11 = _10 / 64;
  _12 = (long unsigned int) _11;
  _13 = _12 * 8;
  memset (setp, 0, _13);
  _14 = state->connection_out;
  D.3529 = _14 / 64;
  _15 = setp->__fds_bits[D.3529];
  _16 = state->connection_out;
  _17 = _16 & 63;
  _18 = 1 << _17;
  _19 = (long int) _18;
  _20 = _15 | _19;
  setp->__fds_bits[D.3529] = _20;
  _21 = state->packet_timeout_ms;
  if (_21 > 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  ms_remain = state->packet_timeout_ms;
  timeoutp = &timeout;

  <bb 8> :
  _22 = state->packet_timeout_ms;
  if (_22 != -1)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  ms_to_timeval (&timeout, ms_remain);
  gettimeofday (&start, 0B);

  <bb 10> :
  _23 = state->connection_out;
  _24 = _23 + 1;
  ret = select (_24, 0B, setp, 0B, timeoutp);
  if (ret >= 0)
    goto <bb 17>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _25 = __errno_location ();
  D.3535 = *_25;
  _26 = D.3535 != 11;
  _27 = D.3535 != 4;
  _28 = _26 & _27;
  if (_28 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  _29 = __errno_location ();
  _30 = *_29;
  if (_30 != 11)
    goto <bb 17>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _31 = state->packet_timeout_ms;
  if (_31 == -1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  // predicted unlikely by continue predictor.
  goto <bb 8>; [INV]

  <bb 15> :
  ms_remain = rand ();
  if (ms_remain <= 0)
    goto <bb 16>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 16> :
  ret = 0;

  <bb 17> :
  if (ret == 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  free (setp);
  D.3526 = -53;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 19> :
  _32 = rand ();
  _33 = _32 % 2;
  _34 = _33 == 1;
  r = (int) _34;
  if (r != 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 20> :
  free (setp);
  D.3526 = r;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 23>; [INV]

  <bb 21> :
  _35 = rand ();
  _36 = _35 % 2;
  if (_36 == 1)
    goto <bb 6>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 22> :
  free (setp);
  D.3526 = 0;

  <bb 23> :
  start = {CLOBBER};
  timeout = {CLOBBER};
  return D.3526;

}



;; Function main (main, funcdef_no=25, decl_uid=3508, cgraph_uid=26, symbol_order=25)

Removing basic block 4
Merging blocks 2 and 3
Merging blocks 2 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
int main (int argc, char * * argv)
{
  struct ssh ssh;
  int D.3549;

  <bb 2> :
  _1 = time (0B);
  _2 = (unsigned int) _1;
  srand (_2);
  ssh_packet_write_wait (&ssh);
  D.3549 = 0;
  ssh = {CLOBBER};
  return D.3549;

}


