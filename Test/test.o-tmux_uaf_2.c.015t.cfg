
;; Function xrealloc (xrealloc, funcdef_no=22, decl_uid=3997, cgraph_uid=23, symbol_order=23)

Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 1 }
void * xrealloc (void * oldptr, size_t nmemb, size_t size)
{
  void * newptr;
  size_t newsize;
  void * D.4078;

  <bb 2> :
  newsize = nmemb * size;
  if (newsize == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  printf ("zero size%s", "");
  exit (1);

  <bb 4> :
  _1 = 1073741824 / nmemb;
  if (size > _1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  printf ("nmemb * size > SIZE_MAX%s", "");
  exit (1);

  <bb 6> :
  newptr = realloc (oldptr, newsize);
  if (newptr == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  printf ("xrealloc failed%s", "");
  exit (1);

  <bb 8> :
  D.4078 = newptr;
  return D.4078;

}



;; Function buffer_create (buffer_create, funcdef_no=23, decl_uid=4002, cgraph_uid=24, symbol_order=24)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
struct buffer * buffer_create (size_t size)
{
  struct buffer * b;
  struct buffer * D.4082;

  <bb 2> :
  if (size == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  printf ("zero size%s", "");
  exit (1);

  <bb 4> :
  b = calloc (1, 32);
  _1 = malloc (size);
  b->base = _1;
  b->space = size;
  D.4082 = b;
  return D.4082;

}



;; Function buffer_destroy (buffer_destroy, funcdef_no=24, decl_uid=4006, cgraph_uid=25, symbol_order=25)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void buffer_destroy (struct buffer * b)
{
  <bb 2> :
  _1 = b->base;
  free (_1);
  free (b);
  return;

}



;; Function window_index (window_index, funcdef_no=25, decl_uid=4011, cgraph_uid=26, symbol_order=26)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int window_index (struct windows * ww, struct window * w, u_int * i)
{
  int D.4086;

  <bb 2> :
  *i = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = ww->list;
  _2 = *i;
  _3 = (long unsigned int) _2;
  _4 = _3 * 8;
  _5 = _1 + _4;
  _6 = *_5;
  if (w == _6)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.4086 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  _7 = *i;
  _8 = _7 + 1;
  *i = _8;

  <bb 6> :
  _9 = *i;
  _10 = ww->num;
  if (_9 < _10)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.4086 = -1;

  <bb 8> :
  return D.4086;

}



;; Function window_remove (window_remove, funcdef_no=26, decl_uid=4019, cgraph_uid=27, symbol_order=27)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 1 }
void window_remove (struct windows * ww, struct window * w)
{
  u_int i;

  <bb 2> :
  _1 = window_index (ww, w, &i);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  printf ("window not found%s", "");
  exit (1);

  <bb 4> :
  _2 = ww->num;
  _3 = _2 + 4294967295;
  i.0_4 = i;
  if (_3 > i.0_4)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _5 = ww->num;
  i.1_6 = i;
  _7 = _5 - i.1_6;
  _8 = _7 + 4294967295;
  _9 = (long unsigned int) _8;
  _10 = _9 * 8;
  _11 = ww->list;
  i.2_12 = i;
  _13 = (sizetype) i.2_12;
  _14 = _13 + 1;
  _15 = _14 * 8;
  _16 = _11 + _15;
  _17 = ww->list;
  i.3_18 = i;
  _19 = (long unsigned int) i.3_18;
  _20 = _19 * 8;
  _21 = _17 + _20;
  memmove (_21, _16, _10);

  <bb 6> :
  _22 = ww->num;
  _23 = _22 + 4294967295;
  ww->num = _23;
  _24 = ww->num;
  if (_24 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  _25 = ww->list;
  free (_25);
  ww->num = 0;
  ww->list = 0B;
  ww->space = 0;

  <bb 8> :
  _26 = w->references;
  _27 = _26 + 4294967295;
  w->references = _27;
  _28 = w->references;
  if (_28 == 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  window_destroy (w);
  window_remove (&windows, w);

  <bb 10> :
  i = {CLOBBER};
  return;

}



;; Function window_destroy (window_destroy, funcdef_no=27, decl_uid=3993, cgraph_uid=28, symbol_order=28)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void window_destroy (struct window * w)
{
  <bb 2> :
  _1 = w->fd;
  close (_1);
  _2 = w->in;
  buffer_destroy (_2);
  _3 = w->out;
  buffer_destroy (_3);
  free (w);
  return;

}



;; Function window_add (window_add, funcdef_no=28, decl_uid=4036, cgraph_uid=29, symbol_order=29)

Removing basic block 9
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9
;; 2 succs { 3 12 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 8 10 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 9 11 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 1 }
void window_add (struct windows * ww, struct window * w)
{
  u_int i;

  <bb 2> :
  _1 = window_index (ww, 0B, &i);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 3> :
  _2 = ww->num;
  if (_2 > 1073741823)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  printf ("number too big%s", "");
  exit (1);

  <bb 5> :
  _3 = ww->num;
  _4 = _3 + 1;
  _5 = 1073741824 / _4;
  if (_5 <= 7)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  printf ("size too big%s", "");
  exit (1);

  <bb 7> :
  _6 = ww->space;
  if (_6 == 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  ww->space = 80;
  _7 = ww->space;
  _8 = ww->list;
  _9 = xrealloc (_8, 1, _7);
  ww->list = _9;
  goto <bb 10>; [INV]

  <bb 9> :
  _10 = ww->space;
  _11 = ww->list;
  _12 = xrealloc (_11, 2, _10);
  ww->list = _12;
  _13 = ww->space;
  _14 = _13 * 2;
  ww->space = _14;

  <bb 10> :
  _15 = ww->space;
  _16 = ww->num;
  _17 = _16 + 1;
  _18 = (long unsigned int) _17;
  _19 = _18 * 8;
  if (_15 <= _19)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _20 = ww->list;
  _21 = ww->num;
  _22 = (long unsigned int) _21;
  _23 = _22 * 8;
  _24 = _20 + _23;
  *_24 = w;
  _25 = ww->num;
  _26 = _25 + 1;
  ww->num = _26;
  goto <bb 13>; [INV]

  <bb 12> :
  _27 = ww->list;
  i.4_28 = i;
  _29 = (long unsigned int) i.4_28;
  _30 = _29 * 8;
  _31 = _27 + _30;
  *_31 = w;

  <bb 13> :
  _32 = w->references;
  _33 = _32 + 1;
  w->references = _33;
  i = {CLOBBER};
  return;

}



;; Function window_create (window_create, funcdef_no=29, decl_uid=4051, cgraph_uid=30, symbol_order=30)

Removing basic block 6
Merging blocks 10 and 11
Merging blocks 10 and 12
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 8, latch 6
;;  depth 1, outer 0
;;  nodes: 8 6
;; 2 succs { 3 9 }
;; 3 succs { 4 8 }
;; 4 succs { 5 8 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 6 9 }
;; 9 succs { 1 }
struct window * window_create (const char * cmd, u_int sx, u_int sy)
{
  char * name;
  char * ptr;
  char pid[16];
  int mode;
  int fd;
  struct termios tio;
  struct window * w;
  struct window * D.4112;

  <bb 2> :
  w = malloc (200);
  w->fd = fd;
  _1 = buffer_create (8192);
  w->in = _1;
  _2 = buffer_create (8192);
  w->out = _2;
  name = strdup (cmd);
  ptr = strchr (name, 32);
  if (ptr != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 3> :
  if (ptr != name)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 4> :
  _3 = ptr + 18446744073709551615;
  _4 = *_3;
  if (_4 != 92)
    goto <bb 5>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 5> :
  *ptr = 0;
  goto <bb 9>; [INV]

  <bb 6> :
  _5 = ptr + 18446744073709551615;
  _6 = *_5;
  if (_6 != 92)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  *ptr = 0;
  goto <bb 9>; [INV]

  <bb 8> :
  _7 = ptr + 1;
  ptr = strchr (_7, 32);
  if (ptr != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _8 = &w->name;
  strcpy (_8, name);
  free (name);
  window_add (&windows, w);
  w->references = 0;
  D.4112 = w;
  tio = {CLOBBER};
  pid = {CLOBBER};
  return D.4112;

}



;; Function main (main, funcdef_no=30, decl_uid=4066, cgraph_uid=31, symbol_order=31)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
int main ()
{
  u_int sy;
  u_int sx;
  struct window * w;
  int D.4115;

  <bb 2> :
  w = window_create ("cmd", sx, sy);
  window_add (&windows, w);
  window_remove (&windows, w);
  D.4115 = 0;
  return D.4115;

}


